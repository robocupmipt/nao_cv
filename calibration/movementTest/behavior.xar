<?xml version="1.0" encoding="UTF-8" ?>
<ChoregrapheProject xmlns="http://www.ald.softbankrobotics.com/schema/choregraphe/project.xsd" xar_version="3">
  <Box name="root" id="-1" localization="8" tooltip="Root box of Choregraphe&apos;s project. Highest level possible." x="0" y="0">
    <bitmap>media/images/box/root.png</bitmap>
    <script language="4">
      <content>
        <![CDATA[]]>
      </content>
    </script>
    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
    <Timeline enable="0">
      <BehaviorLayer name="behavior_layer1">
        <BehaviorKeyframe name="keyframe1" index="1">
          <Diagram scale="100">
            <Box name="Calibrate" id="22" localization="8" tooltip="Using the images saved(SavedImages), Obtain the camera matrix." x="295" y="22">
              <bitmap>media/images/box/box-diagram.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[import sys,os
import cv2 as cv
import re
from subprocess import *

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        try:
            self.calibrate_camera()
            self.logger.info("Calibration Successful")
            self.sayWord("Calibration Successful")
        except:
            self.logger.info("Calibration Error")
            self.sayWord("Calibration Error")

        self.onStopped()

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well

    def sayWord(self,s):
        ttsProxy=ALProxy("ALTextToSpeech")
        ttsProxy.say(s)

    def calibrate_camera(self):
        #chessboard tiles (col,row)
        chessSize = (7,5)
        #number of image to get from video
        #nimage=int(7)
        nimage = imNum
        #Read an image to get information
        frameEx = cv.LoadImage("/home/nao/SavedImages/image0.jpg")
        self.logger.info("FRAME: "+str(frameEx.width)+" "+str(frameEx.height))
        framesize = (frameEx.width, frameEx.height)
        gray = cv.CreateImage((frameEx.width,frameEx.height), 8, 1)
        self.logger.info("GRAY")
        points = []
        nframe = 0
        f=0

        while nframe<nimage:

            gray_image=cv.CreateImage(cv.GetSize(frameEx),8,1)

            try:
                self.logger.info("Inside try")
                frame=cv.LoadImage("/home/nao/SavedImages/image"+str(nframe)+".jpg")
                self.logger.info("frame"+str(nframe)+"Loaded")
                f=f+1
                self.logger.info("f: "+str(f))
            except:
                self.logger.info("ERROR")

            self.logger.info("OutTry")
            cv.CvtColor(frame,gray_image,cv.CV_BGR2GRAY)
            #find corners
            (state,found)=cv.FindChessboardCorners(gray_image,(7,5),cv.CV_CALIB_CB_ADAPTIVE_THRESH| cv.CV_CALIB_CB_FILTER_QUADS)
            #state,found=cv.FindChessboardCorners(gray_image, chessSize, flags=cv.CV_CALIB_CB_FILTER_QUADS)
            self.logger.info("Found: "+str(found))
            self.logger.info("State: "+str(state))
            if state==1:
                #cv.CvtColor(frame, gray, cv.CV_BGR2GRAY)
                found = cv.FindCornerSubPix(gray_image, found, (11,11), (-1,-1), (cv.CV_TERMCRIT_ITER | cv.CV_TERMCRIT_EPS, 30, 0.1))
                #draw corners on image
                #cv.DrawChessboardCorners(frame, chessSize, found, state)
                #compute points
                for x,y in found:
                    points.append((x,y))
                nframe+=1
            #cv.ShowImage("ChessBoard",frame)
            #cv.WaitKey(4)

        # Now proceed Calibration
        self.logger.info("Out Loop")
        count = len(points)
        self.logger.info(str(count))
        numpoints = (chessSize[0]*chessSize[1])
        self.logger.info(str(numpoints))

        mat = cv.CreateMat(3,3,cv.CV_32FC1)
        distCoeffs = cv.CreateMat(4,1,cv.CV_32FC1)
        p3d = cv.CreateMat(count,3,cv.CV_32FC1) #compute 3D points
        p2d = cv.CreateMat(count,2,cv.CV_32FC1) #compute 2D points
        pointCounts = cv.CreateMat( nframe ,1,cv.CV_32SC1) #give numpoints per images
        cv.Set(pointCounts,numpoints)
        rvecs = cv.CreateMat(nframe,3,cv.CV_32FC1)
        tvecs = cv.CreateMat(nframe,3,cv.CV_32FC1)

        self.logger.info("Everything Set")

        i = 0
        row = 0
        col = 0
        cv.Set(p3d,0.0) #to set every values to 0.0... and not set Z value

        self.logger.info("Everything Set2")

        for p in points:
            p2d[i,0] = p[0]
            p2d[i,1] = p[1]
            p3d[i,0] = col
            p3d[i,1] = row
            col+=1

            if col >=chessSize[0]:
                row+=1
                col = 0
                if row>=chessSize[1]:
                    row = 0

            i+=1

        self.logger.info("Entering Calibration")

        cv.CalibrateCamera2(p3d, p2d, pointCounts, framesize, mat, distCoeffs, rvecs, tvecs, flags=0)

        text_file = open("/home/nao/SavedImages/CameraParameters/Camera_Matrix.txt", "w")

        #text_file.write(str(mat[0,0])+str(mat[0,1]))
        lines = [str(mat[0,0])," ",str(mat[0,1])," ",str(mat[0,2])," ",str(mat[1,0])," ",str(mat[1,1])," ",str(mat[1,2])," ",str(mat[2,0])," ",str(mat[2,1])," ",str(mat[2,2])]
        text_file.write("\n".join(lines))
        #for item in lines:
        #    text_file.write(item)
        text_file.close()

        self.logger.info(str(mat[0,0]))
        self.logger.info(str(mat[1,1]))]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
            </Box>
            <Box name="Get_Pattern_Images" id="36" localization="8" tooltip="Get Sufficient number of chessboard pattern Images" x="307" y="180">
              <bitmap>media/images/box/box-diagram.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="Initialize Image Counter_onStart" type="0" type_size="1" nature="2" inner="0" tooltip="This input has been automatically generated&#x0A;by converting several boxes into a single box." id="2" />
              <Output name="PosesForImages_PatternImages_detectionGood" type="0" type_size="1" nature="2" inner="0" tooltip="This output has been automatically generated&#x0A;by converting several boxes into a single box." id="3" />
              <Timeline enable="0">
                <BehaviorLayer name="behavior_layer1">
                  <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram scale="62.9961">
                      <Box name="Walk To" id="1" localization="8" tooltip="Make NAO walk to a configured point relative to its current location." x="245" y="112">
                        <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #~ self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        self.onStopped()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                        <Parameter name="Distance X (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0.2" min="-2" max="2" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="5" />
                        <Parameter name="Distance Y (m)" inherits_from_parent="0" content_type="2" value="-0.25" default_value="0" min="-2" max="2" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="6" />
                        <Parameter name="Theta (rad)" inherits_from_parent="0" content_type="2" value="0.3" default_value="0" min="-3.14" max="3.14" tooltip="The orientation in radians for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="7" />
                        <Parameter name="Left arm enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate left arm motion during the walk to make it more realistic." id="8" />
                        <Parameter name="Right arm enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate right arm motion during the walk to make it more realistic." id="9" />
                        <Parameter name="Stop walk when foot contact is lost" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If this option is activated, NAO stops walking when he loses foot contact with&#x0A;the ground. Else, he just keeps walking." id="10" />
                        <Timeline enable="0">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram>
                                <Box name="Walk To Advanced" id="3" localization="8" tooltip="Make NAO walk to a configured point relative to his current location with specific gait parameters." x="195" y="73">
                                  <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.motion = ALProxy("ALMotion")
        footGaitConfigMin = self.motion.getFootGaitConfig("Min")
        footGaitConfigMax = self.motion.getFootGaitConfig("Max")
        self.dFootGaitConfig = {}
        for i in range(len(footGaitConfigMin)):
            # [0] = key ("MaxStepX" for ex)
            # [1] = min
            # [2] = max
            self.dFootGaitConfig[footGaitConfigMin[i][0]] = [footGaitConfigMin[i][1], footGaitConfigMax[i][1]]

    def onLoad(self):
        pass

    def onUnload(self):
        self.motion.setWalkTargetVelocity(0.0, 0.0, 0.0, 0.0)

    def onInput_onStart(self):
        # send walk configuration to ALMotion
        self.motion.setWalkArmsEnable(self.getParameter("Left arm enabled"), self.getParameter("Right arm enabled"))
        self.motion.setMotionConfig([["ENABLE_FOOT_CONTACT_PROTECTION",self.getParameter("Stop walk when foot contact is lost")]])
        for k, v in self.dFootGaitConfig.iteritems():
            for unit in ["m", "rad", "%"]:
                try: # try for each unit and do nothing if value in gaitConfig but not in parameters
                    param = self.getParameter( str(k) + " (" + unit + ")" )
                    if( unit == "%" ):
                        param = param / 100.
                    if( len(v) == 2 ):
                        v.append( param )
                    else:
                        v[2] = param
                    break
                except:
                    pass

        gaitConfig = []
        for k, v in self.dFootGaitConfig.iteritems():
            try:
                gaitConfig.append( [k, v[2]] )
            except: # if some value added in gaitConfig but not in parameters
                pass
        # active walk process
        self.motion.walkTo(self.getParameter("Distance X (m)"), self.getParameter("Distance Y (m)"), self.getParameter("Theta (rad)"), gaitConfig)
         # The walk is finished so output
        self.onStopped() #~ activate output of the box

    def onInput_onStop(self):
        self.onUnload()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                  <Parameter name="Distance X (m)" inherits_from_parent="1" content_type="2" value="0" default_value="0.2" min="-2" max="2" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="5" />
                                  <Parameter name="Distance Y (m)" inherits_from_parent="1" content_type="2" value="0.2" default_value="0" min="-2" max="2" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="6" />
                                  <Parameter name="Theta (rad)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-3.14" max="3.14" tooltip="The orientation in radians for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="7" />
                                  <Parameter name="Left arm enabled" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="Activate left arm motion during the walk to make it more realistic." id="8" />
                                  <Parameter name="Right arm enabled" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="Activate right arm motion during the walk to make it more realistic." id="9" />
                                  <Parameter name="Stop walk when foot contact is lost" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="If this option is activated, NAO stops walking when he loses foot contact with&#x0A;the ground. Else, he just keeps walking." id="10" />
                                  <Parameter name="MaxStepX (m)" inherits_from_parent="0" content_type="2" value="0.022804" default_value="0.04" min="0.001" max="0.06" tooltip="Maximum length of forward/backward step." id="11" />
                                  <Parameter name="MaxStepY (m)" inherits_from_parent="0" content_type="2" value="0.126652" default_value="0.14" min="0.101" max="0.16" tooltip="Maximum length of lateral step." id="12" />
                                  <Parameter name="MaxStepTheta (rad)" inherits_from_parent="0" content_type="2" value="0.228217" default_value="0.349065" min="0.001" max="0.523598" tooltip="Maximum length of rotational step." id="13" />
                                  <Parameter name="MaxStepFrequency (%)" inherits_from_parent="0" content_type="1" value="49" default_value="100" min="0" max="100" tooltip="Maximum step frequency." id="14" />
                                  <Parameter name="StepHeight (m)" inherits_from_parent="0" content_type="2" value="0.02" default_value="0.02" min="0.005" max="0.04" tooltip="Height of the step i.e. how high NAO put his feet up during the walk." id="15" />
                                  <Parameter name="TorsoWx (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-0.122173" max="0.122173" tooltip="Lateral angle of the torso during the walk.&#x0A;&#x0A;Note: A positive value means that NAO will be tilted to the right. A negative&#x0A;value means he is tilted to the left." id="16" />
                                  <Parameter name="TorsoWy (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-0.122173" max="0.122173" tooltip="Angle of the torso toward forward/backward during the walk.&#x0A;&#x0A;Note: A positive value means that NAO will be inclined forward. A negative&#x0A;value means he is inclined backward." id="17" />
                                  <Resource name="Legs" type="Lock" timeout="0" />
                                </Box>
                                <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="2" />
                                <Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                        <Resource name="Legs" type="Lock" timeout="0" />
                      </Box>
                      <Box name="Walk To" id="4" localization="8" tooltip="Make NAO walk to a configured point relative to its current location." x="249" y="419">
                        <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #~ self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        self.onStopped()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                        <Parameter name="Distance X (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0.2" min="-2" max="2" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="5" />
                        <Parameter name="Distance Y (m)" inherits_from_parent="0" content_type="2" value="-0.25" default_value="0" min="-2" max="2" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="6" />
                        <Parameter name="Theta (rad)" inherits_from_parent="0" content_type="2" value="0.3" default_value="0" min="-3.14" max="3.14" tooltip="The orientation in radians for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="7" />
                        <Parameter name="Left arm enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate left arm motion during the walk to make it more realistic." id="8" />
                        <Parameter name="Right arm enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate right arm motion during the walk to make it more realistic." id="9" />
                        <Parameter name="Stop walk when foot contact is lost" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If this option is activated, NAO stops walking when he loses foot contact with&#x0A;the ground. Else, he just keeps walking." id="10" />
                        <Timeline enable="0">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram>
                                <Box name="Walk To Advanced" id="3" localization="8" tooltip="Make NAO walk to a configured point relative to his current location with specific gait parameters." x="195" y="73">
                                  <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.motion = ALProxy("ALMotion")
        footGaitConfigMin = self.motion.getFootGaitConfig("Min")
        footGaitConfigMax = self.motion.getFootGaitConfig("Max")
        self.dFootGaitConfig = {}
        for i in range(len(footGaitConfigMin)):
            # [0] = key ("MaxStepX" for ex)
            # [1] = min
            # [2] = max
            self.dFootGaitConfig[footGaitConfigMin[i][0]] = [footGaitConfigMin[i][1], footGaitConfigMax[i][1]]

    def onLoad(self):
        pass

    def onUnload(self):
        self.motion.setWalkTargetVelocity(0.0, 0.0, 0.0, 0.0)

    def onInput_onStart(self):
        # send walk configuration to ALMotion
        self.motion.setWalkArmsEnable(self.getParameter("Left arm enabled"), self.getParameter("Right arm enabled"))
        self.motion.setMotionConfig([["ENABLE_FOOT_CONTACT_PROTECTION",self.getParameter("Stop walk when foot contact is lost")]])
        for k, v in self.dFootGaitConfig.iteritems():
            for unit in ["m", "rad", "%"]:
                try: # try for each unit and do nothing if value in gaitConfig but not in parameters
                    param = self.getParameter( str(k) + " (" + unit + ")" )
                    if( unit == "%" ):
                        param = param / 100.
                    if( len(v) == 2 ):
                        v.append( param )
                    else:
                        v[2] = param
                    break
                except:
                    pass

        gaitConfig = []
        for k, v in self.dFootGaitConfig.iteritems():
            try:
                gaitConfig.append( [k, v[2]] )
            except: # if some value added in gaitConfig but not in parameters
                pass
        # active walk process
        self.motion.walkTo(self.getParameter("Distance X (m)"), self.getParameter("Distance Y (m)"), self.getParameter("Theta (rad)"), gaitConfig)
         # The walk is finished so output
        self.onStopped() #~ activate output of the box

    def onInput_onStop(self):
        self.onUnload()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                  <Parameter name="Distance X (m)" inherits_from_parent="1" content_type="2" value="0" default_value="0.2" min="-2" max="2" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="5" />
                                  <Parameter name="Distance Y (m)" inherits_from_parent="1" content_type="2" value="0.2" default_value="0" min="-2" max="2" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="6" />
                                  <Parameter name="Theta (rad)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-3.14" max="3.14" tooltip="The orientation in radians for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="7" />
                                  <Parameter name="Left arm enabled" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="Activate left arm motion during the walk to make it more realistic." id="8" />
                                  <Parameter name="Right arm enabled" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="Activate right arm motion during the walk to make it more realistic." id="9" />
                                  <Parameter name="Stop walk when foot contact is lost" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="If this option is activated, NAO stops walking when he loses foot contact with&#x0A;the ground. Else, he just keeps walking." id="10" />
                                  <Parameter name="MaxStepX (m)" inherits_from_parent="0" content_type="2" value="0.022804" default_value="0.04" min="0.001" max="0.06" tooltip="Maximum length of forward/backward step." id="11" />
                                  <Parameter name="MaxStepY (m)" inherits_from_parent="0" content_type="2" value="0.126652" default_value="0.14" min="0.101" max="0.16" tooltip="Maximum length of lateral step." id="12" />
                                  <Parameter name="MaxStepTheta (rad)" inherits_from_parent="0" content_type="2" value="0.228217" default_value="0.349065" min="0.001" max="0.523598" tooltip="Maximum length of rotational step." id="13" />
                                  <Parameter name="MaxStepFrequency (%)" inherits_from_parent="0" content_type="1" value="49" default_value="100" min="0" max="100" tooltip="Maximum step frequency." id="14" />
                                  <Parameter name="StepHeight (m)" inherits_from_parent="0" content_type="2" value="0.02" default_value="0.02" min="0.005" max="0.04" tooltip="Height of the step i.e. how high NAO put his feet up during the walk." id="15" />
                                  <Parameter name="TorsoWx (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-0.122173" max="0.122173" tooltip="Lateral angle of the torso during the walk.&#x0A;&#x0A;Note: A positive value means that NAO will be tilted to the right. A negative&#x0A;value means he is tilted to the left." id="16" />
                                  <Parameter name="TorsoWy (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-0.122173" max="0.122173" tooltip="Angle of the torso toward forward/backward during the walk.&#x0A;&#x0A;Note: A positive value means that NAO will be inclined forward. A negative&#x0A;value means he is inclined backward." id="17" />
                                  <Resource name="Legs" type="Lock" timeout="0" />
                                </Box>
                                <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="2" />
                                <Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                        <Resource name="Legs" type="Lock" timeout="0" />
                      </Box>
                      <Box name="Walk To" id="3" localization="8" tooltip="Make NAO walk to a configured point relative to its current location." x="762" y="110">
                        <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #~ self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        self.onStopped()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                        <Parameter name="Distance X (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0.2" min="-2" max="2" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="5" />
                        <Parameter name="Distance Y (m)" inherits_from_parent="0" content_type="2" value="1" default_value="0" min="-2" max="2" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="6" />
                        <Parameter name="Theta (rad)" inherits_from_parent="0" content_type="2" value="-0.8" default_value="0" min="-3.14" max="3.14" tooltip="The orientation in radians for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="7" />
                        <Parameter name="Left arm enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate left arm motion during the walk to make it more realistic." id="8" />
                        <Parameter name="Right arm enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate right arm motion during the walk to make it more realistic." id="9" />
                        <Parameter name="Stop walk when foot contact is lost" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If this option is activated, NAO stops walking when he loses foot contact with&#x0A;the ground. Else, he just keeps walking." id="10" />
                        <Timeline enable="0">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram>
                                <Box name="Walk To Advanced" id="3" localization="8" tooltip="Make NAO walk to a configured point relative to his current location with specific gait parameters." x="195" y="73">
                                  <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.motion = ALProxy("ALMotion")
        footGaitConfigMin = self.motion.getFootGaitConfig("Min")
        footGaitConfigMax = self.motion.getFootGaitConfig("Max")
        self.dFootGaitConfig = {}
        for i in range(len(footGaitConfigMin)):
            # [0] = key ("MaxStepX" for ex)
            # [1] = min
            # [2] = max
            self.dFootGaitConfig[footGaitConfigMin[i][0]] = [footGaitConfigMin[i][1], footGaitConfigMax[i][1]]

    def onLoad(self):
        pass

    def onUnload(self):
        self.motion.setWalkTargetVelocity(0.0, 0.0, 0.0, 0.0)

    def onInput_onStart(self):
        # send walk configuration to ALMotion
        self.motion.setWalkArmsEnable(self.getParameter("Left arm enabled"), self.getParameter("Right arm enabled"))
        self.motion.setMotionConfig([["ENABLE_FOOT_CONTACT_PROTECTION",self.getParameter("Stop walk when foot contact is lost")]])
        for k, v in self.dFootGaitConfig.iteritems():
            for unit in ["m", "rad", "%"]:
                try: # try for each unit and do nothing if value in gaitConfig but not in parameters
                    param = self.getParameter( str(k) + " (" + unit + ")" )
                    if( unit == "%" ):
                        param = param / 100.
                    if( len(v) == 2 ):
                        v.append( param )
                    else:
                        v[2] = param
                    break
                except:
                    pass

        gaitConfig = []
        for k, v in self.dFootGaitConfig.iteritems():
            try:
                gaitConfig.append( [k, v[2]] )
            except: # if some value added in gaitConfig but not in parameters
                pass
        # active walk process
        self.motion.walkTo(self.getParameter("Distance X (m)"), self.getParameter("Distance Y (m)"), self.getParameter("Theta (rad)"), gaitConfig)
         # The walk is finished so output
        self.onStopped() #~ activate output of the box

    def onInput_onStop(self):
        self.onUnload()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                  <Parameter name="Distance X (m)" inherits_from_parent="1" content_type="2" value="0" default_value="0.2" min="-2" max="2" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="5" />
                                  <Parameter name="Distance Y (m)" inherits_from_parent="1" content_type="2" value="0.2" default_value="0" min="-2" max="2" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="6" />
                                  <Parameter name="Theta (rad)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-3.14" max="3.14" tooltip="The orientation in radians for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="7" />
                                  <Parameter name="Left arm enabled" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="Activate left arm motion during the walk to make it more realistic." id="8" />
                                  <Parameter name="Right arm enabled" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="Activate right arm motion during the walk to make it more realistic." id="9" />
                                  <Parameter name="Stop walk when foot contact is lost" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="If this option is activated, NAO stops walking when he loses foot contact with&#x0A;the ground. Else, he just keeps walking." id="10" />
                                  <Parameter name="MaxStepX (m)" inherits_from_parent="0" content_type="2" value="0.022804" default_value="0.04" min="0.001" max="0.06" tooltip="Maximum length of forward/backward step." id="11" />
                                  <Parameter name="MaxStepY (m)" inherits_from_parent="0" content_type="2" value="0.126652" default_value="0.14" min="0.101" max="0.16" tooltip="Maximum length of lateral step." id="12" />
                                  <Parameter name="MaxStepTheta (rad)" inherits_from_parent="0" content_type="2" value="0.228217" default_value="0.349065" min="0.001" max="0.523598" tooltip="Maximum length of rotational step." id="13" />
                                  <Parameter name="MaxStepFrequency (%)" inherits_from_parent="0" content_type="1" value="49" default_value="100" min="0" max="100" tooltip="Maximum step frequency." id="14" />
                                  <Parameter name="StepHeight (m)" inherits_from_parent="0" content_type="2" value="0.02" default_value="0.02" min="0.005" max="0.04" tooltip="Height of the step i.e. how high NAO put his feet up during the walk." id="15" />
                                  <Parameter name="TorsoWx (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-0.122173" max="0.122173" tooltip="Lateral angle of the torso during the walk.&#x0A;&#x0A;Note: A positive value means that NAO will be tilted to the right. A negative&#x0A;value means he is tilted to the left." id="16" />
                                  <Parameter name="TorsoWy (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-0.122173" max="0.122173" tooltip="Angle of the torso toward forward/backward during the walk.&#x0A;&#x0A;Note: A positive value means that NAO will be inclined forward. A negative&#x0A;value means he is inclined backward." id="17" />
                                  <Resource name="Legs" type="Lock" timeout="0" />
                                </Box>
                                <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="2" />
                                <Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                        <Resource name="Legs" type="Lock" timeout="0" />
                      </Box>
                      <Box name="Initialize Image Counter" id="13" localization="8" tooltip="Initializes a global variable imNum to 0. This box will be used to take sequence of images." x="58" y="15">
                        <bitmap>media/images/box/box-diagram.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[
global imNum
imNum = 0

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        self.onStopped() #~ activate output of the box


    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                      </Box>
                      <Box name="Stand Up" id="15" localization="8" tooltip="NAO tries to stand up from any position for a number of tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." x="60" y="492">
                        <bitmap>media/images/box/movement/stand.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated when NAO succeed in standing up." id="4" />
                        <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot failed to stand up after n tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." id="5" />
                        <Parameter name="Maximum of tries" inherits_from_parent="0" content_type="1" value="3" default_value="3" min="1" max="10" tooltip="The maximum number that the robot tries to stand up and fails before the failure&#x0A;output is stimulated." id="6" />
                        <Parameter name="Side" inherits_from_parent="0" content_type="3" value="Left" default_value="Random" custom_choice="0" tooltip='Side of the arm used to stand up. If it is set to &quot;Random&quot; the side is chosen randomly.' id="7">
                          <Choice value="Left" />
                          <Choice value="Random" />
                          <Choice value="Right" />
                        </Parameter>
                        <Timeline enable="0">
                          <BehaviorLayer name="StandUpBehavior">
                            <BehaviorKeyframe name="DetectRobotPose" index="1">
                              <Diagram>
                                <Box name="Check Count" id="7" localization="8" tooltip="Check number of tries. If the current try number is higher than the maximum&#x0A;number of tries set in parent box parameters, then the failed output is&#x0A;stimulated, else the tryAgain output is stimulated." x="863" y="179">
                                  <bitmap>media/images/box/box-script.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.nTries = 0

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        self.nTries += 1
        if (self.nTries > self.getParameter("Maximum of tries")):
            self.failed()
        else:
            self.tryAgain()

    def onInput_onStop(self):
        self.onUnload()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Output name="failed" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent if the current try number is higher than the maximum number of tries&#x0A;set in parent box parameters." id="3" />
                                  <Output name="tryAgain" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent if the current try number is smaller than or equal to the maximum&#x0A;number of tries set in parent box parameters." id="4" />
                                </Box>
                                <Box name="Switch Case" id="10" localization="8" tooltip="Test input value and stimulate the output matching to this value. If there is no&#x0A;output matching, the default output (onDefault) is stimulated.&#x0A;&#x0A;You can edit a case by left double-clicking on the line. You can add a&#x0A;case by right clicking on a line and selecting &apos;Insert a row&apos;. You can delete&#x0A;a case by right clicking on a line and selecting &apos;Remove a row&apos;." plugin="dispatcher_plugin" x="444" y="86">
                                  <bitmap>media/images/box/interaction/choice.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion("Stand")):
			self.output_1(p)
		elif(p == self.typeConversion("Unknown")):
			self.output_2(p)
		elif(p == self.typeConversion("HeadBack")):
			self.output_3(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]>
                                    </content>
                                  </script>
                                  <pluginContent>
                                    <keywords>
                                      <keyword>&quot;Stand&quot;</keyword>
                                      <keyword>&quot;Unknown&quot;</keyword>
                                      <keyword>&quot;HeadBack&quot;</keyword>
                                      <keyword></keyword>
                                    </keywords>
                                  </pluginContent>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Value to test." id="2" />
                                  <Output name="onDefault" type="1" type_size="1" nature="1" inner="0" tooltip="If the input value does not match any value set on the box." id="3" />
                                  <Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="4" />
                                  <Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="5" />
                                  <Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="6" />
                                </Box>
                                <Box name="Right Stand Motion" id="20" localization="8" tooltip="The robot makes the right motion to stand up depending on its current position." x="562" y="346">
                                  <bitmap>media/images/box/movement/stand.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        self.count = 0
        pass

    def onInput_onStop(self):
        self.onUnload()
        pass]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent after a step to sit down is done." id="4" />
                                  <Timeline enable="0">
                                    <BehaviorLayer name="SitDownBehavior">
                                      <BehaviorKeyframe name="DetectRobotPose" index="1">
                                        <Diagram>
                                          <Box name="Switch Case" id="9" localization="8" tooltip="Test input value and stimulate the output matching to this value. If there is no&#x0A;output matching, the default output (onDefault) is stimulated.&#x0A;&#x0A;You can edit a case by left double-clicking on the line. You can add a&#x0A;case by right clicking on a line and selecting &apos;Insert a row&apos;. You can delete&#x0A;a case by right clicking on a line and selecting &apos;Remove a row&apos;." plugin="dispatcher_plugin" x="230" y="73">
                                            <bitmap>media/images/box/interaction/choice.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion("Left")):
			self.output_1(p)
		elif(p == self.typeConversion("Right")):
			self.output_2(p)
		elif(p == self.typeConversion("Back")):
			self.output_3(p)
		elif(p == self.typeConversion("Knee")):
			self.output_4(p)
		elif(p == self.typeConversion("Frog")):
			self.output_5(p)
		elif(p == self.typeConversion("Belly")):
			self.output_6(p)
		elif(p == self.typeConversion("Crouch")):
			self.output_7(p)
		elif(p == self.typeConversion("Sit")):
			self.output_8(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]>
                                              </content>
                                            </script>
                                            <pluginContent>
                                              <keywords>
                                                <keyword>&quot;Left&quot;</keyword>
                                                <keyword>&quot;Right&quot;</keyword>
                                                <keyword>&quot;Back&quot;</keyword>
                                                <keyword>&quot;Knee&quot;</keyword>
                                                <keyword>&quot;Frog&quot;</keyword>
                                                <keyword>&quot;Belly&quot;</keyword>
                                                <keyword>&quot;Crouch&quot;</keyword>
                                                <keyword>&quot;Sit&quot;</keyword>
                                                <keyword></keyword>
                                              </keywords>
                                            </pluginContent>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Value to test." id="2" />
                                            <Output name="onDefault" type="1" type_size="1" nature="1" inner="0" tooltip="If the input value does not match any value set on the box." id="3" />
                                            <Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="4" />
                                            <Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="5" />
                                            <Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="6" />
                                            <Output name="output_4" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="7" />
                                            <Output name="output_5" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="8" />
                                            <Output name="output_6" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="9" />
                                            <Output name="output_7" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="10" />
                                            <Output name="output_8" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="11" />
                                          </Box>
                                          <Box name="SitToCrouch" id="12" localization="8" tooltip="First motion to Stand up from a sitting position" x="689" y="627">
                                            <bitmap>media/images/box/movement/move.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #~ self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            <Timeline enable="1" fps="25" start_frame="1" end_frame="180" size="180" resources_acquisition="1">
                                              <ActuatorList model="nao">
                                                <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                                  <Key frame="15" value="0.0854875" />
                                                  <Key frame="28" value="-16" />
                                                  <Key frame="39" value="-19.9538" />
                                                  <Key frame="55" value="-27" />
                                                  <Key frame="75" value="-30" />
                                                  <Key frame="94" value="-16.4382" />
                                                  <Key frame="126" value="-0.538656" />
                                                  <Key frame="180" value="-0.538656" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                                  <Key frame="15" value="21.2674" />
                                                  <Key frame="28" value="21.1795" />
                                                  <Key frame="39" value="13" />
                                                  <Key frame="55" value="15.8" />
                                                  <Key frame="75" value="9" />
                                                  <Key frame="94" value="20.0369" />
                                                  <Key frame="126" value="21.707" />
                                                  <Key frame="180" value="21.707" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                                  <Key frame="15" value="28.4" />
                                                  <Key frame="28" value="32.9" />
                                                  <Key frame="39" value="35.9" />
                                                  <Key frame="55" value="58.094" />
                                                  <Key frame="64" value="37.3" />
                                                  <Key frame="75" value="43.0645" />
                                                  <Key frame="94" value="64.2" />
                                                  <Key frame="109" value="67.2" />
                                                  <Key frame="126" value="80.7" />
                                                  <Key frame="180" value="61.2" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                                  <Key frame="15" value="13.9724" />
                                                  <Key frame="21" value="28.3" />
                                                  <Key frame="28" value="23.8163" />
                                                  <Key frame="39" value="29.2" />
                                                  <Key frame="55" value="43.2" />
                                                  <Key frame="64" value="35" />
                                                  <Key frame="75" value="29.2655" />
                                                  <Key frame="94" value="4.39218" />
                                                  <Key frame="109" value="8.87466" />
                                                  <Key frame="126" value="39.461" />
                                                  <Key frame="180" value="33.9238" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                                  <Key frame="15" value="-31.204" />
                                                  <Key frame="28" value="-40.7842" />
                                                  <Key frame="39" value="-42.1904" />
                                                  <Key frame="55" value="-46.8487" />
                                                  <Key frame="64" value="-17.0534" />
                                                  <Key frame="75" value="-9.31893" />
                                                  <Key frame="94" value="-49.837" />
                                                  <Key frame="109" value="-58.0988" />
                                                  <Key frame="126" value="-52.7374" />
                                                  <Key frame="180" value="-20.9206" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                                  <Key frame="15" value="-60.9066" />
                                                  <Key frame="28" value="-53.5237" />
                                                  <Key frame="39" value="-45.4376" />
                                                  <Key frame="55" value="-53.9631" />
                                                  <Key frame="64" value="-61.1702" />
                                                  <Key frame="75" value="-35.7695" />
                                                  <Key frame="94" value="-51.0627" />
                                                  <Key frame="109" value="-48.7775" />
                                                  <Key frame="126" value="-70.8383" />
                                                  <Key frame="180" value="-61.7855" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                                  <Key frame="15" value="-42.542" />
                                                  <Key frame="28" value="-44.2119" />
                                                  <Key frame="39" value="-42.1904" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                                  <Key frame="15" value="0.0181527" />
                                                  <Key frame="28" value="0.0665718" />
                                                  <Key frame="39" value="0.0720262" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                                  <Key frame="15" value="32.4344" />
                                                  <Key frame="21" value="42" />
                                                  <Key frame="28" value="76.0287" />
                                                  <Key frame="39" value="112.68" />
                                                  <Key frame="55" value="119.496" />
                                                  <Key frame="75" value="118.48" />
                                                  <Key frame="85" value="119.496" />
                                                  <Key frame="94" value="116.195" />
                                                  <Key frame="109" value="92.4645" />
                                                  <Key frame="126" value="81.5659" />
                                                  <Key frame="180" value="69.7005" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                                  <Key frame="15" value="-20.1296" />
                                                  <Key frame="28" value="-38.6748" />
                                                  <Key frame="39" value="-36.5654" />
                                                  <Key frame="48" value="-36" />
                                                  <Key frame="55" value="-0.5" />
                                                  <Key frame="75" value="-29.1825" />
                                                  <Key frame="85" value="-31.7313" />
                                                  <Key frame="94" value="-32.3466" />
                                                  <Key frame="109" value="-38.1474" />
                                                  <Key frame="126" value="-33.0497" />
                                                  <Key frame="180" value="-15.0319" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                                  <Key frame="15" value="27.5077" />
                                                  <Key frame="28" value="104.413" />
                                                  <Key frame="39" value="117.685" />
                                                  <Key frame="55" value="-5" />
                                                  <Key frame="75" value="-4.66067" />
                                                  <Key frame="85" value="-4.39699" />
                                                  <Key frame="94" value="-3.78175" />
                                                  <Key frame="109" value="18.1033" />
                                                  <Key frame="126" value="96.239" />
                                                  <Key frame="180" value="55.3694" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                                  <Key frame="15" value="69.7005" />
                                                  <Key frame="28" value="58.9778" />
                                                  <Key frame="39" value="39.0263" />
                                                  <Key frame="48" value="49" />
                                                  <Key frame="55" value="0.5" />
                                                  <Key frame="75" value="4.57277" />
                                                  <Key frame="85" value="3.43018" />
                                                  <Key frame="94" value="0.969213" />
                                                  <Key frame="109" value="19.0749" />
                                                  <Key frame="126" value="28.4793" />
                                                  <Key frame="180" value="55.7258" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                                  <Key frame="15" value="61.6097" />
                                                  <Key frame="28" value="62.7523" />
                                                  <Key frame="39" value="62.3128" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                                  <Key frame="15" value="0.0181527" />
                                                  <Key frame="28" value="0.126571" />
                                                  <Key frame="39" value="0.140026" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                                  <Key frame="15" value="-38.7578" />
                                                  <Key frame="28" value="-37.3412" />
                                                  <Key frame="39" value="-43.0541" />
                                                  <Key frame="75" value="-28.5959" />
                                                  <Key frame="82" value="-36.9896" />
                                                  <Key frame="94" value="-49.2155" />
                                                  <Key frame="126" value="-24.871" />
                                                  <Key frame="145" value="-16.1697" />
                                                  <Key frame="180" value="-9.92936" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                                  <Key frame="15" value="8.00055" />
                                                  <Key frame="28" value="8.30857" />
                                                  <Key frame="39" value="8.48435" />
                                                  <Key frame="55" value="31" />
                                                  <Key frame="75" value="8.87947" />
                                                  <Key frame="82" value="-1.44741" />
                                                  <Key frame="94" value="-10" />
                                                  <Key frame="126" value="10.4615" />
                                                  <Key frame="145" value="25.2273" />
                                                  <Key frame="180" value="7.4732" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                                  <Key frame="15" value="-89.9987" />
                                                  <Key frame="28" value="-90" />
                                                  <Key frame="39" value="-90" />
                                                  <Key frame="55" value="-90" />
                                                  <Key frame="75" value="-49.1057" />
                                                  <Key frame="82" value="-34.1405" />
                                                  <Key frame="94" value="-3" />
                                                  <Key frame="109" value="-23" />
                                                  <Key frame="126" value="-39.5489" />
                                                  <Key frame="145" value="-43.2403" />
                                                  <Key frame="180" value="-41.8341" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                                  <Key frame="15" value="41.4825" />
                                                  <Key frame="28" value="54.9601" />
                                                  <Key frame="39" value="67.8801" />
                                                  <Key frame="55" value="96" />
                                                  <Key frame="75" value="121.04" />
                                                  <Key frame="82" value="121.04" />
                                                  <Key frame="94" value="121.04" />
                                                  <Key frame="126" value="114.696" />
                                                  <Key frame="145" value="121.039" />
                                                  <Key frame="180" value="92.7234" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                                  <Key frame="15" value="44.4708" />
                                                  <Key frame="28" value="43.2822" />
                                                  <Key frame="39" value="43.2822" />
                                                  <Key frame="55" value="38" />
                                                  <Key frame="75" value="-26" />
                                                  <Key frame="82" value="-39" />
                                                  <Key frame="94" value="-63" />
                                                  <Key frame="126" value="-68.15" />
                                                  <Key frame="145" value="-68.15" />
                                                  <Key frame="180" value="-42.1904" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                                  <Key frame="15" value="-2.89802" />
                                                  <Key frame="28" value="-0.315349" />
                                                  <Key frame="39" value="1.53038" />
                                                  <Key frame="55" value="-10" />
                                                  <Key frame="75" value="-22.6737" />
                                                  <Key frame="82" value="-4.97361" />
                                                  <Key frame="94" value="-5.94664" />
                                                  <Key frame="126" value="0.617646" />
                                                  <Key frame="145" value="-0.964405" />
                                                  <Key frame="180" value="-5.09532" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                                  <Key frame="15" value="-8.25942" />
                                                  <Key frame="28" value="-7.64074" />
                                                  <Key frame="39" value="-12.0353" />
                                                  <Key frame="55" value="-31" />
                                                  <Key frame="75" value="-31.9952" />
                                                  <Key frame="82" value="-42.0943" />
                                                  <Key frame="94" value="-35" />
                                                  <Key frame="126" value="-14.5876" />
                                                  <Key frame="145" value="-4.65586" />
                                                  <Key frame="180" value="-4.30429" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                                  <Key frame="15" value="-88.9488" />
                                                  <Key frame="28" value="-90" />
                                                  <Key frame="39" value="-90" />
                                                  <Key frame="55" value="-90" />
                                                  <Key frame="75" value="-87.3668" />
                                                  <Key frame="82" value="-90" />
                                                  <Key frame="94" value="-89.3612" />
                                                  <Key frame="126" value="-48.6944" />
                                                  <Key frame="145" value="-38.8505" />
                                                  <Key frame="180" value="-37.1806" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                                  <Key frame="15" value="48.3429" />
                                                  <Key frame="28" value="54.6752" />
                                                  <Key frame="39" value="69.6168" />
                                                  <Key frame="55" value="96" />
                                                  <Key frame="75" value="70" />
                                                  <Key frame="82" value="72.9567" />
                                                  <Key frame="94" value="63" />
                                                  <Key frame="126" value="34.1044" />
                                                  <Key frame="145" value="82.5327" />
                                                  <Key frame="180" value="90.5309" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                                  <Key frame="15" value="45.003" />
                                                  <Key frame="28" value="43.5603" />
                                                  <Key frame="39" value="43.5603" />
                                                  <Key frame="55" value="38" />
                                                  <Key frame="75" value="45" />
                                                  <Key frame="82" value="38.3747" />
                                                  <Key frame="94" value="45" />
                                                  <Key frame="109" value="45" />
                                                  <Key frame="118" value="31" />
                                                  <Key frame="126" value="27.6004" />
                                                  <Key frame="145" value="-21.1795" />
                                                  <Key frame="180" value="-45.1739" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                                  <Key frame="15" value="2.81494" />
                                                  <Key frame="28" value="0.0417638" />
                                                  <Key frame="39" value="-0.0461279" />
                                                  <Key frame="55" value="10" />
                                                  <Key frame="75" value="0.532261" />
                                                  <Key frame="82" value="4.26057" />
                                                  <Key frame="88" value="-9" />
                                                  <Key frame="94" value="-6" />
                                                  <Key frame="109" value="14" />
                                                  <Key frame="118" value="20" />
                                                  <Key frame="126" value="25.2273" />
                                                  <Key frame="145" value="24.2605" />
                                                  <Key frame="180" value="5.18802" />
                                                </ActuatorCurve>
                                              </ActuatorList>
                                            </Timeline>
                                          </Box>
                                          <Box name="CrouchToStand" id="3" localization="8" tooltip="From the old bad position" x="1206" y="505">
                                            <bitmap>media/images/box/movement/move.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		""

	def onInput_onStop(self):
		""]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="15">
                                              <ActuatorList model="nao">
                                                <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                                  <Key frame="15" value="3.86483" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                                  <Key frame="15" value="-2.37548" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                                  <Key frame="15" value="90.8776" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                                  <Key frame="15" value="12.8298" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                                  <Key frame="15" value="-58.5383" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                                  <Key frame="15" value="-37.791" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                                  <Key frame="15" value="-43.0693" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                                  <Key frame="15" value="0.26148" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                                  <Key frame="15" value="84.1148" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                                  <Key frame="15" value="-8.44001" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                                  <Key frame="15" value="52.1174" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                                  <Key frame="15" value="21.2722" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                                  <Key frame="15" value="60.4671" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                                  <Key frame="15" value="0.218207" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                                  <Key frame="15" value="-13.7087" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                                  <Key frame="15" value="8.5279" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                                  <Key frame="15" value="12.1315" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                                  <Key frame="15" value="-5.18802" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                                  <Key frame="15" value="4.65586" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                                  <Key frame="15" value="-7.64418" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                                  <Key frame="15" value="-3.33748" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                                  <Key frame="15" value="12.1267" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                                  <Key frame="15" value="-4.39218" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                                  <Key frame="15" value="4.57277" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                                  <Key frame="15" value="3.43018" />
                                                </ActuatorCurve>
                                              </ActuatorList>
                                            </Timeline>
                                          </Box>
                                          <Box name="BellyToStand" id="16" localization="8" tooltip="First motion to Stand up from the belly" x="1199" y="347">
                                            <bitmap>media/images/box/movement/move.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="100">
                                              <ActuatorList model="nao">
                                                <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                                  <Key frame="10" value="0" />
                                                  <Key frame="20" value="-13" />
                                                  <Key frame="34" value="16.4" />
                                                  <Key frame="45" value="17" />
                                                  <Key frame="58" value="-28.4" />
                                                  <Key frame="65" value="-17" />
                                                  <Key frame="76" value="3" />
                                                  <Key frame="89" value="-22.4" />
                                                  <Key frame="100" value="3.86483" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="-38.5" />
                                                  <Key frame="20" value="-31.3797" />
                                                  <Key frame="34" value="6.15002" />
                                                  <Key frame="45" value="29.5" />
                                                  <Key frame="58" value="21.8" />
                                                  <Key frame="65" value="21.2674" />
                                                  <Key frame="76" value="-6" />
                                                  <Key frame="89" value="-30.5887" />
                                                  <Key frame="100" value="7.3" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="4.83164" />
                                                  <Key frame="20" value="-86.6" />
                                                  <Key frame="34" value="-71.6342" />
                                                  <Key frame="45" value="4.12851" />
                                                  <Key frame="58" value="73" />
                                                  <Key frame="65" value="43.3" />
                                                  <Key frame="76" value="43" />
                                                  <Key frame="89" value="74" />
                                                  <Key frame="100" value="91.3171" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="89.0319" />
                                                  <Key frame="20" value="0.964405" />
                                                  <Key frame="34" value="4.39218" />
                                                  <Key frame="45" value="4.04062" />
                                                  <Key frame="58" value="8.96255" />
                                                  <Key frame="65" value="53.8" />
                                                  <Key frame="76" value="38.8" />
                                                  <Key frame="89" value="48.5" />
                                                  <Key frame="100" value="12.4782" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                                  <Key frame="10" value="-119" />
                                                  <Key frame="20" value="-90.5309" />
                                                  <Key frame="34" value="-91.9371" />
                                                  <Key frame="45" value="-102.396" />
                                                  <Key frame="58" value="-76.0287" />
                                                  <Key frame="65" value="-71.5" />
                                                  <Key frame="76" value="-55.7258" />
                                                  <Key frame="89" value="-55" />
                                                  <Key frame="100" value="-58.3625" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="-0.5" />
                                                  <Key frame="20" value="-20.2127" />
                                                  <Key frame="34" value="-36.5606" />
                                                  <Key frame="45" value="-48.7775" />
                                                  <Key frame="58" value="-88.8561" />
                                                  <Key frame="65" value="-42" />
                                                  <Key frame="76" value="-42.2" />
                                                  <Key frame="89" value="-66.1801" />
                                                  <Key frame="100" value="-39.0215" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                                  <Key frame="10" value="-88.8609" />
                                                  <Key frame="20" value="-88.8609" />
                                                  <Key frame="34" value="-86.9273" />
                                                  <Key frame="45" value="-82.9722" />
                                                  <Key frame="58" value="-80.5112" />
                                                  <Key frame="65" value="-80.687" />
                                                  <Key frame="76" value="-80.687" />
                                                  <Key frame="89" value="-31.2" />
                                                  <Key frame="100" value="-40.6963" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                                  <Key frame="10" value="0.0585718" />
                                                  <Key frame="20" value="0.0196627" />
                                                  <Key frame="34" value="0.0407536" />
                                                  <Key frame="45" value="0.0545718" />
                                                  <Key frame="58" value="0.0574809" />
                                                  <Key frame="65" value="0.0574809" />
                                                  <Key frame="76" value="0.0549355" />
                                                  <Key frame="89" value="0.0574809" />
                                                  <Key frame="100" value="0.260753" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="-1.57965" />
                                                  <Key frame="20" value="-86.6" />
                                                  <Key frame="34" value="-70.0473" />
                                                  <Key frame="45" value="-13.5329" />
                                                  <Key frame="58" value="12.483" />
                                                  <Key frame="65" value="25.7547" />
                                                  <Key frame="76" value="52.3859" />
                                                  <Key frame="89" value="55.0226" />
                                                  <Key frame="100" value="84.73" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="-87.982" />
                                                  <Key frame="20" value="-11" />
                                                  <Key frame="34" value="-4.74856" />
                                                  <Key frame="45" value="-4.74856" />
                                                  <Key frame="58" value="-13.0104" />
                                                  <Key frame="65" value="-10.4615" />
                                                  <Key frame="76" value="-0.498473" />
                                                  <Key frame="89" value="-7.56109" />
                                                  <Key frame="100" value="-8.5279" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                                  <Key frame="10" value="119" />
                                                  <Key frame="20" value="89.4714" />
                                                  <Key frame="34" value="92.4597" />
                                                  <Key frame="45" value="96.5906" />
                                                  <Key frame="58" value="112.323" />
                                                  <Key frame="65" value="111.796" />
                                                  <Key frame="76" value="38.1426" />
                                                  <Key frame="89" value="22.6737" />
                                                  <Key frame="100" value="52.1174" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="6" />
                                                  <Key frame="20" value="21.8874" />
                                                  <Key frame="34" value="36.3896" />
                                                  <Key frame="45" value="89.2125" />
                                                  <Key frame="58" value="0.498473" />
                                                  <Key frame="65" value="0.498473" />
                                                  <Key frame="76" value="24.2605" />
                                                  <Key frame="89" value="37.2" />
                                                  <Key frame="100" value="22.5027" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                                  <Key frame="10" value="86.4831" />
                                                  <Key frame="20" value="86.4831" />
                                                  <Key frame="34" value="85.7799" />
                                                  <Key frame="45" value="81.8248" />
                                                  <Key frame="58" value="82.2643" />
                                                  <Key frame="65" value="82.5279" />
                                                  <Key frame="76" value="82.7037" />
                                                  <Key frame="89" value="82.5279" />
                                                  <Key frame="100" value="62.2249" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                                  <Key frame="10" value="0.0185718" />
                                                  <Key frame="20" value="0.0127537" />
                                                  <Key frame="34" value="0.0262082" />
                                                  <Key frame="45" value="0.0469355" />
                                                  <Key frame="58" value="0.0494809" />
                                                  <Key frame="65" value="0.04839" />
                                                  <Key frame="76" value="0.0472991" />
                                                  <Key frame="89" value="0.04839" />
                                                  <Key frame="100" value="0.217844" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="1.3" />
                                                  <Key frame="20" value="2" />
                                                  <Key frame="34" value="-24.9588" />
                                                  <Key frame="45" value="-44.6466" />
                                                  <Key frame="58" value="-59.6761" />
                                                  <Key frame="65" value="-65.621" />
                                                  <Key frame="76" value="-65.621" />
                                                  <Key frame="89" value="-32.5175" />
                                                  <Key frame="100" value="-13.5329" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="0" />
                                                  <Key frame="20" value="0.00240423" />
                                                  <Key frame="34" value="0.090296" />
                                                  <Key frame="45" value="-21.619" />
                                                  <Key frame="58" value="-17.0486" />
                                                  <Key frame="65" value="-17.0486" />
                                                  <Key frame="76" value="11.1647" />
                                                  <Key frame="89" value="7.29742" />
                                                  <Key frame="100" value="8.5279" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="-46.1" />
                                                  <Key frame="20" value="0.00240423" />
                                                  <Key frame="34" value="-89.9108" />
                                                  <Key frame="45" value="-73.3872" />
                                                  <Key frame="58" value="-59.4124" />
                                                  <Key frame="65" value="-66.4437" />
                                                  <Key frame="76" value="-67.7621" />
                                                  <Key frame="89" value="-72.7719" />
                                                  <Key frame="100" value="12.2194" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                                  <Key frame="10" value="-5.29" />
                                                  <Key frame="20" value="114" />
                                                  <Key frame="34" value="121.039" />
                                                  <Key frame="45" value="16.1697" />
                                                  <Key frame="58" value="23.201" />
                                                  <Key frame="65" value="20.4764" />
                                                  <Key frame="76" value="41.2188" />
                                                  <Key frame="89" value="115.399" />
                                                  <Key frame="100" value="-5.18802" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                                  <Key frame="10" value="36.9" />
                                                  <Key frame="20" value="-59" />
                                                  <Key frame="34" value="-65.9212" />
                                                  <Key frame="45" value="12.3903" />
                                                  <Key frame="58" value="40.6915" />
                                                  <Key frame="65" value="52.8695" />
                                                  <Key frame="76" value="47.2833" />
                                                  <Key frame="89" value="-28.743" />
                                                  <Key frame="100" value="4.39218" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="0" />
                                                  <Key frame="20" value="0.00240423" />
                                                  <Key frame="34" value="-0.0854875" />
                                                  <Key frame="45" value="-25.9257" />
                                                  <Key frame="58" value="-17.2244" />
                                                  <Key frame="65" value="-6.76526" />
                                                  <Key frame="76" value="-2.37067" />
                                                  <Key frame="89" value="-6.94104" />
                                                  <Key frame="100" value="-7.73207" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="0" />
                                                  <Key frame="20" value="0.00240423" />
                                                  <Key frame="34" value="0.090296" />
                                                  <Key frame="45" value="17.8444" />
                                                  <Key frame="58" value="14.5924" />
                                                  <Key frame="65" value="18.3718" />
                                                  <Key frame="76" value="13.0104" />
                                                  <Key frame="89" value="-4.30429" />
                                                  <Key frame="100" value="-3.42537" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="-46.1" />
                                                  <Key frame="20" value="-0.00240423" />
                                                  <Key frame="34" value="-90.3551" />
                                                  <Key frame="45" value="-95.1891" />
                                                  <Key frame="58" value="-68.7337" />
                                                  <Key frame="65" value="-91.5856" />
                                                  <Key frame="76" value="-18.4597" />
                                                  <Key frame="89" value="-40.6963" />
                                                  <Key frame="100" value="12.0388" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                                  <Key frame="10" value="-5.29" />
                                                  <Key frame="20" value="114" />
                                                  <Key frame="34" value="119.535" />
                                                  <Key frame="45" value="99.8474" />
                                                  <Key frame="58" value="121.478" />
                                                  <Key frame="65" value="121.478" />
                                                  <Key frame="76" value="121.478" />
                                                  <Key frame="89" value="121.478" />
                                                  <Key frame="100" value="-4.39218" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                                  <Key frame="10" value="36.9" />
                                                  <Key frame="20" value="-59" />
                                                  <Key frame="34" value="-65.2133" />
                                                  <Key frame="45" value="-67.9785" />
                                                  <Key frame="58" value="-67.9785" />
                                                  <Key frame="65" value="-33.748" />
                                                  <Key frame="76" value="-67.9785" />
                                                  <Key frame="89" value="-67.9785" />
                                                  <Key frame="100" value="4.92434" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="0" />
                                                  <Key frame="20" value="0.00240423" />
                                                  <Key frame="34" value="0.353971" />
                                                  <Key frame="45" value="-0.261271" />
                                                  <Key frame="58" value="-5.62267" />
                                                  <Key frame="65" value="-0.788621" />
                                                  <Key frame="76" value="-5.44688" />
                                                  <Key frame="89" value="2.02391" />
                                                  <Key frame="100" value="3.51807" />
                                                </ActuatorCurve>
                                              </ActuatorList>
                                            </Timeline>
                                          </Box>
                                          <Box name="BackToStand" id="5" localization="8" tooltip="First motion to Stand up from the back" x="1194" y="231">
                                            <bitmap>media/images/box/movement/move.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="105" resources_acquisition="1">
                                              <BehaviorLayer name="behavior_layer1">
                                                <BehaviorKeyframe name="keyframe10" index="10">
                                                  <Diagram>
                                                    <Box name="Disable Anti-Collision" id="2" localization="8" tooltip="Disable the collision protection on some specific part of NAO&apos;s body.&#x0A;&#x0A;Note: When this box is unloaded, the collision protection state will be reset to&#x0A;its previous state (enabled or disabled)." x="136" y="45">
                                                      <bitmap>media/images/box/sensors/anti_collision.png</bitmap>
                                                      <script language="4">
                                                        <content>
                                                          <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.motion = ALProxy( "ALMotion" )

    def onLoad(self):
        self.collisionLArmState = self.motion.getCollisionProtectionEnabled("LArm")
        self.collisionRArmState = self.motion.getCollisionProtectionEnabled("RArm")

    def onUnload(self):
        self.motion.setCollisionProtectionEnabled("LArm", self.collisionLArmState)
        self.motion.setCollisionProtectionEnabled("RArm", self.collisionRArmState)

    def onInput_onSet(self):
        # enable/disable collision protection
        result = self.motion.setCollisionProtectionEnabled( self.getParameter("Body part"), False )
        if( result ):
            self.success()
        else:
            self.logger.warning( "Disabling collision protection failed. Deactivation succeeds only if the current state of the chain is not in collision. If you want to deactivate collision of both arms, they need to be off collision." )
            self.failure()]]>
                                                        </content>
                                                      </script>
                                                      <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                      <Input name="onSet" type="1" type_size="1" nature="1" inner="0" tooltip="The anti-collision feature is enabled or disabled when this input is stimulated." id="2" />
                                                      <Output name="success" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent if the collision protection has been successfully enabled or disabled.&#x0A;&#x0A;Note: The only case where there is a failure is when you try to disable the&#x0A;anti-collision while it is currently in collision with some part of his body." id="3" />
                                                      <Output name="failure" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent if the collision protection has failed to be enabled or disabled.&#x0A;&#x0A;Note: The only case where there is a failure is when you try to disable the&#x0A;anti-collision while it is currently in collision with some part of his body." id="4" />
                                                      <Parameter name="Body part" inherits_from_parent="0" content_type="3" value="Arms" default_value="Arms" custom_choice="0" tooltip="Body part which avoids the collision." id="5">
                                                        <Choice value="Arms" />
                                                        <Choice value="LArm" />
                                                        <Choice value="RArm" />
                                                      </Parameter>
                                                    </Box>
                                                    <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                  </Diagram>
                                                </BehaviorKeyframe>
                                              </BehaviorLayer>
                                              <ActuatorList model="nao">
                                                <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                                  <Key frame="10" value="-1.40867" />
                                                  <Key frame="20" value="-2.73208e-05" />
                                                  <Key frame="28" value="2.37067" />
                                                  <Key frame="36" value="3.86374e-05" />
                                                  <Key frame="43" value="1.93188e-05" />
                                                  <Key frame="48" value="1.93187e-05" />
                                                  <Key frame="56" value="-29.4461" />
                                                  <Key frame="65" value="-17.3171" />
                                                  <Key frame="74" value="15.1" />
                                                  <Key frame="80" value="6.9" />
                                                  <Key frame="86" value="-0.538656" />
                                                  <Key frame="105" value="3.77694" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="3.60116" />
                                                  <Key frame="20" value="0" />
                                                  <Key frame="28" value="29.5016" />
                                                  <Key frame="36" value="-38.5028" />
                                                  <Key frame="43" value="0" />
                                                  <Key frame="48" value="20" />
                                                  <Key frame="56" value="9.84147" />
                                                  <Key frame="65" value="19.7732" />
                                                  <Key frame="74" value="0.6" />
                                                  <Key frame="80" value="1.7" />
                                                  <Key frame="86" value="21.707" />
                                                  <Key frame="105" value="-2.28759" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="119.496" />
                                                  <Key frame="20" value="119.5" />
                                                  <Key frame="26" value="116.806" />
                                                  <Key frame="36" value="119.496" />
                                                  <Key frame="43" value="119.496" />
                                                  <Key frame="48" value="119.496" />
                                                  <Key frame="56" value="116.454" />
                                                  <Key frame="65" value="73.7388" />
                                                  <Key frame="74" value="54.842" />
                                                  <Key frame="80" value="42.0098" />
                                                  <Key frame="86" value="42.0098" />
                                                  <Key frame="105" value="91.2292" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="56.1604" />
                                                  <Key frame="20" value="21" />
                                                  <Key frame="26" value="20" />
                                                  <Key frame="36" value="20" />
                                                  <Key frame="43" value="21" />
                                                  <Key frame="48" value="0.498473" />
                                                  <Key frame="56" value="17.1365" />
                                                  <Key frame="60" value="25.4" />
                                                  <Key frame="65" value="4.04062" />
                                                  <Key frame="74" value="15.2908" />
                                                  <Key frame="80" value="28.5624" />
                                                  <Key frame="86" value="28.5624" />
                                                  <Key frame="105" value="12.5661" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                                  <Key frame="10" value="-43.5967" />
                                                  <Key frame="20" value="9" />
                                                  <Key frame="26" value="7.02893" />
                                                  <Key frame="36" value="5" />
                                                  <Key frame="43" value="5" />
                                                  <Key frame="48" value="5" />
                                                  <Key frame="56" value="-112.328" />
                                                  <Key frame="65" value="-48.9581" />
                                                  <Key frame="74" value="-14.3288" />
                                                  <Key frame="80" value="4.75993" />
                                                  <Key frame="86" value="4.75993" />
                                                  <Key frame="105" value="-59.0656" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="-35.7695" />
                                                  <Key frame="20" value="-2" />
                                                  <Key frame="26" value="-88.5" />
                                                  <Key frame="36" value="-89.5017" />
                                                  <Key frame="43" value="-40" />
                                                  <Key frame="48" value="-0.498473" />
                                                  <Key frame="52" value="-11" />
                                                  <Key frame="56" value="-59.9398" />
                                                  <Key frame="65" value="-50.008" />
                                                  <Key frame="74" value="-47.547" />
                                                  <Key frame="80" value="-46.1434" />
                                                  <Key frame="86" value="-46.1434" />
                                                  <Key frame="105" value="-39.0215" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                                  <Key frame="10" value="-40.4326" />
                                                  <Key frame="26" value="-102.484" />
                                                  <Key frame="56" value="-41.5752" />
                                                  <Key frame="65" value="-41.2236" />
                                                  <Key frame="74" value="-41.3994" />
                                                  <Key frame="105" value="-40.7842" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                                  <Key frame="10" value="0.0502082" />
                                                  <Key frame="26" value="0.0763898" />
                                                  <Key frame="56" value="0.125481" />
                                                  <Key frame="65" value="0.154208" />
                                                  <Key frame="74" value="0.166208" />
                                                  <Key frame="105" value="0.258207" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="119.496" />
                                                  <Key frame="20" value="119.5" />
                                                  <Key frame="26" value="111.889" />
                                                  <Key frame="36" value="119.496" />
                                                  <Key frame="43" value="119.496" />
                                                  <Key frame="48" value="119.496" />
                                                  <Key frame="56" value="119.008" />
                                                  <Key frame="65" value="116.723" />
                                                  <Key frame="74" value="82.5327" />
                                                  <Key frame="80" value="51.0681" />
                                                  <Key frame="86" value="51.0681" />
                                                  <Key frame="105" value="84.2027" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="-61.5266" />
                                                  <Key frame="20" value="-21" />
                                                  <Key frame="26" value="-20" />
                                                  <Key frame="36" value="-20" />
                                                  <Key frame="43" value="-21" />
                                                  <Key frame="48" value="-0.498473" />
                                                  <Key frame="56" value="-26.1941" />
                                                  <Key frame="65" value="-32.3466" />
                                                  <Key frame="74" value="-40.4326" />
                                                  <Key frame="80" value="-50" />
                                                  <Key frame="86" value="-39" />
                                                  <Key frame="105" value="-8.61579" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                                  <Key frame="10" value="43.8556" />
                                                  <Key frame="20" value="-9" />
                                                  <Key frame="26" value="-14.7682" />
                                                  <Key frame="36" value="-5" />
                                                  <Key frame="43" value="-5" />
                                                  <Key frame="48" value="-5" />
                                                  <Key frame="56" value="-4.66067" />
                                                  <Key frame="65" value="-3.95753" />
                                                  <Key frame="74" value="-1.49656" />
                                                  <Key frame="80" value="0.0352695" />
                                                  <Key frame="86" value="0.0352695" />
                                                  <Key frame="105" value="52.2932" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="40.6963" />
                                                  <Key frame="20" value="2" />
                                                  <Key frame="26" value="88.5" />
                                                  <Key frame="36" value="89.5017" />
                                                  <Key frame="43" value="40" />
                                                  <Key frame="48" value="0.498473" />
                                                  <Key frame="56" value="5.53958" />
                                                  <Key frame="65" value="1.23289" />
                                                  <Key frame="74" value="10.901" />
                                                  <Key frame="80" value="26" />
                                                  <Key frame="86" value="32.0829" />
                                                  <Key frame="105" value="21.7996" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                                  <Key frame="10" value="66.0043" />
                                                  <Key frame="26" value="98.8758" />
                                                  <Key frame="56" value="61.8734" />
                                                  <Key frame="65" value="61.7855" />
                                                  <Key frame="74" value="61.8734" />
                                                  <Key frame="105" value="62.137" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                                  <Key frame="10" value="0" />
                                                  <Key frame="20" value="0" />
                                                  <Key frame="26" value="0.0182082" />
                                                  <Key frame="43" value="0" />
                                                  <Key frame="56" value="0.16439" />
                                                  <Key frame="65" value="0.171662" />
                                                  <Key frame="74" value="0.176753" />
                                                  <Key frame="105" value="0.215298" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="-26.9804" />
                                                  <Key frame="20" value="0" />
                                                  <Key frame="32" value="0.441863" />
                                                  <Key frame="36" value="-2.73208e-05" />
                                                  <Key frame="43" value="-37.5274" />
                                                  <Key frame="56" value="-28.5624" />
                                                  <Key frame="65" value="-49.217" />
                                                  <Key frame="74" value="-39.9" />
                                                  <Key frame="80" value="-23.0475" />
                                                  <Key frame="86" value="-23.0475" />
                                                  <Key frame="105" value="-13.1814" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="2.55126" />
                                                  <Key frame="20" value="8.991e-06" />
                                                  <Key frame="32" value="3.34229" />
                                                  <Key frame="36" value="8.991e-06" />
                                                  <Key frame="43" value="-3.71174" />
                                                  <Key frame="48" value="31" />
                                                  <Key frame="56" value="8.87947" />
                                                  <Key frame="65" value="-10.0173" />
                                                  <Key frame="74" value="0.529755" />
                                                  <Key frame="80" value="11" />
                                                  <Key frame="86" value="10" />
                                                  <Key frame="105" value="8.70368" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="14.3288" />
                                                  <Key frame="20" value="-10" />
                                                  <Key frame="32" value="21.448" />
                                                  <Key frame="36" value="-10" />
                                                  <Key frame="43" value="-67.4992" />
                                                  <Key frame="48" value="-90" />
                                                  <Key frame="56" value="-49.1291" />
                                                  <Key frame="65" value="-3.24959" />
                                                  <Key frame="74" value="-26.1014" />
                                                  <Key frame="80" value="-49" />
                                                  <Key frame="86" value="-47.8986" />
                                                  <Key frame="105" value="12.2194" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                                  <Key frame="10" value="5.2711" />
                                                  <Key frame="20" value="96" />
                                                  <Key frame="32" value="115.751" />
                                                  <Key frame="36" value="96" />
                                                  <Key frame="43" value="61.7515" />
                                                  <Key frame="48" value="96" />
                                                  <Key frame="56" value="120.937" />
                                                  <Key frame="65" value="121.024" />
                                                  <Key frame="74" value="121.039" />
                                                  <Key frame="80" value="121.039" />
                                                  <Key frame="86" value="121.039" />
                                                  <Key frame="105" value="-5.10012" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                                  <Key frame="10" value="47.2833" />
                                                  <Key frame="20" value="14" />
                                                  <Key frame="32" value="-26.0184" />
                                                  <Key frame="36" value="14" />
                                                  <Key frame="43" value="38.8165" />
                                                  <Key frame="48" value="38" />
                                                  <Key frame="56" value="-26.1062" />
                                                  <Key frame="65" value="-63.1087" />
                                                  <Key frame="74" value="-68.1542" />
                                                  <Key frame="80" value="-68.1542" />
                                                  <Key frame="86" value="-68.1542" />
                                                  <Key frame="105" value="4.65586" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="-1.93121" />
                                                  <Key frame="20" value="0" />
                                                  <Key frame="32" value="-1.93121" />
                                                  <Key frame="36" value="0" />
                                                  <Key frame="43" value="9.80246" />
                                                  <Key frame="48" value="-6" />
                                                  <Key frame="56" value="-22.6737" />
                                                  <Key frame="65" value="-5.71056" />
                                                  <Key frame="74" value="2.46337" />
                                                  <Key frame="80" value="6.76691" />
                                                  <Key frame="86" value="5" />
                                                  <Key frame="105" value="-7.81996" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="-8.52309" />
                                                  <Key frame="20" value="0" />
                                                  <Key frame="32" value="-1.31597" />
                                                  <Key frame="36" value="0" />
                                                  <Key frame="43" value="3.54635" />
                                                  <Key frame="48" value="-31" />
                                                  <Key frame="56" value="-31.9902" />
                                                  <Key frame="65" value="-34.9785" />
                                                  <Key frame="74" value="-35.9" />
                                                  <Key frame="80" value="-17" />
                                                  <Key frame="86" value="-1" />
                                                  <Key frame="105" value="-3.60116" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="10.6325" />
                                                  <Key frame="20" value="-10" />
                                                  <Key frame="32" value="16.1697" />
                                                  <Key frame="36" value="-10" />
                                                  <Key frame="43" value="-66.7243" />
                                                  <Key frame="48" value="-90" />
                                                  <Key frame="56" value="-87.3668" />
                                                  <Key frame="65" value="-89.3883" />
                                                  <Key frame="74" value="-59" />
                                                  <Key frame="80" value="-51.9" />
                                                  <Key frame="86" value="-51.9" />
                                                  <Key frame="105" value="11.9509" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                                  <Key frame="10" value="10.9889" />
                                                  <Key frame="20" value="96" />
                                                  <Key frame="32" value="116.107" />
                                                  <Key frame="36" value="96" />
                                                  <Key frame="43" value="62.6734" />
                                                  <Key frame="48" value="96" />
                                                  <Key frame="56" value="69.9642" />
                                                  <Key frame="65" value="63.0208" />
                                                  <Key frame="74" value="62.1" />
                                                  <Key frame="80" value="50.2" />
                                                  <Key frame="86" value="101" />
                                                  <Key frame="105" value="-4.39218" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                                  <Key frame="10" value="26.7215" />
                                                  <Key frame="20" value="14" />
                                                  <Key frame="32" value="-21.4432" />
                                                  <Key frame="36" value="14" />
                                                  <Key frame="43" value="41.102" />
                                                  <Key frame="48" value="38" />
                                                  <Key frame="56" value="45.003" />
                                                  <Key frame="65" value="44.9151" />
                                                  <Key frame="74" value="25.3" />
                                                  <Key frame="80" value="23.1" />
                                                  <Key frame="86" value="-33.2" />
                                                  <Key frame="105" value="4.66067" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="9.5826" />
                                                  <Key frame="20" value="4.94951e-06" />
                                                  <Key frame="32" value="-2.28278" />
                                                  <Key frame="36" value="4.94951e-06" />
                                                  <Key frame="43" value="-9.21535" />
                                                  <Key frame="48" value="6" />
                                                  <Key frame="56" value="0.529755" />
                                                  <Key frame="65" value="-5.62267" />
                                                  <Key frame="74" value="25.4" />
                                                  <Key frame="80" value="38.9384" />
                                                  <Key frame="86" value="15.9" />
                                                  <Key frame="105" value="3.60596" />
                                                </ActuatorCurve>
                                              </ActuatorList>
                                            </Timeline>
                                          </Box>
                                          <Box name="SideToBelly" id="4" localization="8" tooltip="Lie down on the back or the belly from an other lie down position (on the side)." x="656" y="93">
                                            <bitmap>media/images/box/movement/move.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		""

	def onInput_onStop(self):
		""]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="10">
                                              <ActuatorList model="nao">
                                                <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                                  <Key frame="5" value="41.3067" />
                                                  <Key frame="10" value="41.3067" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                                  <Key frame="5" value="8.52309" />
                                                  <Key frame="10" value="8.52309" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                                  <Key frame="5" value="108.72" />
                                                  <Key frame="10" value="108.72" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                                  <Key frame="5" value="45.965" />
                                                  <Key frame="10" value="45.965" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                                  <Key frame="5" value="-56.8684" />
                                                  <Key frame="10" value="-56.8684" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                                  <Key frame="5" value="-26.8046" />
                                                  <Key frame="10" value="-26.8046" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                                  <Key frame="5" value="-38.8505" />
                                                  <Key frame="10" value="-38.8505" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                                  <Key frame="5" value="0.200389" />
                                                  <Key frame="10" value="0.200389" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                                  <Key frame="5" value="113.383" />
                                                  <Key frame="10" value="113.383" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                                  <Key frame="5" value="-44.6514" />
                                                  <Key frame="10" value="-44.6514" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                                  <Key frame="5" value="52.9084" />
                                                  <Key frame="10" value="52.9084" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                                  <Key frame="5" value="19.5144" />
                                                  <Key frame="10" value="19.5144" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                                  <Key frame="5" value="37" />
                                                  <Key frame="10" value="37" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                                  <Key frame="5" value="0.146571" />
                                                  <Key frame="10" value="0.146571" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                                  <Key frame="5" value="-65.5648" />
                                                  <Key frame="10" value="-65.5648" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                                  <Key frame="5" value="14.4166" />
                                                  <Key frame="10" value="14.4166" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                                  <Key frame="5" value="2.02391" />
                                                  <Key frame="10" value="2.02391" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                                  <Key frame="5" value="-5.27591" />
                                                  <Key frame="10" value="-5.27591" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                                  <Key frame="5" value="20.3885" />
                                                  <Key frame="10" value="20.3885" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                                  <Key frame="5" value="19.6902" />
                                                  <Key frame="10" value="19.6902" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                                  <Key frame="5" value="-1.75543" />
                                                  <Key frame="10" value="-1.75543" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                                  <Key frame="5" value="23.8163" />
                                                  <Key frame="10" value="23.8163" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                                  <Key frame="5" value="-5.2711" />
                                                  <Key frame="10" value="-5.2711" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                                  <Key frame="5" value="29.9735" />
                                                  <Key frame="10" value="29.9735" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                                  <Key frame="5" value="-3.86483" />
                                                  <Key frame="10" value="-3.86483" />
                                                </ActuatorCurve>
                                              </ActuatorList>
                                            </Timeline>
                                          </Box>
                                          <Box name="Switch Case" id="1" localization="8" tooltip="Test input value and stimulate the output matching to this value. If there is no&#x0A;output matching, the default output (onDefault) is stimulated.&#x0A;&#x0A;You can edit a case by left double-clicking on the line. You can add a&#x0A;case by right clicking on a line and selecting &apos;Insert a row&apos;. You can delete&#x0A;a case by right clicking on a line and selecting &apos;Remove a row&apos;." plugin="dispatcher_plugin" x="923" y="96">
                                            <bitmap>media/images/box/interaction/choice.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion("Back")):
			self.output_1(p)
		elif(p == self.typeConversion("Knee")):
			self.output_2(p)
		elif(p == self.typeConversion("Frog")):
			self.output_3(p)
		elif(p == self.typeConversion("Belly")):
			self.output_4(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]>
                                              </content>
                                            </script>
                                            <pluginContent>
                                              <keywords>
                                                <keyword>&quot;Back&quot;</keyword>
                                                <keyword>&quot;Knee&quot;</keyword>
                                                <keyword>&quot;Frog&quot;</keyword>
                                                <keyword>&quot;Belly&quot;</keyword>
                                                <keyword></keyword>
                                              </keywords>
                                            </pluginContent>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Value to test." id="2" />
                                            <Output name="onDefault" type="1" type_size="1" nature="1" inner="0" tooltip="If the input value does not match any value set on the box." id="3" />
                                            <Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="4" />
                                            <Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="5" />
                                            <Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="6" />
                                            <Output name="output_4" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="7" />
                                          </Box>
                                          <Box name="Switch Case" id="7" localization="8" tooltip="Test input value and stimulate the output matching to this value. If there is no&#x0A;output matching, the default output (onDefault) is stimulated.&#x0A;&#x0A;You can edit a case by left double-clicking on the line. You can add a&#x0A;case by right clicking on a line and selecting &apos;Insert a row&apos;. You can delete&#x0A;a case by right clicking on a line and selecting &apos;Remove a row&apos;." plugin="dispatcher_plugin" x="955" y="621">
                                            <bitmap>media/images/box/interaction/choice.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion("Crouch")):
			self.output_1(p)
		elif(p == self.typeConversion("Stand")):
			self.output_2(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]>
                                              </content>
                                            </script>
                                            <pluginContent>
                                              <keywords>
                                                <keyword>&quot;Crouch&quot;</keyword>
                                                <keyword>&quot;Stand&quot;</keyword>
                                                <keyword></keyword>
                                              </keywords>
                                            </pluginContent>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Value to test." id="2" />
                                            <Output name="onDefault" type="1" type_size="1" nature="1" inner="0" tooltip="If the input value does not match any value set on the box." id="3" />
                                            <Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="4" />
                                            <Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="5" />
                                          </Box>
                                          <Box name="Get Robot Pose" id="8" localization="8" tooltip="Return NAO&apos;s current pose.&#x0A;&#x0A;Note: The box waits for the robot pose to be stabilized. You can set the maximum&#x0A;time to wait in parameters. After this time is ellapsed, the current pose is sent to the&#x0A;output anyway." x="89" y="41">
                                            <bitmap>media/images/box/sensors/inertial_unit.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.robotPoseProxy = ALProxy("ALRobotPosture")
        self.threadTime = 0.1 #seconds

    def onLoad(self):
        self.bIsRunning = False
        self.bMustStop = False

    def onUnload(self):
        self.bMustStop = True

    def onInput_onStart(self):
        if( self.bIsRunning ):
            return
        self.bIsRunning = True
        self.bMustStop = False
        beginTime = time.time()
        RobotPoseAndTime = ["Unknown", 0.]
        while( not self.bMustStop ):
            RobotPoseAndTime = self.robotPoseProxy.getActualPoseAndTime()
            # as soon as the robot is not moving anymore from its position, give its position
            if( RobotPoseAndTime[1] > 0.5 or time.time() - beginTime > self.getParameter("Time to wait for pose stabilization (s)") ):
                self.bMustStop = True
            if( not self.bMustStop ):
                time.sleep(self.threadTime)
        self.robotPose(RobotPoseAndTime[0])
        self.bIsRunning = False]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Output name="robotPose" type="3" type_size="1" nature="2" inner="0" tooltip='NAO&apos;s current pose. It can be:&#x0A;- &quot;Unknown&quot;&#x0A;- &quot;Stand&quot;&#x0A;- &quot;Sit&quot;&#x0A;- &quot;Crouch&quot;&#x0A;- &quot;Knee&quot;&#x0A;- &quot;Frog&quot;&#x0A;- &quot;Back&quot;&#x0A;- &quot;Belly&quot;&#x0A;- &quot;Left&quot;&#x0A;- &quot;Right&quot;&#x0A;- &quot;HeadBack&quot;' id="3" />
                                            <Parameter name="Time to wait for pose stabilization (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0.5" max="10" tooltip="Maximum time to wait NAO&apos;s pose stabilization. After this time is ellapsed,&#x0A;the current pose is sent to the output even though it is not stabilized." id="4" />
                                          </Box>
                                          <Box name="Get Robot Pose" id="10" localization="8" tooltip="Return NAO&apos;s current pose.&#x0A;&#x0A;Note: The box waits for the robot pose to be stabilized. You can set the maximum&#x0A;time to wait in parameters. After this time is ellapsed, the current pose is sent to the&#x0A;output anyway." x="794" y="96">
                                            <bitmap>media/images/box/sensors/inertial_unit.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.robotPoseProxy = ALProxy("ALRobotPosture")
        self.threadTime = 0.1 #seconds

    def onLoad(self):
        self.bIsRunning = False
        self.bMustStop = False

    def onUnload(self):
        self.bMustStop = True

    def onInput_onStart(self):
        if( self.bIsRunning ):
            return
        self.bIsRunning = True
        self.bMustStop = False
        beginTime = time.time()
        RobotPoseAndTime = ["Unknown", 0.]
        while( not self.bMustStop ):
            RobotPoseAndTime = self.robotPoseProxy.getActualPoseAndTime()
            # as soon as the robot is not moving anymore from its position, give its position
            if( RobotPoseAndTime[1] > 0.5 or time.time() - beginTime > self.getParameter("Time to wait for pose stabilization (s)") ):
                self.bMustStop = True
            if( not self.bMustStop ):
                time.sleep(self.threadTime)
        self.robotPose(RobotPoseAndTime[0])
        self.bIsRunning = False]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Output name="robotPose" type="3" type_size="1" nature="2" inner="0" tooltip='NAO&apos;s current pose. It can be:&#x0A;- &quot;Unknown&quot;&#x0A;- &quot;Stand&quot;&#x0A;- &quot;Sit&quot;&#x0A;- &quot;Crouch&quot;&#x0A;- &quot;Knee&quot;&#x0A;- &quot;Frog&quot;&#x0A;- &quot;Back&quot;&#x0A;- &quot;Belly&quot;&#x0A;- &quot;Left&quot;&#x0A;- &quot;Right&quot;&#x0A;- &quot;HeadBack&quot;' id="3" />
                                            <Parameter name="Time to wait for pose stabilization (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0.5" max="10" tooltip="Maximum time to wait NAO&apos;s pose stabilization. After this time is ellapsed,&#x0A;the current pose is sent to the output even though it is not stabilized." id="4" />
                                          </Box>
                                          <Box name="Get Robot Pose" id="2" localization="8" tooltip="Return NAO&apos;s current pose.&#x0A;&#x0A;Note: The box waits for the robot pose to be stabilized. You can set the maximum&#x0A;time to wait in parameters. After this time is ellapsed, the current pose is sent to the&#x0A;output anyway." x="828" y="626">
                                            <bitmap>media/images/box/sensors/inertial_unit.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.robotPoseProxy = ALProxy("ALRobotPosture")
        self.threadTime = 0.1 #seconds

    def onLoad(self):
        self.bIsRunning = False
        self.bMustStop = False

    def onUnload(self):
        self.bMustStop = True

    def onInput_onStart(self):
        if( self.bIsRunning ):
            return
        self.bIsRunning = True
        self.bMustStop = False
        beginTime = time.time()
        RobotPoseAndTime = ["Unknown", 0.]
        while( not self.bMustStop ):
            RobotPoseAndTime = self.robotPoseProxy.getActualPoseAndTime()
            # as soon as the robot is not moving anymore from its position, give its position
            if( RobotPoseAndTime[1] > 0.5 or time.time() - beginTime > self.getParameter("Time to wait for pose stabilization (s)") ):
                self.bMustStop = True
            if( not self.bMustStop ):
                time.sleep(self.threadTime)
        self.robotPose(RobotPoseAndTime[0])
        self.bIsRunning = False]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Output name="robotPose" type="3" type_size="1" nature="2" inner="0" tooltip='NAO&apos;s current pose. It can be:&#x0A;- &quot;Unknown&quot;&#x0A;- &quot;Stand&quot;&#x0A;- &quot;Sit&quot;&#x0A;- &quot;Crouch&quot;&#x0A;- &quot;Knee&quot;&#x0A;- &quot;Frog&quot;&#x0A;- &quot;Back&quot;&#x0A;- &quot;Belly&quot;&#x0A;- &quot;Left&quot;&#x0A;- &quot;Right&quot;&#x0A;- &quot;HeadBack&quot;' id="3" />
                                            <Parameter name="Time to wait for pose stabilization (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0.5" max="10" tooltip="Maximum time to wait NAO&apos;s pose stabilization. After this time is ellapsed,&#x0A;the current pose is sent to the output even though it is not stabilized." id="4" />
                                          </Box>
                                          <Link inputowner="0" indexofinput="4" outputowner="9" indexofoutput="3" />
                                          <Link inputowner="16" indexofinput="2" outputowner="9" indexofoutput="7" />
                                          <Link inputowner="16" indexofinput="2" outputowner="9" indexofoutput="8" />
                                          <Link inputowner="16" indexofinput="2" outputowner="9" indexofoutput="9" />
                                          <Link inputowner="5" indexofinput="2" outputowner="9" indexofoutput="6" />
                                          <Link inputowner="0" indexofinput="4" outputowner="5" indexofoutput="4" />
                                          <Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" />
                                          <Link inputowner="0" indexofinput="4" outputowner="16" indexofoutput="4" />
                                          <Link inputowner="5" indexofinput="2" outputowner="1" indexofoutput="4" />
                                          <Link inputowner="16" indexofinput="2" outputowner="1" indexofoutput="5" />
                                          <Link inputowner="16" indexofinput="2" outputowner="1" indexofoutput="6" />
                                          <Link inputowner="16" indexofinput="2" outputowner="1" indexofoutput="7" />
                                          <Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="3" />
                                          <Link inputowner="3" indexofinput="2" outputowner="9" indexofoutput="10" />
                                          <Link inputowner="4" indexofinput="2" outputowner="9" indexofoutput="4" />
                                          <Link inputowner="12" indexofinput="2" outputowner="9" indexofoutput="11" />
                                          <Link inputowner="4" indexofinput="2" outputowner="9" indexofoutput="5" />
                                          <Link inputowner="3" indexofinput="2" outputowner="7" indexofoutput="4" />
                                          <Link inputowner="0" indexofinput="4" outputowner="7" indexofoutput="3" />
                                          <Link inputowner="3" indexofinput="2" outputowner="7" indexofoutput="5" />
                                          <Link inputowner="8" indexofinput="2" outputowner="0" indexofoutput="2" />
                                          <Link inputowner="9" indexofinput="2" outputowner="8" indexofoutput="3" />
                                          <Link inputowner="10" indexofinput="2" outputowner="4" indexofoutput="4" />
                                          <Link inputowner="1" indexofinput="2" outputowner="10" indexofoutput="3" />
                                          <Link inputowner="2" indexofinput="2" outputowner="12" indexofoutput="4" />
                                          <Link inputowner="7" indexofinput="2" outputowner="2" indexofoutput="3" />
                                        </Diagram>
                                      </BehaviorKeyframe>
                                    </BehaviorLayer>
                                  </Timeline>
                                </Box>
                                <Box name="Only Once" id="4" localization="8" tooltip="This box&apos;s output is stimulated only the first time the onSignal input is." x="111" y="45">
                                  <bitmap>media/images/box/box-script.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.bFirstTime = True

    def onUnload(self):
        self.bFirstTime = True

    def onInput_onSignal(self):
        if( self.bFirstTime ):
            self.bFirstTime = False
            self.firstTime()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onSignal" type="1" type_size="1" nature="1" inner="0" tooltip="The signal that must pass only once." id="2" />
                                  <Output name="firstTime" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent first time the onSignal input is stimulated." id="3" />
                                </Box>
                                <Box name="Set Stiffness" id="2" localization="8" tooltip="Set motors stiffness." x="716" y="177">
                                  <bitmap>media/images/box/movement/stiffness.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def setStiffness(self, stiffness):
        self.bIsRunning = True
        duration = self.getParameter("Duration (s)")
        if(self.getParameter("Head")):
            ALMotion.post.stiffnessInterpolation("Head", stiffness, duration)
        if(self.getParameter("Left arm")):
            ALMotion.post.stiffnessInterpolation("LArm", stiffness, duration)
        if(self.getParameter("Right arm")):
            ALMotion.post.stiffnessInterpolation("RArm", stiffness, duration)
        if(self.getParameter("Left leg")):
            ALMotion.post.stiffnessInterpolation("LLeg", stiffness, duration)
        if(self.getParameter("Right leg")):
            ALMotion.post.stiffnessInterpolation("RLeg", stiffness, duration)
        time.sleep(duration)
        self.bIsRunning = False

    def onInput_onSet(self):
        if( self.bIsRunning ):
            return
        self.setStiffness(self.getParameter("Motors stiffness (%)")/100.)
        self.onReady() #~ activate output of the box]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onSet" type="1" type_size="1" nature="1" inner="0" tooltip="When this input is stimulated, the stiffness of the selected motors is set to&#x0A;the stiffness parameter value." id="2" />
                                  <Output name="onReady" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when stiffness has been set." id="3" />
                                  <Parameter name="Head" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Do we want to modify the head stiffness?" id="4" />
                                  <Parameter name="Left arm" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Do we want to modify the left arm stiffness?" id="5" />
                                  <Parameter name="Right arm" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Do we want to modify the right arm stiffness?" id="6" />
                                  <Parameter name="Left leg" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Do we want to modify the left leg stiffness?" id="7" />
                                  <Parameter name="Right leg" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Do we want to modify the right leg stiffness?" id="8" />
                                  <Parameter name="Motors stiffness (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Stiffness value the motors are set to." id="9" />
                                  <Parameter name="Duration (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0.02" max="10" tooltip="How much time to go to the max/min stiffness in seconds." id="10" />
                                </Box>
                                <Box name="Get Robot Pose" id="9" localization="8" tooltip="Return NAO&apos;s current pose.&#x0A;&#x0A;Note: The box waits for the robot pose to be stabilized. You can set the maximum&#x0A;time to wait in parameters. After this time is ellapsed, the current pose is sent to the&#x0A;output anyway." x="305" y="73">
                                  <bitmap>media/images/box/sensors/inertial_unit.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.robotPoseProxy = ALProxy("ALRobotPosture")
        self.threadTime = 0.1 #seconds

    def onLoad(self):
        self.bIsRunning = False
        self.bMustStop = False

    def onUnload(self):
        self.bMustStop = True

    def onInput_onStart(self):
        if( self.bIsRunning ):
            return
        self.bIsRunning = True
        self.bMustStop = False
        beginTime = time.time()
        RobotPoseAndTime = ["Unknown", 0.]
        while( not self.bMustStop ):
            RobotPoseAndTime = self.robotPoseProxy.getActualPoseAndTime()
            # as soon as the robot is not moving anymore from its position, give its position
            if( RobotPoseAndTime[1] > 0.5 or time.time() - beginTime > self.getParameter("Time to wait for pose stabilization (s)") ):
                self.bMustStop = True
            if( not self.bMustStop ):
                time.sleep(self.threadTime)
        self.robotPose(RobotPoseAndTime[0])
        self.bIsRunning = False]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Output name="robotPose" type="3" type_size="1" nature="2" inner="0" tooltip='NAO&apos;s current pose. It can be:&#x0A;- &quot;Unknown&quot;&#x0A;- &quot;Stand&quot;&#x0A;- &quot;Sit&quot;&#x0A;- &quot;Crouch&quot;&#x0A;- &quot;Knee&quot;&#x0A;- &quot;Frog&quot;&#x0A;- &quot;Back&quot;&#x0A;- &quot;Belly&quot;&#x0A;- &quot;Left&quot;&#x0A;- &quot;Right&quot;&#x0A;- &quot;HeadBack&quot;' id="3" />
                                  <Parameter name="Time to wait for pose stabilization (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0.5" max="10" tooltip="Maximum time to wait NAO&apos;s pose stabilization. After this time is ellapsed,&#x0A;the current pose is sent to the output even though it is not stabilized." id="4" />
                                </Box>
                                <Box name="Side" id="6" localization="8" tooltip='Stimulates the rightOutput or the leftOutput output depending on the side&#x0A;parameter. If it is set to &quot;Random&quot; then the side is chosen randomly.' x="416" y="404">
                                  <bitmap>media/images/box/movement/move_arm.png</bitmap>
                                  <bitmap>media/images/box/movement/move_leftarm.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import random

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        side = self.getParameter("Side")
        if( side == "Random" ):
            side = random.choice( ["Left", "Right"] )
        if( side == "Left" ):
            self.leftOutput()
        else:
            self.rightOutput()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip='When this input is stimulated the output corresponding to the side set in&#x0A;parameters is stimulated. If the side parameter is set to &quot;Random&quot; then the&#x0A;side is chosen randomly.' id="2" />
                                  <Output name="rightOutput" type="1" type_size="1" nature="2" inner="0" tooltip="The output corresponding to the right." id="3" />
                                  <Output name="leftOutput" type="1" type_size="1" nature="2" inner="0" tooltip="The output corresponding to the left." id="4" />
                                  <Parameter name="Side" inherits_from_parent="1" content_type="3" value="Random" default_value="Random" custom_choice="0" tooltip='Side chosen. If set to &quot;Random&quot; the side is chosen randomly.' id="5">
                                    <Choice value="Left" />
                                    <Choice value="Random" />
                                    <Choice value="Right" />
                                  </Parameter>
                                </Box>
                                <Box name="Left Stand Motion" id="1" localization="8" tooltip="The robot makes the right motion to stand up depending on its current position." x="562" y="451">
                                  <bitmap>media/images/box/movement/stand.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        self.count = 0
        pass

    def onInput_onStop(self):
        self.onUnload()
        pass]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent after a step to sit down is done." id="4" />
                                  <Timeline enable="0">
                                    <BehaviorLayer name="SitDownBehavior">
                                      <BehaviorKeyframe name="DetectRobotPose" index="1">
                                        <Diagram>
                                          <Box name="Switch Case" id="9" localization="8" tooltip="Test input value and stimulate the output matching to this value. If there is no&#x0A;output matching, the default output (onDefault) is stimulated.&#x0A;&#x0A;You can edit a case by left double-clicking on the line. You can add a&#x0A;case by right clicking on a line and selecting &apos;Insert a row&apos;. You can delete&#x0A;a case by right clicking on a line and selecting &apos;Remove a row&apos;." plugin="dispatcher_plugin" x="230" y="73">
                                            <bitmap>media/images/box/interaction/choice.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion("Left")):
			self.output_1(p)
		elif(p == self.typeConversion("Right")):
			self.output_2(p)
		elif(p == self.typeConversion("Back")):
			self.output_3(p)
		elif(p == self.typeConversion("Knee")):
			self.output_4(p)
		elif(p == self.typeConversion("Frog")):
			self.output_5(p)
		elif(p == self.typeConversion("Belly")):
			self.output_6(p)
		elif(p == self.typeConversion("Crouch")):
			self.output_7(p)
		elif(p == self.typeConversion("Sit")):
			self.output_8(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]>
                                              </content>
                                            </script>
                                            <pluginContent>
                                              <keywords>
                                                <keyword>&quot;Left&quot;</keyword>
                                                <keyword>&quot;Right&quot;</keyword>
                                                <keyword>&quot;Back&quot;</keyword>
                                                <keyword>&quot;Knee&quot;</keyword>
                                                <keyword>&quot;Frog&quot;</keyword>
                                                <keyword>&quot;Belly&quot;</keyword>
                                                <keyword>&quot;Crouch&quot;</keyword>
                                                <keyword>&quot;Sit&quot;</keyword>
                                                <keyword></keyword>
                                              </keywords>
                                            </pluginContent>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Value to test." id="2" />
                                            <Output name="onDefault" type="1" type_size="1" nature="1" inner="0" tooltip="If the input value does not match any value set on the box." id="3" />
                                            <Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="4" />
                                            <Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="5" />
                                            <Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="6" />
                                            <Output name="output_4" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="7" />
                                            <Output name="output_5" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="8" />
                                            <Output name="output_6" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="9" />
                                            <Output name="output_7" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="10" />
                                            <Output name="output_8" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="11" />
                                          </Box>
                                          <Box name="SitToCrouch" id="12" localization="8" tooltip="First motion to Stand up from a sitting position" x="689" y="627">
                                            <bitmap>media/images/box/movement/move.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #~ self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            <Timeline enable="1" fps="25" start_frame="1" end_frame="180" size="180" resources_acquisition="1">
                                              <ActuatorList model="nao">
                                                <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                                  <Key frame="15" value="0.0854875" />
                                                  <Key frame="28" value="-16" />
                                                  <Key frame="39" value="-19.9538" />
                                                  <Key frame="55" value="-27" />
                                                  <Key frame="75" value="-30" />
                                                  <Key frame="94" value="-16.4382" />
                                                  <Key frame="126" value="-0.538656" />
                                                  <Key frame="180" value="-0.538656" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                                  <Key frame="15" value="21.2674" />
                                                  <Key frame="28" value="21.1795" />
                                                  <Key frame="39" value="13" />
                                                  <Key frame="55" value="15.8" />
                                                  <Key frame="75" value="9" />
                                                  <Key frame="94" value="20.0369" />
                                                  <Key frame="126" value="21.707" />
                                                  <Key frame="180" value="21.707" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                                  <Key frame="15" value="32.4344" />
                                                  <Key frame="21" value="42" />
                                                  <Key frame="28" value="76.0287" />
                                                  <Key frame="39" value="112.68" />
                                                  <Key frame="55" value="119.496" />
                                                  <Key frame="75" value="118.48" />
                                                  <Key frame="85" value="119.496" />
                                                  <Key frame="94" value="116.195" />
                                                  <Key frame="109" value="92.4645" />
                                                  <Key frame="126" value="81.5659" />
                                                  <Key frame="180" value="69.7005" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                                  <Key frame="15" value="20.1296" />
                                                  <Key frame="28" value="38.6748" />
                                                  <Key frame="39" value="36.5654" />
                                                  <Key frame="48" value="36" />
                                                  <Key frame="55" value="0.5" />
                                                  <Key frame="75" value="29.1825" />
                                                  <Key frame="85" value="31.7313" />
                                                  <Key frame="94" value="32.3466" />
                                                  <Key frame="109" value="38.1474" />
                                                  <Key frame="126" value="33.0497" />
                                                  <Key frame="180" value="15.0319" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                                  <Key frame="15" value="-27.5077" />
                                                  <Key frame="28" value="-104.413" />
                                                  <Key frame="39" value="-117.685" />
                                                  <Key frame="55" value="5" />
                                                  <Key frame="75" value="4.66067" />
                                                  <Key frame="85" value="4.39699" />
                                                  <Key frame="94" value="3.78175" />
                                                  <Key frame="109" value="-18.1033" />
                                                  <Key frame="126" value="-96.239" />
                                                  <Key frame="180" value="-55.3694" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                                  <Key frame="15" value="-69.7005" />
                                                  <Key frame="28" value="-58.9778" />
                                                  <Key frame="39" value="-39.0263" />
                                                  <Key frame="48" value="-49" />
                                                  <Key frame="55" value="-0.5" />
                                                  <Key frame="75" value="-4.57277" />
                                                  <Key frame="85" value="-3.43018" />
                                                  <Key frame="94" value="-0.969213" />
                                                  <Key frame="109" value="-19.0749" />
                                                  <Key frame="126" value="-28.4793" />
                                                  <Key frame="180" value="-55.7258" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                                  <Key frame="15" value="-61.6097" />
                                                  <Key frame="28" value="-62.7523" />
                                                  <Key frame="39" value="-62.3128" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                                  <Key frame="15" value="0.0181527" />
                                                  <Key frame="28" value="0.126571" />
                                                  <Key frame="39" value="0.140026" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                                  <Key frame="15" value="28.4" />
                                                  <Key frame="28" value="32.9" />
                                                  <Key frame="39" value="35.9" />
                                                  <Key frame="55" value="58.094" />
                                                  <Key frame="64" value="37.3" />
                                                  <Key frame="75" value="43.0645" />
                                                  <Key frame="94" value="64.2" />
                                                  <Key frame="109" value="67.2" />
                                                  <Key frame="126" value="80.7" />
                                                  <Key frame="180" value="61.2" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                                  <Key frame="15" value="-13.9724" />
                                                  <Key frame="21" value="-28.3" />
                                                  <Key frame="28" value="-23.8163" />
                                                  <Key frame="39" value="-29.2" />
                                                  <Key frame="55" value="-43.2" />
                                                  <Key frame="64" value="-35" />
                                                  <Key frame="75" value="-29.2655" />
                                                  <Key frame="94" value="-4.39218" />
                                                  <Key frame="109" value="-8.87466" />
                                                  <Key frame="126" value="-39.461" />
                                                  <Key frame="180" value="-33.9238" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                                  <Key frame="15" value="31.204" />
                                                  <Key frame="28" value="40.7842" />
                                                  <Key frame="39" value="42.1904" />
                                                  <Key frame="55" value="46.8487" />
                                                  <Key frame="64" value="17.0534" />
                                                  <Key frame="75" value="9.31893" />
                                                  <Key frame="94" value="49.837" />
                                                  <Key frame="109" value="58.0988" />
                                                  <Key frame="126" value="52.7374" />
                                                  <Key frame="180" value="20.9206" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                                  <Key frame="15" value="60.9066" />
                                                  <Key frame="28" value="53.5237" />
                                                  <Key frame="39" value="45.4376" />
                                                  <Key frame="55" value="53.9631" />
                                                  <Key frame="64" value="61.1702" />
                                                  <Key frame="75" value="35.7695" />
                                                  <Key frame="94" value="51.0627" />
                                                  <Key frame="109" value="48.7775" />
                                                  <Key frame="126" value="70.8383" />
                                                  <Key frame="180" value="61.7855" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                                  <Key frame="15" value="42.542" />
                                                  <Key frame="28" value="44.2119" />
                                                  <Key frame="39" value="42.1904" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                                  <Key frame="15" value="0.0181527" />
                                                  <Key frame="28" value="0.0665718" />
                                                  <Key frame="39" value="0.0720262" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                                  <Key frame="15" value="-38.7578" />
                                                  <Key frame="28" value="-37.3412" />
                                                  <Key frame="39" value="-43.0541" />
                                                  <Key frame="75" value="-28.5959" />
                                                  <Key frame="82" value="-36.9896" />
                                                  <Key frame="94" value="-49.2155" />
                                                  <Key frame="126" value="-24.871" />
                                                  <Key frame="145" value="-16.1697" />
                                                  <Key frame="180" value="-9.92936" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                                  <Key frame="15" value="8.25942" />
                                                  <Key frame="28" value="7.64074" />
                                                  <Key frame="39" value="12.0353" />
                                                  <Key frame="55" value="31" />
                                                  <Key frame="75" value="31.9952" />
                                                  <Key frame="82" value="42.0943" />
                                                  <Key frame="94" value="35" />
                                                  <Key frame="126" value="14.5876" />
                                                  <Key frame="145" value="4.65586" />
                                                  <Key frame="180" value="4.30429" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                                  <Key frame="15" value="-88.9488" />
                                                  <Key frame="28" value="-90" />
                                                  <Key frame="39" value="-90" />
                                                  <Key frame="55" value="-90" />
                                                  <Key frame="75" value="-87.3668" />
                                                  <Key frame="82" value="-90" />
                                                  <Key frame="94" value="-89.3612" />
                                                  <Key frame="126" value="-48.6944" />
                                                  <Key frame="145" value="-38.8505" />
                                                  <Key frame="180" value="-37.1806" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                                  <Key frame="15" value="48.3429" />
                                                  <Key frame="28" value="54.6752" />
                                                  <Key frame="39" value="69.6168" />
                                                  <Key frame="55" value="96" />
                                                  <Key frame="75" value="70" />
                                                  <Key frame="82" value="72.9567" />
                                                  <Key frame="94" value="63" />
                                                  <Key frame="126" value="34.1044" />
                                                  <Key frame="145" value="82.5327" />
                                                  <Key frame="180" value="90.5309" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                                  <Key frame="15" value="45.003" />
                                                  <Key frame="28" value="43.5603" />
                                                  <Key frame="39" value="43.5603" />
                                                  <Key frame="55" value="38" />
                                                  <Key frame="75" value="45" />
                                                  <Key frame="82" value="38.3747" />
                                                  <Key frame="94" value="45" />
                                                  <Key frame="109" value="45" />
                                                  <Key frame="118" value="31" />
                                                  <Key frame="126" value="27.6004" />
                                                  <Key frame="145" value="-21.1795" />
                                                  <Key frame="180" value="-45.1739" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                                  <Key frame="15" value="-2.81494" />
                                                  <Key frame="28" value="-0.0417638" />
                                                  <Key frame="39" value="0.0461279" />
                                                  <Key frame="55" value="-10" />
                                                  <Key frame="75" value="-0.532261" />
                                                  <Key frame="82" value="-4.26057" />
                                                  <Key frame="88" value="9" />
                                                  <Key frame="94" value="6" />
                                                  <Key frame="109" value="-14" />
                                                  <Key frame="118" value="-20" />
                                                  <Key frame="126" value="-25.2273" />
                                                  <Key frame="145" value="-24.2605" />
                                                  <Key frame="180" value="-5.18802" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                                  <Key frame="15" value="-8.00055" />
                                                  <Key frame="28" value="-8.30857" />
                                                  <Key frame="39" value="-8.48435" />
                                                  <Key frame="55" value="-31" />
                                                  <Key frame="75" value="-8.87947" />
                                                  <Key frame="82" value="1.44741" />
                                                  <Key frame="94" value="10" />
                                                  <Key frame="126" value="-10.4615" />
                                                  <Key frame="145" value="-25.2273" />
                                                  <Key frame="180" value="-7.4732" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                                  <Key frame="15" value="-89.9987" />
                                                  <Key frame="28" value="-90" />
                                                  <Key frame="39" value="-90" />
                                                  <Key frame="55" value="-90" />
                                                  <Key frame="75" value="-49.1057" />
                                                  <Key frame="82" value="-34.1405" />
                                                  <Key frame="94" value="-3" />
                                                  <Key frame="109" value="-23" />
                                                  <Key frame="126" value="-39.5489" />
                                                  <Key frame="145" value="-43.2403" />
                                                  <Key frame="180" value="-41.8341" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                                  <Key frame="15" value="41.4825" />
                                                  <Key frame="28" value="54.9601" />
                                                  <Key frame="39" value="67.8801" />
                                                  <Key frame="55" value="96" />
                                                  <Key frame="75" value="121.04" />
                                                  <Key frame="82" value="121.04" />
                                                  <Key frame="94" value="121.04" />
                                                  <Key frame="126" value="114.696" />
                                                  <Key frame="145" value="121.039" />
                                                  <Key frame="180" value="92.7234" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                                  <Key frame="15" value="44.4708" />
                                                  <Key frame="28" value="43.2822" />
                                                  <Key frame="39" value="43.2822" />
                                                  <Key frame="55" value="38" />
                                                  <Key frame="75" value="-26" />
                                                  <Key frame="82" value="-39" />
                                                  <Key frame="94" value="-63" />
                                                  <Key frame="126" value="-68.15" />
                                                  <Key frame="145" value="-68.15" />
                                                  <Key frame="180" value="-42.1904" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                                  <Key frame="15" value="2.89802" />
                                                  <Key frame="28" value="0.315349" />
                                                  <Key frame="39" value="-1.53038" />
                                                  <Key frame="55" value="10" />
                                                  <Key frame="75" value="22.6737" />
                                                  <Key frame="82" value="4.97361" />
                                                  <Key frame="94" value="5.94664" />
                                                  <Key frame="126" value="-0.617646" />
                                                  <Key frame="145" value="0.964405" />
                                                  <Key frame="180" value="5.09532" />
                                                </ActuatorCurve>
                                              </ActuatorList>
                                            </Timeline>
                                          </Box>
                                          <Box name="CrouchToStand" id="3" localization="8" tooltip="From the old bad position" x="1206" y="505">
                                            <bitmap>media/images/box/movement/move.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		""

	def onInput_onStop(self):
		""]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="15">
                                              <ActuatorList model="nao">
                                                <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                                  <Key frame="15" value="3.86483" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                                  <Key frame="15" value="-2.37548" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                                  <Key frame="15" value="84.1148" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                                  <Key frame="15" value="8.44001" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                                  <Key frame="15" value="-52.1174" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                                  <Key frame="15" value="-21.2722" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                                  <Key frame="15" value="-60.4671" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                                  <Key frame="15" value="0.218207" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                                  <Key frame="15" value="90.8776" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                                  <Key frame="15" value="-12.8298" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                                  <Key frame="15" value="58.5383" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                                  <Key frame="15" value="37.791" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                                  <Key frame="15" value="43.0693" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                                  <Key frame="15" value="0.26148" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                                  <Key frame="15" value="-13.7087" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                                  <Key frame="15" value="3.33748" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                                  <Key frame="15" value="12.1267" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                                  <Key frame="15" value="-4.39218" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                                  <Key frame="15" value="4.57277" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                                  <Key frame="15" value="-3.43018" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                                  <Key frame="15" value="-8.5279" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                                  <Key frame="15" value="12.1315" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                                  <Key frame="15" value="-5.18802" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                                  <Key frame="15" value="4.65586" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                                  <Key frame="15" value="7.64418" />
                                                </ActuatorCurve>
                                              </ActuatorList>
                                            </Timeline>
                                          </Box>
                                          <Box name="BellyToStand" id="16" localization="8" tooltip="First motion to Stand up from the belly" x="1199" y="347">
                                            <bitmap>media/images/box/movement/move.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="100">
                                              <ActuatorList model="nao">
                                                <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                                  <Key frame="10" value="0" />
                                                  <Key frame="20" value="-13" />
                                                  <Key frame="34" value="16.4" />
                                                  <Key frame="45" value="17" />
                                                  <Key frame="58" value="-28.4" />
                                                  <Key frame="65" value="-17" />
                                                  <Key frame="76" value="3" />
                                                  <Key frame="89" value="-22.4" />
                                                  <Key frame="100" value="3.86483" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="-38.5" />
                                                  <Key frame="20" value="-31.3797" />
                                                  <Key frame="34" value="6.15002" />
                                                  <Key frame="45" value="29.5" />
                                                  <Key frame="58" value="21.8" />
                                                  <Key frame="65" value="21.2674" />
                                                  <Key frame="76" value="-6" />
                                                  <Key frame="89" value="-30.5887" />
                                                  <Key frame="100" value="7.3" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="4.83164" />
                                                  <Key frame="20" value="-86.6" />
                                                  <Key frame="34" value="-70.0473" />
                                                  <Key frame="45" value="-13.5329" />
                                                  <Key frame="58" value="12.483" />
                                                  <Key frame="65" value="25.7547" />
                                                  <Key frame="76" value="52.3859" />
                                                  <Key frame="89" value="55.0226" />
                                                  <Key frame="100" value="84.73" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="89.0319" />
                                                  <Key frame="20" value="11" />
                                                  <Key frame="34" value="4.74856" />
                                                  <Key frame="45" value="4.74856" />
                                                  <Key frame="58" value="13.0104" />
                                                  <Key frame="65" value="10.4615" />
                                                  <Key frame="76" value="0.498473" />
                                                  <Key frame="89" value="7.56109" />
                                                  <Key frame="100" value="8.5279" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                                  <Key frame="10" value="-119" />
                                                  <Key frame="20" value="-89.4714" />
                                                  <Key frame="34" value="-92.4597" />
                                                  <Key frame="45" value="-96.5906" />
                                                  <Key frame="58" value="-112.323" />
                                                  <Key frame="65" value="-111.796" />
                                                  <Key frame="76" value="-38.1426" />
                                                  <Key frame="89" value="-22.6737" />
                                                  <Key frame="100" value="-52.1174" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="-0.5" />
                                                  <Key frame="20" value="-21.8874" />
                                                  <Key frame="34" value="-36.3896" />
                                                  <Key frame="45" value="-89.2125" />
                                                  <Key frame="58" value="-0.498473" />
                                                  <Key frame="65" value="-0.498473" />
                                                  <Key frame="76" value="-24.2605" />
                                                  <Key frame="89" value="-37.2" />
                                                  <Key frame="100" value="-22.5027" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                                  <Key frame="10" value="-88.8609" />
                                                  <Key frame="20" value="-86.4831" />
                                                  <Key frame="34" value="-85.7799" />
                                                  <Key frame="45" value="-81.8248" />
                                                  <Key frame="58" value="-82.2643" />
                                                  <Key frame="65" value="-82.5279" />
                                                  <Key frame="76" value="-82.7037" />
                                                  <Key frame="89" value="-82.5279" />
                                                  <Key frame="100" value="-62.2249" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                                  <Key frame="10" value="0.0585718" />
                                                  <Key frame="20" value="0.0127537" />
                                                  <Key frame="34" value="0.0262082" />
                                                  <Key frame="45" value="0.0469355" />
                                                  <Key frame="58" value="0.0494809" />
                                                  <Key frame="65" value="0.04839" />
                                                  <Key frame="76" value="0.0472991" />
                                                  <Key frame="89" value="0.04839" />
                                                  <Key frame="100" value="0.217844" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="-1.57965" />
                                                  <Key frame="20" value="-86.6" />
                                                  <Key frame="34" value="-71.6342" />
                                                  <Key frame="45" value="4.12851" />
                                                  <Key frame="58" value="73" />
                                                  <Key frame="65" value="43.3" />
                                                  <Key frame="76" value="43" />
                                                  <Key frame="89" value="74" />
                                                  <Key frame="100" value="91.3171" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="-87.982" />
                                                  <Key frame="20" value="-0.964405" />
                                                  <Key frame="34" value="-4.39218" />
                                                  <Key frame="45" value="-4.04062" />
                                                  <Key frame="58" value="-8.96255" />
                                                  <Key frame="65" value="-53.8" />
                                                  <Key frame="76" value="-38.8" />
                                                  <Key frame="89" value="-48.5" />
                                                  <Key frame="100" value="-12.4782" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                                  <Key frame="10" value="119" />
                                                  <Key frame="20" value="90.5309" />
                                                  <Key frame="34" value="91.9371" />
                                                  <Key frame="45" value="102.396" />
                                                  <Key frame="58" value="76.0287" />
                                                  <Key frame="65" value="71.5" />
                                                  <Key frame="76" value="55.7258" />
                                                  <Key frame="89" value="55" />
                                                  <Key frame="100" value="58.3625" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="6" />
                                                  <Key frame="20" value="20.2127" />
                                                  <Key frame="34" value="36.5606" />
                                                  <Key frame="45" value="48.7775" />
                                                  <Key frame="58" value="88.8561" />
                                                  <Key frame="65" value="42" />
                                                  <Key frame="76" value="42.2" />
                                                  <Key frame="89" value="66.1801" />
                                                  <Key frame="100" value="39.0215" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                                  <Key frame="10" value="86.4831" />
                                                  <Key frame="20" value="88.8609" />
                                                  <Key frame="34" value="86.9273" />
                                                  <Key frame="45" value="82.9722" />
                                                  <Key frame="58" value="80.5112" />
                                                  <Key frame="65" value="80.687" />
                                                  <Key frame="76" value="80.687" />
                                                  <Key frame="89" value="31.2" />
                                                  <Key frame="100" value="40.6963" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                                  <Key frame="10" value="0.0185718" />
                                                  <Key frame="20" value="0.0196627" />
                                                  <Key frame="34" value="0.0407536" />
                                                  <Key frame="45" value="0.0545718" />
                                                  <Key frame="58" value="0.0574809" />
                                                  <Key frame="65" value="0.0574809" />
                                                  <Key frame="76" value="0.0549355" />
                                                  <Key frame="89" value="0.0574809" />
                                                  <Key frame="100" value="0.260753" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="1.3" />
                                                  <Key frame="20" value="2" />
                                                  <Key frame="34" value="-24.9588" />
                                                  <Key frame="45" value="-44.6466" />
                                                  <Key frame="58" value="-59.6761" />
                                                  <Key frame="65" value="-65.621" />
                                                  <Key frame="76" value="-65.621" />
                                                  <Key frame="89" value="-32.5175" />
                                                  <Key frame="100" value="-13.5329" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="0" />
                                                  <Key frame="20" value="-0.00240423" />
                                                  <Key frame="34" value="-0.090296" />
                                                  <Key frame="45" value="-17.8444" />
                                                  <Key frame="58" value="-14.5924" />
                                                  <Key frame="65" value="-18.3718" />
                                                  <Key frame="76" value="-13.0104" />
                                                  <Key frame="89" value="4.30429" />
                                                  <Key frame="100" value="3.42537" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="-46.1" />
                                                  <Key frame="20" value="-0.00240423" />
                                                  <Key frame="34" value="-90.3551" />
                                                  <Key frame="45" value="-95.1891" />
                                                  <Key frame="58" value="-68.7337" />
                                                  <Key frame="65" value="-91.5856" />
                                                  <Key frame="76" value="-18.4597" />
                                                  <Key frame="89" value="-40.6963" />
                                                  <Key frame="100" value="12.0388" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                                  <Key frame="10" value="-5.29" />
                                                  <Key frame="20" value="114" />
                                                  <Key frame="34" value="119.535" />
                                                  <Key frame="45" value="99.8474" />
                                                  <Key frame="58" value="121.478" />
                                                  <Key frame="65" value="121.478" />
                                                  <Key frame="76" value="121.478" />
                                                  <Key frame="89" value="121.478" />
                                                  <Key frame="100" value="-4.39218" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                                  <Key frame="10" value="36.9" />
                                                  <Key frame="20" value="-59" />
                                                  <Key frame="34" value="-65.2133" />
                                                  <Key frame="45" value="-67.9785" />
                                                  <Key frame="58" value="-67.9785" />
                                                  <Key frame="65" value="-33.748" />
                                                  <Key frame="76" value="-67.9785" />
                                                  <Key frame="89" value="-67.9785" />
                                                  <Key frame="100" value="4.92434" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="0" />
                                                  <Key frame="20" value="-0.00240423" />
                                                  <Key frame="34" value="-0.353971" />
                                                  <Key frame="45" value="0.261271" />
                                                  <Key frame="58" value="5.62267" />
                                                  <Key frame="65" value="0.788621" />
                                                  <Key frame="76" value="5.44688" />
                                                  <Key frame="89" value="-2.02391" />
                                                  <Key frame="100" value="-3.51807" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="0" />
                                                  <Key frame="20" value="-0.00240423" />
                                                  <Key frame="34" value="-0.090296" />
                                                  <Key frame="45" value="21.619" />
                                                  <Key frame="58" value="17.0486" />
                                                  <Key frame="65" value="17.0486" />
                                                  <Key frame="76" value="-11.1647" />
                                                  <Key frame="89" value="-7.29742" />
                                                  <Key frame="100" value="-8.5279" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="-46.1" />
                                                  <Key frame="20" value="0.00240423" />
                                                  <Key frame="34" value="-89.9108" />
                                                  <Key frame="45" value="-73.3872" />
                                                  <Key frame="58" value="-59.4124" />
                                                  <Key frame="65" value="-66.4437" />
                                                  <Key frame="76" value="-67.7621" />
                                                  <Key frame="89" value="-72.7719" />
                                                  <Key frame="100" value="12.2194" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                                  <Key frame="10" value="-5.29" />
                                                  <Key frame="20" value="114" />
                                                  <Key frame="34" value="121.039" />
                                                  <Key frame="45" value="16.1697" />
                                                  <Key frame="58" value="23.201" />
                                                  <Key frame="65" value="20.4764" />
                                                  <Key frame="76" value="41.2188" />
                                                  <Key frame="89" value="115.399" />
                                                  <Key frame="100" value="-5.18802" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                                  <Key frame="10" value="36.9" />
                                                  <Key frame="20" value="-59" />
                                                  <Key frame="34" value="-65.9212" />
                                                  <Key frame="45" value="12.3903" />
                                                  <Key frame="58" value="40.6915" />
                                                  <Key frame="65" value="52.8695" />
                                                  <Key frame="76" value="47.2833" />
                                                  <Key frame="89" value="-28.743" />
                                                  <Key frame="100" value="4.39218" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="0" />
                                                  <Key frame="20" value="-0.00240423" />
                                                  <Key frame="34" value="0.0854875" />
                                                  <Key frame="45" value="25.9257" />
                                                  <Key frame="58" value="17.2244" />
                                                  <Key frame="65" value="6.76526" />
                                                  <Key frame="76" value="2.37067" />
                                                  <Key frame="89" value="6.94104" />
                                                  <Key frame="100" value="7.73207" />
                                                </ActuatorCurve>
                                              </ActuatorList>
                                            </Timeline>
                                          </Box>
                                          <Box name="BackToStand" id="5" localization="8" tooltip="First motion to Stand up from the back" x="1194" y="231">
                                            <bitmap>media/images/box/movement/move.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="105" resources_acquisition="1">
                                              <BehaviorLayer name="behavior_layer1">
                                                <BehaviorKeyframe name="keyframe10" index="10">
                                                  <Diagram>
                                                    <Box name="Disable Anti-Collision" id="2" localization="8" tooltip="Disable the collision protection on some specific part of NAO&apos;s body.&#x0A;&#x0A;Note: When this box is unloaded, the collision protection state will be reset to&#x0A;its previous state (enabled or disabled)." x="134" y="41">
                                                      <bitmap>media/images/box/sensors/anti_collision.png</bitmap>
                                                      <script language="4">
                                                        <content>
                                                          <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.motion = ALProxy( "ALMotion" )

    def onLoad(self):
        self.collisionLArmState = self.motion.getCollisionProtectionEnabled("LArm")
        self.collisionRArmState = self.motion.getCollisionProtectionEnabled("RArm")

    def onUnload(self):
        self.motion.setCollisionProtectionEnabled("LArm", self.collisionLArmState)
        self.motion.setCollisionProtectionEnabled("RArm", self.collisionRArmState)

    def onInput_onSet(self):
        # enable/disable collision protection
        result = self.motion.setCollisionProtectionEnabled( self.getParameter("Body part"), False )
        if( result ):
            self.success()
        else:
            self.logger.warning( "Disabling collision protection failed. Deactivation succeeds only if the current state of the chain is not in collision. If you want to deactivate collision of both arms, they need to be off collision." )
            self.failure()]]>
                                                        </content>
                                                      </script>
                                                      <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                      <Input name="onSet" type="1" type_size="1" nature="1" inner="0" tooltip="The anti-collision feature is enabled or disabled when this input is stimulated." id="2" />
                                                      <Output name="success" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent if the collision protection has been successfully enabled or disabled.&#x0A;&#x0A;Note: The only case where there is a failure is when you try to disable the&#x0A;anti-collision while it is currently in collision with some part of his body." id="3" />
                                                      <Output name="failure" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent if the collision protection has failed to be enabled or disabled.&#x0A;&#x0A;Note: The only case where there is a failure is when you try to disable the&#x0A;anti-collision while it is currently in collision with some part of his body." id="4" />
                                                      <Parameter name="Body part" inherits_from_parent="0" content_type="3" value="Arms" default_value="Arms" custom_choice="0" tooltip="Body part which avoids the collision." id="5">
                                                        <Choice value="Arms" />
                                                        <Choice value="LArm" />
                                                        <Choice value="RArm" />
                                                      </Parameter>
                                                    </Box>
                                                    <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                  </Diagram>
                                                </BehaviorKeyframe>
                                              </BehaviorLayer>
                                              <ActuatorList model="nao">
                                                <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                                  <Key frame="10" value="-1.40867" />
                                                  <Key frame="20" value="-2.73208e-05" />
                                                  <Key frame="28" value="2.37067" />
                                                  <Key frame="36" value="3.86374e-05" />
                                                  <Key frame="43" value="1.93188e-05" />
                                                  <Key frame="48" value="1.93187e-05" />
                                                  <Key frame="56" value="-29.4461" />
                                                  <Key frame="65" value="-17.3171" />
                                                  <Key frame="74" value="15.1" />
                                                  <Key frame="80" value="6.9" />
                                                  <Key frame="86" value="-0.538656" />
                                                  <Key frame="105" value="3.77694" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="3.60116" />
                                                  <Key frame="20" value="0" />
                                                  <Key frame="28" value="29.5016" />
                                                  <Key frame="36" value="-38.5028" />
                                                  <Key frame="43" value="0" />
                                                  <Key frame="48" value="20" />
                                                  <Key frame="56" value="9.84147" />
                                                  <Key frame="65" value="19.7732" />
                                                  <Key frame="74" value="0.6" />
                                                  <Key frame="80" value="1.7" />
                                                  <Key frame="86" value="21.707" />
                                                  <Key frame="105" value="-2.28759" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="119.496" />
                                                  <Key frame="20" value="119.5" />
                                                  <Key frame="26" value="111.889" />
                                                  <Key frame="36" value="119.496" />
                                                  <Key frame="43" value="119.496" />
                                                  <Key frame="48" value="119.496" />
                                                  <Key frame="56" value="119.008" />
                                                  <Key frame="65" value="116.723" />
                                                  <Key frame="74" value="82.5327" />
                                                  <Key frame="80" value="51.0681" />
                                                  <Key frame="86" value="51.0681" />
                                                  <Key frame="105" value="84.2027" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="61.5266" />
                                                  <Key frame="20" value="21" />
                                                  <Key frame="26" value="20" />
                                                  <Key frame="36" value="20" />
                                                  <Key frame="43" value="21" />
                                                  <Key frame="48" value="0.498473" />
                                                  <Key frame="56" value="26.1941" />
                                                  <Key frame="65" value="32.3466" />
                                                  <Key frame="74" value="40.4326" />
                                                  <Key frame="80" value="50" />
                                                  <Key frame="86" value="39" />
                                                  <Key frame="105" value="8.61579" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                                  <Key frame="10" value="-43.8556" />
                                                  <Key frame="20" value="9" />
                                                  <Key frame="26" value="14.7682" />
                                                  <Key frame="36" value="5" />
                                                  <Key frame="43" value="5" />
                                                  <Key frame="48" value="5" />
                                                  <Key frame="56" value="4.66067" />
                                                  <Key frame="65" value="3.95753" />
                                                  <Key frame="74" value="1.49656" />
                                                  <Key frame="80" value="-0.0352695" />
                                                  <Key frame="86" value="-0.0352695" />
                                                  <Key frame="105" value="-52.2932" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="-40.6963" />
                                                  <Key frame="20" value="-2" />
                                                  <Key frame="26" value="-88.5" />
                                                  <Key frame="36" value="-89.5017" />
                                                  <Key frame="43" value="-40" />
                                                  <Key frame="48" value="-0.498473" />
                                                  <Key frame="56" value="-5.53958" />
                                                  <Key frame="65" value="-1.23289" />
                                                  <Key frame="74" value="-10.901" />
                                                  <Key frame="80" value="-26" />
                                                  <Key frame="86" value="-32.0829" />
                                                  <Key frame="105" value="-21.7996" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                                  <Key frame="10" value="-66.0043" />
                                                  <Key frame="26" value="-98.8758" />
                                                  <Key frame="56" value="-61.8734" />
                                                  <Key frame="65" value="-61.7855" />
                                                  <Key frame="74" value="-61.8734" />
                                                  <Key frame="105" value="-62.137" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                                  <Key frame="10" value="0" />
                                                  <Key frame="20" value="0" />
                                                  <Key frame="26" value="0.0182082" />
                                                  <Key frame="43" value="0" />
                                                  <Key frame="56" value="0.16439" />
                                                  <Key frame="65" value="0.171662" />
                                                  <Key frame="74" value="0.176753" />
                                                  <Key frame="105" value="0.215298" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="119.496" />
                                                  <Key frame="20" value="119.5" />
                                                  <Key frame="26" value="116.806" />
                                                  <Key frame="36" value="119.496" />
                                                  <Key frame="43" value="119.496" />
                                                  <Key frame="48" value="119.496" />
                                                  <Key frame="56" value="116.454" />
                                                  <Key frame="65" value="73.7388" />
                                                  <Key frame="74" value="54.842" />
                                                  <Key frame="80" value="42.0098" />
                                                  <Key frame="86" value="42.0098" />
                                                  <Key frame="105" value="91.2292" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="-56.1604" />
                                                  <Key frame="20" value="-21" />
                                                  <Key frame="26" value="-20" />
                                                  <Key frame="36" value="-20" />
                                                  <Key frame="43" value="-21" />
                                                  <Key frame="48" value="-0.498473" />
                                                  <Key frame="56" value="-17.1365" />
                                                  <Key frame="60" value="-25.4" />
                                                  <Key frame="65" value="-4.04062" />
                                                  <Key frame="74" value="-15.2908" />
                                                  <Key frame="80" value="-28.5624" />
                                                  <Key frame="86" value="-28.5624" />
                                                  <Key frame="105" value="-12.5661" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                                  <Key frame="10" value="43.5967" />
                                                  <Key frame="20" value="-9" />
                                                  <Key frame="26" value="-7.02893" />
                                                  <Key frame="36" value="-5" />
                                                  <Key frame="43" value="-5" />
                                                  <Key frame="48" value="-5" />
                                                  <Key frame="56" value="112.328" />
                                                  <Key frame="65" value="48.9581" />
                                                  <Key frame="74" value="14.3288" />
                                                  <Key frame="80" value="-4.75993" />
                                                  <Key frame="86" value="-4.75993" />
                                                  <Key frame="105" value="59.0656" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="35.7695" />
                                                  <Key frame="20" value="2" />
                                                  <Key frame="26" value="88.5" />
                                                  <Key frame="36" value="89.5017" />
                                                  <Key frame="43" value="40" />
                                                  <Key frame="48" value="0.498473" />
                                                  <Key frame="52" value="11" />
                                                  <Key frame="56" value="59.9398" />
                                                  <Key frame="65" value="50.008" />
                                                  <Key frame="74" value="47.547" />
                                                  <Key frame="80" value="46.1434" />
                                                  <Key frame="86" value="46.1434" />
                                                  <Key frame="105" value="39.0215" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                                  <Key frame="10" value="40.4326" />
                                                  <Key frame="26" value="102.484" />
                                                  <Key frame="56" value="41.5752" />
                                                  <Key frame="65" value="41.2236" />
                                                  <Key frame="74" value="41.3994" />
                                                  <Key frame="105" value="40.7842" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                                  <Key frame="10" value="0.0502082" />
                                                  <Key frame="26" value="0.0763898" />
                                                  <Key frame="56" value="0.125481" />
                                                  <Key frame="65" value="0.154208" />
                                                  <Key frame="74" value="0.166208" />
                                                  <Key frame="105" value="0.258207" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="-26.9804" />
                                                  <Key frame="20" value="0" />
                                                  <Key frame="32" value="0.441863" />
                                                  <Key frame="36" value="-2.73208e-05" />
                                                  <Key frame="43" value="-37.5274" />
                                                  <Key frame="56" value="-28.5624" />
                                                  <Key frame="65" value="-49.217" />
                                                  <Key frame="74" value="-39.9" />
                                                  <Key frame="80" value="-23.0475" />
                                                  <Key frame="86" value="-23.0475" />
                                                  <Key frame="105" value="-13.1814" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="8.52309" />
                                                  <Key frame="20" value="0" />
                                                  <Key frame="32" value="1.31597" />
                                                  <Key frame="36" value="0" />
                                                  <Key frame="43" value="-3.54635" />
                                                  <Key frame="48" value="31" />
                                                  <Key frame="56" value="31.9902" />
                                                  <Key frame="65" value="34.9785" />
                                                  <Key frame="74" value="35.9" />
                                                  <Key frame="80" value="17" />
                                                  <Key frame="86" value="1" />
                                                  <Key frame="105" value="3.60116" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="10.6325" />
                                                  <Key frame="20" value="-10" />
                                                  <Key frame="32" value="16.1697" />
                                                  <Key frame="36" value="-10" />
                                                  <Key frame="43" value="-66.7243" />
                                                  <Key frame="48" value="-90" />
                                                  <Key frame="56" value="-87.3668" />
                                                  <Key frame="65" value="-89.3883" />
                                                  <Key frame="74" value="-59" />
                                                  <Key frame="80" value="-51.9" />
                                                  <Key frame="86" value="-51.9" />
                                                  <Key frame="105" value="11.9509" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                                  <Key frame="10" value="10.9889" />
                                                  <Key frame="20" value="96" />
                                                  <Key frame="32" value="116.107" />
                                                  <Key frame="36" value="96" />
                                                  <Key frame="43" value="62.6734" />
                                                  <Key frame="48" value="96" />
                                                  <Key frame="56" value="69.9642" />
                                                  <Key frame="65" value="63.0208" />
                                                  <Key frame="74" value="62.1" />
                                                  <Key frame="80" value="50.2" />
                                                  <Key frame="86" value="101" />
                                                  <Key frame="105" value="-4.39218" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                                  <Key frame="10" value="26.7215" />
                                                  <Key frame="20" value="14" />
                                                  <Key frame="32" value="-21.4432" />
                                                  <Key frame="36" value="14" />
                                                  <Key frame="43" value="41.102" />
                                                  <Key frame="48" value="38" />
                                                  <Key frame="56" value="45.003" />
                                                  <Key frame="65" value="44.9151" />
                                                  <Key frame="74" value="25.3" />
                                                  <Key frame="80" value="23.1" />
                                                  <Key frame="86" value="-33.2" />
                                                  <Key frame="105" value="4.66067" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="-9.5826" />
                                                  <Key frame="20" value="-4.94951e-06" />
                                                  <Key frame="32" value="2.28278" />
                                                  <Key frame="36" value="-4.94951e-06" />
                                                  <Key frame="43" value="9.21535" />
                                                  <Key frame="48" value="-6" />
                                                  <Key frame="56" value="-0.529755" />
                                                  <Key frame="65" value="5.62267" />
                                                  <Key frame="74" value="-25.4" />
                                                  <Key frame="80" value="-38.9384" />
                                                  <Key frame="86" value="-15.9" />
                                                  <Key frame="105" value="-3.60596" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="-2.55126" />
                                                  <Key frame="20" value="-8.991e-06" />
                                                  <Key frame="32" value="-3.34229" />
                                                  <Key frame="36" value="-8.991e-06" />
                                                  <Key frame="43" value="3.71174" />
                                                  <Key frame="48" value="-31" />
                                                  <Key frame="56" value="-8.87947" />
                                                  <Key frame="65" value="10.0173" />
                                                  <Key frame="74" value="-0.529755" />
                                                  <Key frame="80" value="-11" />
                                                  <Key frame="86" value="-10" />
                                                  <Key frame="105" value="-8.70368" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="14.3288" />
                                                  <Key frame="20" value="-10" />
                                                  <Key frame="32" value="21.448" />
                                                  <Key frame="36" value="-10" />
                                                  <Key frame="43" value="-67.4992" />
                                                  <Key frame="48" value="-90" />
                                                  <Key frame="56" value="-49.1291" />
                                                  <Key frame="65" value="-3.24959" />
                                                  <Key frame="74" value="-26.1014" />
                                                  <Key frame="80" value="-49" />
                                                  <Key frame="86" value="-47.8986" />
                                                  <Key frame="105" value="12.2194" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                                  <Key frame="10" value="5.2711" />
                                                  <Key frame="20" value="96" />
                                                  <Key frame="32" value="115.751" />
                                                  <Key frame="36" value="96" />
                                                  <Key frame="43" value="61.7515" />
                                                  <Key frame="48" value="96" />
                                                  <Key frame="56" value="120.937" />
                                                  <Key frame="65" value="121.024" />
                                                  <Key frame="74" value="121.039" />
                                                  <Key frame="80" value="121.039" />
                                                  <Key frame="86" value="121.039" />
                                                  <Key frame="105" value="-5.10012" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                                  <Key frame="10" value="47.2833" />
                                                  <Key frame="20" value="14" />
                                                  <Key frame="32" value="-26.0184" />
                                                  <Key frame="36" value="14" />
                                                  <Key frame="43" value="38.8165" />
                                                  <Key frame="48" value="38" />
                                                  <Key frame="56" value="-26.1062" />
                                                  <Key frame="65" value="-63.1087" />
                                                  <Key frame="74" value="-68.1542" />
                                                  <Key frame="80" value="-68.1542" />
                                                  <Key frame="86" value="-68.1542" />
                                                  <Key frame="105" value="4.65586" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="1.93121" />
                                                  <Key frame="20" value="0" />
                                                  <Key frame="32" value="1.93121" />
                                                  <Key frame="36" value="0" />
                                                  <Key frame="43" value="-9.80246" />
                                                  <Key frame="48" value="6" />
                                                  <Key frame="56" value="22.6737" />
                                                  <Key frame="65" value="5.71056" />
                                                  <Key frame="74" value="-2.46337" />
                                                  <Key frame="80" value="-6.76691" />
                                                  <Key frame="86" value="-5" />
                                                  <Key frame="105" value="7.81996" />
                                                </ActuatorCurve>
                                              </ActuatorList>
                                            </Timeline>
                                          </Box>
                                          <Box name="SideToBelly" id="4" localization="8" tooltip="Lie down on the back or the belly from an other lie down position (on the side)." x="656" y="93">
                                            <bitmap>media/images/box/movement/move.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		""

	def onInput_onStop(self):
		""]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="10">
                                              <ActuatorList model="nao">
                                                <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                                  <Key frame="5" value="41.3067" />
                                                  <Key frame="10" value="41.3067" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                                  <Key frame="5" value="8.52309" />
                                                  <Key frame="10" value="8.52309" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                                  <Key frame="5" value="113.383" />
                                                  <Key frame="10" value="113.383" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                                  <Key frame="5" value="44.6514" />
                                                  <Key frame="10" value="44.6514" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                                  <Key frame="5" value="-52.9084" />
                                                  <Key frame="10" value="-52.9084" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                                  <Key frame="5" value="-19.5144" />
                                                  <Key frame="10" value="-19.5144" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                                  <Key frame="5" value="-37" />
                                                  <Key frame="10" value="-37" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                                  <Key frame="5" value="0.146571" />
                                                  <Key frame="10" value="0.146571" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                                  <Key frame="5" value="108.72" />
                                                  <Key frame="10" value="108.72" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                                  <Key frame="5" value="-45.965" />
                                                  <Key frame="10" value="-45.965" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                                  <Key frame="5" value="56.8684" />
                                                  <Key frame="10" value="56.8684" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                                  <Key frame="5" value="26.8046" />
                                                  <Key frame="10" value="26.8046" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                                  <Key frame="5" value="38.8505" />
                                                  <Key frame="10" value="38.8505" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                                  <Key frame="5" value="0.200389" />
                                                  <Key frame="10" value="0.200389" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                                  <Key frame="5" value="-65.5648" />
                                                  <Key frame="10" value="-65.5648" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                                  <Key frame="5" value="1.75543" />
                                                  <Key frame="10" value="1.75543" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                                  <Key frame="5" value="23.8163" />
                                                  <Key frame="10" value="23.8163" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                                  <Key frame="5" value="-5.2711" />
                                                  <Key frame="10" value="-5.2711" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                                  <Key frame="5" value="29.9735" />
                                                  <Key frame="10" value="29.9735" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                                  <Key frame="5" value="3.86483" />
                                                  <Key frame="10" value="3.86483" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                                  <Key frame="5" value="-14.4166" />
                                                  <Key frame="10" value="-14.4166" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                                  <Key frame="5" value="2.02391" />
                                                  <Key frame="10" value="2.02391" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                                  <Key frame="5" value="-5.27591" />
                                                  <Key frame="10" value="-5.27591" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                                  <Key frame="5" value="20.3885" />
                                                  <Key frame="10" value="20.3885" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                                  <Key frame="5" value="-19.6902" />
                                                  <Key frame="10" value="-19.6902" />
                                                </ActuatorCurve>
                                              </ActuatorList>
                                            </Timeline>
                                          </Box>
                                          <Box name="Switch Case" id="1" localization="8" tooltip="Test input value and stimulate the output matching to this value. If there is no&#x0A;output matching, the default output (onDefault) is stimulated.&#x0A;&#x0A;You can edit a case by left double-clicking on the line. You can add a&#x0A;case by right clicking on a line and selecting &apos;Insert a row&apos;. You can delete&#x0A;a case by right clicking on a line and selecting &apos;Remove a row&apos;." plugin="dispatcher_plugin" x="923" y="96">
                                            <bitmap>media/images/box/interaction/choice.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion("Back")):
			self.output_1(p)
		elif(p == self.typeConversion("Knee")):
			self.output_2(p)
		elif(p == self.typeConversion("Frog")):
			self.output_3(p)
		elif(p == self.typeConversion("Belly")):
			self.output_4(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]>
                                              </content>
                                            </script>
                                            <pluginContent>
                                              <keywords>
                                                <keyword>&quot;Back&quot;</keyword>
                                                <keyword>&quot;Knee&quot;</keyword>
                                                <keyword>&quot;Frog&quot;</keyword>
                                                <keyword>&quot;Belly&quot;</keyword>
                                                <keyword></keyword>
                                              </keywords>
                                            </pluginContent>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Value to test." id="2" />
                                            <Output name="onDefault" type="1" type_size="1" nature="1" inner="0" tooltip="If the input value does not match any value set on the box." id="3" />
                                            <Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="4" />
                                            <Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="5" />
                                            <Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="6" />
                                            <Output name="output_4" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="7" />
                                          </Box>
                                          <Box name="Switch Case" id="7" localization="8" tooltip="Test input value and stimulate the output matching to this value. If there is no&#x0A;output matching, the default output (onDefault) is stimulated.&#x0A;&#x0A;You can edit a case by left double-clicking on the line. You can add a&#x0A;case by right clicking on a line and selecting &apos;Insert a row&apos;. You can delete&#x0A;a case by right clicking on a line and selecting &apos;Remove a row&apos;." plugin="dispatcher_plugin" x="955" y="621">
                                            <bitmap>media/images/box/interaction/choice.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion("Crouch")):
			self.output_1(p)
		elif(p == self.typeConversion("Stand")):
			self.output_2(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]>
                                              </content>
                                            </script>
                                            <pluginContent>
                                              <keywords>
                                                <keyword>&quot;Crouch&quot;</keyword>
                                                <keyword>&quot;Stand&quot;</keyword>
                                                <keyword></keyword>
                                              </keywords>
                                            </pluginContent>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Value to test." id="2" />
                                            <Output name="onDefault" type="1" type_size="1" nature="1" inner="0" tooltip="If the input value does not match any value set on the box." id="3" />
                                            <Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="4" />
                                            <Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="5" />
                                          </Box>
                                          <Box name="Get Robot Pose" id="8" localization="8" tooltip="Return NAO&apos;s current pose.&#x0A;&#x0A;Note: The box waits for the robot pose to be stabilized. You can set the maximum&#x0A;time to wait in parameters. After this time is ellapsed, the current pose is sent to the&#x0A;output anyway." x="89" y="41">
                                            <bitmap>media/images/box/sensors/inertial_unit.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.robotPoseProxy = ALProxy("ALRobotPosture")
        self.threadTime = 0.1 #seconds

    def onLoad(self):
        self.bIsRunning = False
        self.bMustStop = False

    def onUnload(self):
        self.bMustStop = True

    def onInput_onStart(self):
        if( self.bIsRunning ):
            return
        self.bIsRunning = True
        self.bMustStop = False
        beginTime = time.time()
        RobotPoseAndTime = ["Unknown", 0.]
        while( not self.bMustStop ):
            RobotPoseAndTime = self.robotPoseProxy.getActualPoseAndTime()
            # as soon as the robot is not moving anymore from its position, give its position
            if( RobotPoseAndTime[1] > 0.5 or time.time() - beginTime > self.getParameter("Time to wait for pose stabilization (s)") ):
                self.bMustStop = True
            if( not self.bMustStop ):
                time.sleep(self.threadTime)
        self.robotPose(RobotPoseAndTime[0])
        self.bIsRunning = False]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Output name="robotPose" type="3" type_size="1" nature="2" inner="0" tooltip='NAO&apos;s current pose. It can be:&#x0A;- &quot;Unknown&quot;&#x0A;- &quot;Stand&quot;&#x0A;- &quot;Sit&quot;&#x0A;- &quot;Crouch&quot;&#x0A;- &quot;Knee&quot;&#x0A;- &quot;Frog&quot;&#x0A;- &quot;Back&quot;&#x0A;- &quot;Belly&quot;&#x0A;- &quot;Left&quot;&#x0A;- &quot;Right&quot;&#x0A;- &quot;HeadBack&quot;' id="3" />
                                            <Parameter name="Time to wait for pose stabilization (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0.5" max="10" tooltip="Maximum time to wait NAO&apos;s pose stabilization. After this time is ellapsed,&#x0A;the current pose is sent to the output even though it is not stabilized." id="4" />
                                          </Box>
                                          <Box name="Get Robot Pose" id="10" localization="8" tooltip="Return NAO&apos;s current pose.&#x0A;&#x0A;Note: The box waits for the robot pose to be stabilized. You can set the maximum&#x0A;time to wait in parameters. After this time is ellapsed, the current pose is sent to the&#x0A;output anyway." x="794" y="96">
                                            <bitmap>media/images/box/sensors/inertial_unit.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.robotPoseProxy = ALProxy("ALRobotPosture")
        self.threadTime = 0.1 #seconds

    def onLoad(self):
        self.bIsRunning = False
        self.bMustStop = False

    def onUnload(self):
        self.bMustStop = True

    def onInput_onStart(self):
        if( self.bIsRunning ):
            return
        self.bIsRunning = True
        self.bMustStop = False
        beginTime = time.time()
        RobotPoseAndTime = ["Unknown", 0.]
        while( not self.bMustStop ):
            RobotPoseAndTime = self.robotPoseProxy.getActualPoseAndTime()
            # as soon as the robot is not moving anymore from its position, give its position
            if( RobotPoseAndTime[1] > 0.5 or time.time() - beginTime > self.getParameter("Time to wait for pose stabilization (s)") ):
                self.bMustStop = True
            if( not self.bMustStop ):
                time.sleep(self.threadTime)
        self.robotPose(RobotPoseAndTime[0])
        self.bIsRunning = False]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Output name="robotPose" type="3" type_size="1" nature="2" inner="0" tooltip='NAO&apos;s current pose. It can be:&#x0A;- &quot;Unknown&quot;&#x0A;- &quot;Stand&quot;&#x0A;- &quot;Sit&quot;&#x0A;- &quot;Crouch&quot;&#x0A;- &quot;Knee&quot;&#x0A;- &quot;Frog&quot;&#x0A;- &quot;Back&quot;&#x0A;- &quot;Belly&quot;&#x0A;- &quot;Left&quot;&#x0A;- &quot;Right&quot;&#x0A;- &quot;HeadBack&quot;' id="3" />
                                            <Parameter name="Time to wait for pose stabilization (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0.5" max="10" tooltip="Maximum time to wait NAO&apos;s pose stabilization. After this time is ellapsed,&#x0A;the current pose is sent to the output even though it is not stabilized." id="4" />
                                          </Box>
                                          <Box name="Get Robot Pose" id="2" localization="8" tooltip="Return NAO&apos;s current pose.&#x0A;&#x0A;Note: The box waits for the robot pose to be stabilized. You can set the maximum&#x0A;time to wait in parameters. After this time is ellapsed, the current pose is sent to the&#x0A;output anyway." x="828" y="626">
                                            <bitmap>media/images/box/sensors/inertial_unit.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.robotPoseProxy = ALProxy("ALRobotPosture")
        self.threadTime = 0.1 #seconds

    def onLoad(self):
        self.bIsRunning = False
        self.bMustStop = False

    def onUnload(self):
        self.bMustStop = True

    def onInput_onStart(self):
        if( self.bIsRunning ):
            return
        self.bIsRunning = True
        self.bMustStop = False
        beginTime = time.time()
        RobotPoseAndTime = ["Unknown", 0.]
        while( not self.bMustStop ):
            RobotPoseAndTime = self.robotPoseProxy.getActualPoseAndTime()
            # as soon as the robot is not moving anymore from its position, give its position
            if( RobotPoseAndTime[1] > 0.5 or time.time() - beginTime > self.getParameter("Time to wait for pose stabilization (s)") ):
                self.bMustStop = True
            if( not self.bMustStop ):
                time.sleep(self.threadTime)
        self.robotPose(RobotPoseAndTime[0])
        self.bIsRunning = False]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Output name="robotPose" type="3" type_size="1" nature="2" inner="0" tooltip='NAO&apos;s current pose. It can be:&#x0A;- &quot;Unknown&quot;&#x0A;- &quot;Stand&quot;&#x0A;- &quot;Sit&quot;&#x0A;- &quot;Crouch&quot;&#x0A;- &quot;Knee&quot;&#x0A;- &quot;Frog&quot;&#x0A;- &quot;Back&quot;&#x0A;- &quot;Belly&quot;&#x0A;- &quot;Left&quot;&#x0A;- &quot;Right&quot;&#x0A;- &quot;HeadBack&quot;' id="3" />
                                            <Parameter name="Time to wait for pose stabilization (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0.5" max="10" tooltip="Maximum time to wait NAO&apos;s pose stabilization. After this time is ellapsed,&#x0A;the current pose is sent to the output even though it is not stabilized." id="4" />
                                          </Box>
                                          <Link inputowner="0" indexofinput="4" outputowner="9" indexofoutput="3" />
                                          <Link inputowner="16" indexofinput="2" outputowner="9" indexofoutput="7" />
                                          <Link inputowner="16" indexofinput="2" outputowner="9" indexofoutput="8" />
                                          <Link inputowner="16" indexofinput="2" outputowner="9" indexofoutput="9" />
                                          <Link inputowner="5" indexofinput="2" outputowner="9" indexofoutput="6" />
                                          <Link inputowner="0" indexofinput="4" outputowner="5" indexofoutput="4" />
                                          <Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" />
                                          <Link inputowner="0" indexofinput="4" outputowner="16" indexofoutput="4" />
                                          <Link inputowner="5" indexofinput="2" outputowner="1" indexofoutput="4" />
                                          <Link inputowner="16" indexofinput="2" outputowner="1" indexofoutput="5" />
                                          <Link inputowner="16" indexofinput="2" outputowner="1" indexofoutput="6" />
                                          <Link inputowner="16" indexofinput="2" outputowner="1" indexofoutput="7" />
                                          <Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="3" />
                                          <Link inputowner="3" indexofinput="2" outputowner="9" indexofoutput="10" />
                                          <Link inputowner="4" indexofinput="2" outputowner="9" indexofoutput="4" />
                                          <Link inputowner="12" indexofinput="2" outputowner="9" indexofoutput="11" />
                                          <Link inputowner="4" indexofinput="2" outputowner="9" indexofoutput="5" />
                                          <Link inputowner="3" indexofinput="2" outputowner="7" indexofoutput="4" />
                                          <Link inputowner="0" indexofinput="4" outputowner="7" indexofoutput="3" />
                                          <Link inputowner="3" indexofinput="2" outputowner="7" indexofoutput="5" />
                                          <Link inputowner="8" indexofinput="2" outputowner="0" indexofoutput="2" />
                                          <Link inputowner="9" indexofinput="2" outputowner="8" indexofoutput="3" />
                                          <Link inputowner="10" indexofinput="2" outputowner="4" indexofoutput="4" />
                                          <Link inputowner="1" indexofinput="2" outputowner="10" indexofoutput="3" />
                                          <Link inputowner="2" indexofinput="2" outputowner="12" indexofoutput="4" />
                                          <Link inputowner="7" indexofinput="2" outputowner="2" indexofoutput="3" />
                                        </Diagram>
                                      </BehaviorKeyframe>
                                    </BehaviorLayer>
                                  </Timeline>
                                </Box>
                                <Link inputowner="0" indexofinput="4" outputowner="10" indexofoutput="4" />
                                <Link inputowner="0" indexofinput="5" outputowner="7" indexofoutput="3" />
                                <Link inputowner="0" indexofinput="5" outputowner="10" indexofoutput="5" />
                                <Link inputowner="0" indexofinput="5" outputowner="10" indexofoutput="6" />
                                <Link inputowner="4" indexofinput="2" outputowner="0" indexofoutput="2" />
                                <Link inputowner="2" indexofinput="2" outputowner="10" indexofoutput="3" />
                                <Link inputowner="7" indexofinput="2" outputowner="2" indexofoutput="3" />
                                <Link inputowner="9" indexofinput="2" outputowner="4" indexofoutput="3" />
                                <Link inputowner="10" indexofinput="2" outputowner="9" indexofoutput="3" />
                                <Link inputowner="9" indexofinput="2" outputowner="20" indexofoutput="4" />
                                <Link inputowner="20" indexofinput="2" outputowner="6" indexofoutput="3" />
                                <Link inputowner="6" indexofinput="2" outputowner="7" indexofoutput="4" />
                                <Link inputowner="9" indexofinput="2" outputowner="1" indexofoutput="4" />
                                <Link inputowner="1" indexofinput="2" outputowner="6" indexofoutput="4" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                        <Resource name="All motors" type="Lock" timeout="0" />
                      </Box>
                      <Box name="Wait" id="19" localization="8" tooltip="Wait a moment before sending a signal on the output. The wait can be stopped any&#x0A;time. You may restart it any time, and it will start again." x="248" y="526">
                        <bitmap>media/images/box/wait.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import threading

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.tb = False

    def onUnload(self):
        if( self.tb ):
            self.tb.cancel()
            self.tb = False

    def triggerOutput( self, rPeriod = 1 ):
        self.onUnload() # to clean everything
        self.timerOutput()

    def startTimer( self, rPeriod = 1 ):
        if( self.tb ):
            self.tb.cancel()
        self.tb = threading.Timer( rPeriod, self.triggerOutput, [rPeriod] )
        self.tb.start()

    def onInput_onStart(self):
        self.startTimer( self.getParameter("Timeout (s)") )

    def onInput_onStop(self):
        bRunning = self.tb
        self.onUnload()
        if( bRunning ):
            self.timerOutput()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                        <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is ellapsed, or if the box is stopped." id="4" />
                        <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="3" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
                      </Box>
                      <Box name="Wait" id="8" localization="8" tooltip="Wait a moment before sending a signal on the output. The wait can be stopped any&#x0A;time. You may restart it any time, and it will start again." x="66" y="588">
                        <bitmap>media/images/box/wait.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import threading

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.tb = False

    def onUnload(self):
        if( self.tb ):
            self.tb.cancel()
            self.tb = False

    def triggerOutput( self, rPeriod = 1 ):
        self.onUnload() # to clean everything
        self.timerOutput()

    def startTimer( self, rPeriod = 1 ):
        if( self.tb ):
            self.tb.cancel()
        self.tb = threading.Timer( rPeriod, self.triggerOutput, [rPeriod] )
        self.tb.start()

    def onInput_onStart(self):
        self.startTimer( self.getParameter("Timeout (s)") )

    def onInput_onStop(self):
        bRunning = self.tb
        self.onUnload()
        if( bRunning ):
            self.timerOutput()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                        <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is ellapsed, or if the box is stopped." id="4" />
                        <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="3" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
                      </Box>
                      <Box name="Wait" id="9" localization="8" tooltip="Wait a moment before sending a signal on the output. The wait can be stopped any&#x0A;time. You may restart it any time, and it will start again." x="244" y="214">
                        <bitmap>media/images/box/wait.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import threading

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.tb = False

    def onUnload(self):
        if( self.tb ):
            self.tb.cancel()
            self.tb = False

    def triggerOutput( self, rPeriod = 1 ):
        self.onUnload() # to clean everything
        self.timerOutput()

    def startTimer( self, rPeriod = 1 ):
        if( self.tb ):
            self.tb.cancel()
        self.tb = threading.Timer( rPeriod, self.triggerOutput, [rPeriod] )
        self.tb.start()

    def onInput_onStart(self):
        self.startTimer( self.getParameter("Timeout (s)") )

    def onInput_onStop(self):
        bRunning = self.tb
        self.onUnload()
        if( bRunning ):
            self.timerOutput()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                        <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is ellapsed, or if the box is stopped." id="4" />
                        <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="3" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
                      </Box>
                      <Box name="Wait" id="10" localization="8" tooltip="Wait a moment before sending a signal on the output. The wait can be stopped any&#x0A;time. You may restart it any time, and it will start again." x="768" y="510">
                        <bitmap>media/images/box/wait.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import threading

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.tb = False

    def onUnload(self):
        if( self.tb ):
            self.tb.cancel()
            self.tb = False

    def triggerOutput( self, rPeriod = 1 ):
        self.onUnload() # to clean everything
        self.timerOutput()

    def startTimer( self, rPeriod = 1 ):
        if( self.tb ):
            self.tb.cancel()
        self.tb = threading.Timer( rPeriod, self.triggerOutput, [rPeriod] )
        self.tb.start()

    def onInput_onStart(self):
        self.startTimer( self.getParameter("Timeout (s)") )

    def onInput_onStop(self):
        bRunning = self.tb
        self.onUnload()
        if( bRunning ):
            self.timerOutput()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                        <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is ellapsed, or if the box is stopped." id="4" />
                        <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="3" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
                      </Box>
                      <Box name="Wait" id="12" localization="8" tooltip="Wait a moment before sending a signal on the output. The wait can be stopped any&#x0A;time. You may restart it any time, and it will start again." x="421" y="211">
                        <bitmap>media/images/box/wait.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import threading

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.tb = False

    def onUnload(self):
        if( self.tb ):
            self.tb.cancel()
            self.tb = False

    def triggerOutput( self, rPeriod = 1 ):
        self.onUnload() # to clean everything
        self.timerOutput()

    def startTimer( self, rPeriod = 1 ):
        if( self.tb ):
            self.tb.cancel()
        self.tb = threading.Timer( rPeriod, self.triggerOutput, [rPeriod] )
        self.tb.start()

    def onInput_onStart(self):
        self.startTimer( self.getParameter("Timeout (s)") )

    def onInput_onStop(self):
        bRunning = self.tb
        self.onUnload()
        if( bRunning ):
            self.timerOutput()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                        <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is ellapsed, or if the box is stopped." id="4" />
                        <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="5" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
                      </Box>
                      <Box name="SetTorsoHeadPose" id="20" localization="8" tooltip="Enter tooltip here" x="418" y="114">
                        <bitmap>media/images/box/box-diagram.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.motion = ALProxy("ALMotion")
        self.name= 'Torso'
        self.headnames  = ['HeadYaw', 'HeadPitch']
        self.space= 2#SPACE_NAO
        self.fractionMaxSpeed = 0.1
        self.axisMask = 63
        print self.motion.getSummary()

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #~ self.onStopped() #~ activate output of the box

        #Set Torso Pose
        X=self.getParameter("XPosition")
        Y=self.getParameter("YPosition")
        Z=self.getParameter("ZPosition")
        WX=self.getParameter("WXAngle")
        WY=self.getParameter("WYAngle")
        WZ=self.getParameter("WZAngle")
        position =[X, Y, Z, WX, WY , WZ]
        self.motion.setPosition(self.name, self.space, position, self.fractionMaxSpeed, self.axisMask)

        #time.sleep(5.0)

        # Set head angles, using a fraction of max speed
        HeadYawAngle=self.getParameter("HeadYawAngle")
        HeadPitchAngle=self.getParameter("HeadPitchAngle")
        angles  = [HeadYawAngle, HeadPitchAngle]
        self.motion.setAngles(self.headnames, angles, self.fractionMaxSpeed)

        self.onStopped()

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Output name="Myoutput" type="2" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                        <Parameter name="XPosition" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-0.5" max="0.5" tooltip="" id="6" />
                        <Parameter name="YPosition" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-0.5" max="0.5" tooltip="" id="7" />
                        <Parameter name="ZPosition" inherits_from_parent="0" content_type="2" value="0.25" default_value="0.25" min="0.22" max="0.3" tooltip="" id="8" />
                        <Parameter name="WXAngle" inherits_from_parent="0" content_type="2" value="0.16" default_value="0" min="-1" max="1" tooltip="" id="9" />
                        <Parameter name="WYAngle" inherits_from_parent="0" content_type="2" value="0.08" default_value="0" min="-1" max="1" tooltip="" id="10" />
                        <Parameter name="WZAngle" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="" id="11" />
                        <Parameter name="HeadYawAngle" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="" id="12" />
                        <Parameter name="HeadPitchAngle" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="" id="13" />
                      </Box>
                      <Box name="Init" id="23" localization="8" tooltip='Robot will go to the position &quot;Init&#x0A;Position description : Nao is ready to do anything from this position !&#x0A;' x="431" y="411">
                        <bitmap>media/images/positions/Pos_init.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="20">
                          <ActuatorList model="nao">
                            <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                              <Key frame="20" value="80" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                              <Key frame="20" value="20" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                              <Key frame="20" value="-80" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                              <Key frame="20" value="-60" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                              <Key frame="20" value="80" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                              <Key frame="20" value="-20" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                              <Key frame="20" value="80" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                              <Key frame="20" value="60" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                              <Key frame="20" value="-25" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                              <Key frame="20" value="40" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                              <Key frame="20" value="-20" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                              <Key frame="20" value="-25" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                              <Key frame="20" value="40" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                              <Key frame="20" value="-20" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                          </ActuatorList>
                        </Timeline>
                      </Box>
                      <Box name="Sit Down" id="33" localization="8" tooltip="NAO tries to sit down from any position for a number of tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." x="976" y="116">
                        <bitmap>media/images/box/movement/sit_ground.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated when NAO succeed in sitting down." id="4" />
                        <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot failed to sit down after n tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." id="5" />
                        <Parameter name="Maximum of tries" inherits_from_parent="0" content_type="1" value="3" default_value="3" min="1" max="10" tooltip="The maximum number that the robot tries to sit down and fails before the failure&#x0A;output is stimulated." id="6" />
                        <Parameter name="Side" inherits_from_parent="0" content_type="3" value="Random" default_value="Random" custom_choice="0" tooltip='Side of the arm used to sit down. If it is set to &quot;Random&quot; the side is chosen randomly.' id="7">
                          <Choice value="Left" />
                          <Choice value="Random" />
                          <Choice value="Right" />
                        </Parameter>
                        <Timeline enable="0">
                          <BehaviorLayer name="SitDownBehavior">
                            <BehaviorKeyframe name="DetectRobotPose" index="1">
                              <Diagram>
                                <Box name="Check Count" id="9" localization="8" tooltip="Check number of tries. If the current try number is higher than the maximum&#x0A;number of tries set in parent box parameters, then the failed output is&#x0A;stimulated, else the tryAgain output is stimulated." x="850" y="221">
                                  <bitmap>media/images/box/box-script.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.nTries = 0

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        self.nTries += 1
        if (self.nTries > self.getParameter("Maximum of tries")):
            self.failed()
        else:
            self.tryAgain()

    def onInput_onStop(self):
        self.onUnload()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Output name="failed" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent if the current try number is higher than the maximum number of tries&#x0A;set in parent box parameters." id="3" />
                                  <Output name="tryAgain" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent if the current try number is smaller than or equal to the maximum&#x0A;number of tries set in parent box parameters." id="4" />
                                </Box>
                                <Box name="Right Sit Motion" id="13" localization="8" tooltip="The robot makes the right motion to sit down depending on its current position." x="596" y="407">
                                  <bitmap>media/images/box/movement/sit_ground.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        self.count = 0
        pass

    def onInput_onStop(self):
        self.onUnload()
        pass]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent after a step to sit down is done." id="4" />
                                  <Timeline enable="0">
                                    <BehaviorLayer name="SitDownBehavior">
                                      <BehaviorKeyframe name="DetectRobotPose" index="1">
                                        <Diagram>
                                          <Box name="CrouchToSitDown" id="11" localization="8" tooltip="Sit down from crouch or stand position." x="941" y="228">
                                            <bitmap>media/images/box/movement/move.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="72">
                                              <ActuatorList model="nao">
                                                <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                                  <Key frame="13" value="-18.1081" />
                                                  <Key frame="24" value="-25.2273" />
                                                  <Key frame="34" value="-36.3017" />
                                                  <Key frame="43" value="-35.9501" />
                                                  <Key frame="52" value="-23.4695" />
                                                  <Key frame="59" value="-10.5494" />
                                                  <Key frame="66" value="-0.00240423" />
                                                  <Key frame="72" value="-1.23289" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                                  <Key frame="13" value="21.2674" />
                                                  <Key frame="24" value="21.5311" />
                                                  <Key frame="34" value="21.0916" />
                                                  <Key frame="43" value="20.4764" />
                                                  <Key frame="52" value="21.0916" />
                                                  <Key frame="59" value="21.0037" />
                                                  <Key frame="66" value="21.7069" />
                                                  <Key frame="72" value="-1.93602" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                                  <Key frame="13" value="59.8" />
                                                  <Key frame="24" value="41.8" />
                                                  <Key frame="29" value="41.8" />
                                                  <Key frame="34" value="57.9182" />
                                                  <Key frame="43" value="86.2194" />
                                                  <Key frame="52" value="116.542" />
                                                  <Key frame="59" value="88.1" />
                                                  <Key frame="66" value="38.8" />
                                                  <Key frame="72" value="52.2932" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                                  <Key frame="13" value="19.2459" />
                                                  <Key frame="24" value="30.6718" />
                                                  <Key frame="34" value="27.6" />
                                                  <Key frame="43" value="48" />
                                                  <Key frame="52" value="25.4" />
                                                  <Key frame="59" value="89.2" />
                                                  <Key frame="66" value="32.6054" />
                                                  <Key frame="72" value="12.5661" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                                  <Key frame="13" value="-32.2587" />
                                                  <Key frame="24" value="-4.9" />
                                                  <Key frame="34" value="6.06212" />
                                                  <Key frame="43" value="-89" />
                                                  <Key frame="52" value="-18.8991" />
                                                  <Key frame="59" value="-69.2" />
                                                  <Key frame="66" value="-43.5967" />
                                                  <Key frame="72" value="-25.0515" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                                  <Key frame="13" value="-54.9299" />
                                                  <Key frame="24" value="-68.9" />
                                                  <Key frame="34" value="-40" />
                                                  <Key frame="43" value="-51.7" />
                                                  <Key frame="47" value="-27.9" />
                                                  <Key frame="52" value="-39.3" />
                                                  <Key frame="59" value="-55" />
                                                  <Key frame="66" value="-75.7603" />
                                                  <Key frame="72" value="-73.3872" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                                  <Key frame="13" value="5.00742" />
                                                  <Key frame="24" value="-41.0478" />
                                                  <Key frame="34" value="-41.0478" />
                                                  <Key frame="43" value="-41.0478" />
                                                  <Key frame="52" value="-41.751" />
                                                  <Key frame="59" value="-41.8389" />
                                                  <Key frame="66" value="-41.3994" />
                                                  <Key frame="72" value="3.42537" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                                  <Key frame="13" value="0.231662" />
                                                  <Key frame="24" value="0.0669354" />
                                                  <Key frame="34" value="0.0665718" />
                                                  <Key frame="43" value="0.0665718" />
                                                  <Key frame="52" value="0.0731171" />
                                                  <Key frame="59" value="0.0694809" />
                                                  <Key frame="66" value="0.0607536" />
                                                  <Key frame="72" value="0.3004" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                                  <Key frame="13" value="46.3" />
                                                  <Key frame="24" value="34" />
                                                  <Key frame="34" value="99.9353" />
                                                  <Key frame="39" value="119" />
                                                  <Key frame="52" value="119.496" />
                                                  <Key frame="59" value="108.197" />
                                                  <Key frame="66" value="44.8" />
                                                  <Key frame="72" value="53.3527" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                                  <Key frame="13" value="-32.5223" />
                                                  <Key frame="24" value="-53.3" />
                                                  <Key frame="29" value="-43.7" />
                                                  <Key frame="34" value="-31.7" />
                                                  <Key frame="39" value="-30.1" />
                                                  <Key frame="52" value="-31.7" />
                                                  <Key frame="59" value="-89.2" />
                                                  <Key frame="66" value="-31.4676" />
                                                  <Key frame="72" value="-15.1198" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                                  <Key frame="13" value="8" />
                                                  <Key frame="24" value="0.261271" />
                                                  <Key frame="34" value="-3.95753" />
                                                  <Key frame="39" value="-8.44001" />
                                                  <Key frame="52" value="6.7" />
                                                  <Key frame="59" value="100.37" />
                                                  <Key frame="66" value="64.598" />
                                                  <Key frame="72" value="29.705" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                                  <Key frame="13" value="48" />
                                                  <Key frame="24" value="27.4246" />
                                                  <Key frame="34" value="4.48488" />
                                                  <Key frame="39" value="5.80326" />
                                                  <Key frame="52" value="33.9" />
                                                  <Key frame="59" value="59.5051" />
                                                  <Key frame="66" value="74.0951" />
                                                  <Key frame="72" value="73.4799" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                                  <Key frame="13" value="10.8083" />
                                                  <Key frame="24" value="60.4671" />
                                                  <Key frame="34" value="60.2913" />
                                                  <Key frame="39" value="59.764" />
                                                  <Key frame="52" value="59.764" />
                                                  <Key frame="59" value="60.0276" />
                                                  <Key frame="66" value="60.8187" />
                                                  <Key frame="72" value="-3.43018" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                                  <Key frame="13" value="0.406207" />
                                                  <Key frame="24" value="0.0854807" />
                                                  <Key frame="34" value="0.0883898" />
                                                  <Key frame="39" value="0.103299" />
                                                  <Key frame="52" value="0.117844" />
                                                  <Key frame="59" value="0.114935" />
                                                  <Key frame="66" value="0.121117" />
                                                  <Key frame="72" value="0.2996" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                                  <Key frame="13" value="-22.7616" />
                                                  <Key frame="24" value="-24.2557" />
                                                  <Key frame="34" value="-52.0295" />
                                                  <Key frame="43" value="-33.5722" />
                                                  <Key frame="52" value="-30.9355" />
                                                  <Key frame="59" value="-45.4376" />
                                                  <Key frame="66" value="-44.5587" />
                                                  <Key frame="72" value="-35.1543" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                                  <Key frame="13" value="10.4615" />
                                                  <Key frame="24" value="18" />
                                                  <Key frame="34" value="-15.0271" />
                                                  <Key frame="43" value="16.7897" />
                                                  <Key frame="52" value="30.325" />
                                                  <Key frame="59" value="13.3619" />
                                                  <Key frame="66" value="20.4812" />
                                                  <Key frame="72" value="15.9987" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                                  <Key frame="13" value="-33.8359" />
                                                  <Key frame="24" value="-49.8322" />
                                                  <Key frame="34" value="-0.524946" />
                                                  <Key frame="43" value="-35.5937" />
                                                  <Key frame="52" value="-89.0319" />
                                                  <Key frame="59" value="-91.3171" />
                                                  <Key frame="66" value="-83.9342" />
                                                  <Key frame="72" value="-90.5261" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                                  <Key frame="13" value="121.039" />
                                                  <Key frame="24" value="121.039" />
                                                  <Key frame="34" value="104.149" />
                                                  <Key frame="43" value="113.554" />
                                                  <Key frame="52" value="61.7" />
                                                  <Key frame="59" value="66.3558" />
                                                  <Key frame="66" value="62.3128" />
                                                  <Key frame="72" value="80.067" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                                  <Key frame="13" value="-68.1542" />
                                                  <Key frame="24" value="-68.1542" />
                                                  <Key frame="34" value="-68.1542" />
                                                  <Key frame="43" value="-29.9735" />
                                                  <Key frame="52" value="42.3614" />
                                                  <Key frame="59" value="52.8695" />
                                                  <Key frame="66" value="52.8205" />
                                                  <Key frame="72" value="47.8986" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                                  <Key frame="13" value="2.46337" />
                                                  <Key frame="24" value="4.57277" />
                                                  <Key frame="34" value="2.37548" />
                                                  <Key frame="43" value="-26.0135" />
                                                  <Key frame="52" value="-10.3688" />
                                                  <Key frame="59" value="-2.72224" />
                                                  <Key frame="66" value="-2.89802" />
                                                  <Key frame="72" value="-0.524946" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                                  <Key frame="13" value="-7.90785" />
                                                  <Key frame="24" value="-14.6755" />
                                                  <Key frame="34" value="-21.7947" />
                                                  <Key frame="43" value="-32.957" />
                                                  <Key frame="52" value="-30.6718" />
                                                  <Key frame="59" value="-12.3024" />
                                                  <Key frame="66" value="-18.4549" />
                                                  <Key frame="72" value="-15.3786" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                                  <Key frame="13" value="-43.8604" />
                                                  <Key frame="24" value="-49.2218" />
                                                  <Key frame="34" value="-78.226" />
                                                  <Key frame="43" value="-94.5739" />
                                                  <Key frame="52" value="-88.3336" />
                                                  <Key frame="59" value="-92.2008" />
                                                  <Key frame="66" value="-81.2144" />
                                                  <Key frame="72" value="-90.8824" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                                  <Key frame="13" value="108.461" />
                                                  <Key frame="24" value="44.3877" />
                                                  <Key frame="34" value="65.4817" />
                                                  <Key frame="43" value="65.6575" />
                                                  <Key frame="52" value="59.5" />
                                                  <Key frame="59" value="68.6458" />
                                                  <Key frame="66" value="56.1652" />
                                                  <Key frame="72" value="80.5991" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                                  <Key frame="13" value="-41.8341" />
                                                  <Key frame="24" value="19.1628" />
                                                  <Key frame="34" value="26.1941" />
                                                  <Key frame="43" value="44.2119" />
                                                  <Key frame="52" value="40.8721" />
                                                  <Key frame="59" value="53.4029" />
                                                  <Key frame="66" value="53.4029" />
                                                  <Key frame="72" value="48.6944" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                                  <Key frame="13" value="12.0436" />
                                                  <Key frame="24" value="29.0067" />
                                                  <Key frame="34" value="3.34229" />
                                                  <Key frame="43" value="-3.1617" />
                                                  <Key frame="52" value="10.8131" />
                                                  <Key frame="59" value="2.02391" />
                                                  <Key frame="66" value="2.72705" />
                                                  <Key frame="72" value="1.0571" />
                                                </ActuatorCurve>
                                              </ActuatorList>
                                            </Timeline>
                                          </Box>
                                          <Box name="BellyToCrouch" id="12" localization="8" tooltip="Crouch from lie down position (on the belly)." x="707" y="382">
                                            <bitmap>media/images/box/movement/move.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="100">
                                              <ActuatorList model="nao">
                                                <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                                  <Key frame="10" value="10" />
                                                  <Key frame="20" value="-13" />
                                                  <Key frame="34" value="16.4" />
                                                  <Key frame="45" value="17" />
                                                  <Key frame="58" value="-28.4" />
                                                  <Key frame="65" value="-17" />
                                                  <Key frame="76" value="3" />
                                                  <Key frame="89" value="-22.4" />
                                                  <Key frame="100" value="-1" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="-33.0497" />
                                                  <Key frame="20" value="-31.3797" />
                                                  <Key frame="34" value="6.15002" />
                                                  <Key frame="45" value="29.5" />
                                                  <Key frame="58" value="21.8" />
                                                  <Key frame="65" value="21.2674" />
                                                  <Key frame="76" value="-6" />
                                                  <Key frame="89" value="-30.5887" />
                                                  <Key frame="100" value="0.4" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="4.83164" />
                                                  <Key frame="20" value="-86.6" />
                                                  <Key frame="34" value="-71.6342" />
                                                  <Key frame="45" value="4.12851" />
                                                  <Key frame="58" value="73" />
                                                  <Key frame="65" value="43.3" />
                                                  <Key frame="76" value="43" />
                                                  <Key frame="89" value="74" />
                                                  <Key frame="100" value="86.9225" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="89.0319" />
                                                  <Key frame="20" value="0.964405" />
                                                  <Key frame="34" value="4.39218" />
                                                  <Key frame="45" value="4.04062" />
                                                  <Key frame="58" value="8.96255" />
                                                  <Key frame="65" value="53.8" />
                                                  <Key frame="76" value="38.8" />
                                                  <Key frame="89" value="48.5" />
                                                  <Key frame="100" value="4.83164" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                                  <Key frame="10" value="-119" />
                                                  <Key frame="20" value="-90.5309" />
                                                  <Key frame="34" value="-91.9371" />
                                                  <Key frame="45" value="-102.396" />
                                                  <Key frame="58" value="-76.0287" />
                                                  <Key frame="65" value="-71.5" />
                                                  <Key frame="76" value="-55.7258" />
                                                  <Key frame="89" value="-55" />
                                                  <Key frame="100" value="-51.6827" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="-0.5" />
                                                  <Key frame="20" value="-20.2127" />
                                                  <Key frame="34" value="-36.5606" />
                                                  <Key frame="45" value="-48.7775" />
                                                  <Key frame="58" value="-88.8561" />
                                                  <Key frame="65" value="-42" />
                                                  <Key frame="76" value="-42.2" />
                                                  <Key frame="89" value="-66.1801" />
                                                  <Key frame="100" value="-63.016" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                                  <Key frame="10" value="-88.8609" />
                                                  <Key frame="20" value="-88.8609" />
                                                  <Key frame="34" value="-86.9273" />
                                                  <Key frame="45" value="-82.9722" />
                                                  <Key frame="58" value="-80.5112" />
                                                  <Key frame="65" value="-80.687" />
                                                  <Key frame="76" value="-80.687" />
                                                  <Key frame="89" value="-31.2" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                                  <Key frame="10" value="0.0585718" />
                                                  <Key frame="20" value="0.0196627" />
                                                  <Key frame="34" value="0.0407536" />
                                                  <Key frame="45" value="0.0545718" />
                                                  <Key frame="58" value="0.0574809" />
                                                  <Key frame="65" value="0.0574809" />
                                                  <Key frame="76" value="0.0549355" />
                                                  <Key frame="89" value="0.0574809" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="-1.57965" />
                                                  <Key frame="20" value="-86.6" />
                                                  <Key frame="34" value="-70.0473" />
                                                  <Key frame="45" value="-13.5329" />
                                                  <Key frame="58" value="12.483" />
                                                  <Key frame="65" value="25.7547" />
                                                  <Key frame="76" value="52.3859" />
                                                  <Key frame="89" value="55.0226" />
                                                  <Key frame="100" value="77.5229" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="-87.982" />
                                                  <Key frame="20" value="-11" />
                                                  <Key frame="34" value="-4.74856" />
                                                  <Key frame="45" value="-4.74856" />
                                                  <Key frame="58" value="-13.0104" />
                                                  <Key frame="65" value="-10.4615" />
                                                  <Key frame="76" value="-0.498473" />
                                                  <Key frame="89" value="-7.56109" />
                                                  <Key frame="100" value="-0.79343" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                                  <Key frame="10" value="119" />
                                                  <Key frame="20" value="89.4714" />
                                                  <Key frame="34" value="92.4597" />
                                                  <Key frame="45" value="96.5906" />
                                                  <Key frame="58" value="112.323" />
                                                  <Key frame="65" value="111.796" />
                                                  <Key frame="76" value="38.1426" />
                                                  <Key frame="89" value="22.6737" />
                                                  <Key frame="100" value="49.6564" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="6" />
                                                  <Key frame="20" value="21.8874" />
                                                  <Key frame="34" value="36.3896" />
                                                  <Key frame="45" value="89.2125" />
                                                  <Key frame="58" value="0.498473" />
                                                  <Key frame="65" value="0.498473" />
                                                  <Key frame="76" value="24.2605" />
                                                  <Key frame="89" value="37.2" />
                                                  <Key frame="100" value="47.8155" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                                  <Key frame="10" value="86.4831" />
                                                  <Key frame="20" value="86.4831" />
                                                  <Key frame="34" value="85.7799" />
                                                  <Key frame="45" value="81.8248" />
                                                  <Key frame="58" value="82.2643" />
                                                  <Key frame="65" value="82.5279" />
                                                  <Key frame="76" value="82.7037" />
                                                  <Key frame="89" value="82.5279" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                                  <Key frame="10" value="0.0185718" />
                                                  <Key frame="20" value="0.0127537" />
                                                  <Key frame="34" value="0.0262082" />
                                                  <Key frame="45" value="0.0469355" />
                                                  <Key frame="58" value="0.0494809" />
                                                  <Key frame="65" value="0.04839" />
                                                  <Key frame="76" value="0.0472991" />
                                                  <Key frame="89" value="0.04839" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="-1.93121" />
                                                  <Key frame="20" value="2" />
                                                  <Key frame="34" value="-24.9588" />
                                                  <Key frame="45" value="-44.6466" />
                                                  <Key frame="58" value="-59.6761" />
                                                  <Key frame="65" value="-65.621" />
                                                  <Key frame="76" value="-65.621" />
                                                  <Key frame="89" value="-32.5175" />
                                                  <Key frame="100" value="0" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="3.60596" />
                                                  <Key frame="20" value="0.00240423" />
                                                  <Key frame="34" value="0.090296" />
                                                  <Key frame="45" value="-21.619" />
                                                  <Key frame="58" value="-17.0486" />
                                                  <Key frame="65" value="-17.0486" />
                                                  <Key frame="76" value="11.1647" />
                                                  <Key frame="89" value="7.29742" />
                                                  <Key frame="100" value="-0.6" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="3.51807" />
                                                  <Key frame="20" value="0.00240423" />
                                                  <Key frame="34" value="-89.9108" />
                                                  <Key frame="45" value="-73.3872" />
                                                  <Key frame="58" value="-59.4124" />
                                                  <Key frame="65" value="-66.4437" />
                                                  <Key frame="76" value="-67.7621" />
                                                  <Key frame="89" value="-72.7719" />
                                                  <Key frame="100" value="-60" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                                  <Key frame="10" value="6.9" />
                                                  <Key frame="20" value="114" />
                                                  <Key frame="34" value="121.039" />
                                                  <Key frame="45" value="16.1697" />
                                                  <Key frame="58" value="23.201" />
                                                  <Key frame="65" value="20.4764" />
                                                  <Key frame="76" value="41.2188" />
                                                  <Key frame="89" value="115.399" />
                                                  <Key frame="100" value="120" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                                  <Key frame="10" value="52.8205" />
                                                  <Key frame="20" value="-59" />
                                                  <Key frame="34" value="-65.9212" />
                                                  <Key frame="45" value="12.3903" />
                                                  <Key frame="58" value="40.6915" />
                                                  <Key frame="65" value="52.8695" />
                                                  <Key frame="76" value="47.2833" />
                                                  <Key frame="89" value="-28.743" />
                                                  <Key frame="100" value="-60" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="-0.0854875" />
                                                  <Key frame="20" value="0.00240423" />
                                                  <Key frame="34" value="-0.0854875" />
                                                  <Key frame="45" value="-25.9257" />
                                                  <Key frame="58" value="-17.2244" />
                                                  <Key frame="65" value="-6.76526" />
                                                  <Key frame="76" value="-2.37067" />
                                                  <Key frame="89" value="-6.94104" />
                                                  <Key frame="100" value="0" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="1.8" />
                                                  <Key frame="20" value="0.00240423" />
                                                  <Key frame="34" value="0.090296" />
                                                  <Key frame="45" value="17.8444" />
                                                  <Key frame="58" value="14.5924" />
                                                  <Key frame="65" value="18.3718" />
                                                  <Key frame="76" value="13.0104" />
                                                  <Key frame="89" value="-4.30429" />
                                                  <Key frame="100" value="0.6" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="4.39218" />
                                                  <Key frame="20" value="-0.00240423" />
                                                  <Key frame="34" value="-90.3551" />
                                                  <Key frame="45" value="-95.1891" />
                                                  <Key frame="58" value="-68.7337" />
                                                  <Key frame="65" value="-91.5856" />
                                                  <Key frame="76" value="-18.4597" />
                                                  <Key frame="89" value="-40.6963" />
                                                  <Key frame="100" value="-60" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                                  <Key frame="10" value="-4.48007" />
                                                  <Key frame="20" value="114" />
                                                  <Key frame="34" value="119.535" />
                                                  <Key frame="45" value="99.8474" />
                                                  <Key frame="58" value="121.478" />
                                                  <Key frame="65" value="121.478" />
                                                  <Key frame="76" value="121.478" />
                                                  <Key frame="89" value="121.478" />
                                                  <Key frame="100" value="120" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                                  <Key frame="10" value="53.2648" />
                                                  <Key frame="20" value="-59" />
                                                  <Key frame="34" value="-65.2133" />
                                                  <Key frame="45" value="-67.9785" />
                                                  <Key frame="58" value="-67.9785" />
                                                  <Key frame="65" value="-33.748" />
                                                  <Key frame="76" value="-67.9785" />
                                                  <Key frame="89" value="-67.9785" />
                                                  <Key frame="100" value="-60" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="10.8" />
                                                  <Key frame="20" value="0.00240423" />
                                                  <Key frame="34" value="0.353971" />
                                                  <Key frame="45" value="-0.261271" />
                                                  <Key frame="58" value="-5.62267" />
                                                  <Key frame="65" value="-0.788621" />
                                                  <Key frame="76" value="-5.44688" />
                                                  <Key frame="89" value="2.02391" />
                                                  <Key frame="100" value="0" />
                                                </ActuatorCurve>
                                              </ActuatorList>
                                            </Timeline>
                                          </Box>
                                          <Box name="BackToSitDown" id="14" localization="8" tooltip="Sit down from lie down position (on the back)." x="923" y="91">
                                            <bitmap>media/images/box/movement/move.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="62" resources_acquisition="1">
                                              <BehaviorLayer name="behavior_layer1">
                                                <BehaviorKeyframe name="keyframe10" index="10">
                                                  <Diagram>
                                                    <Box name="Disable Anti-Collision" id="2" localization="8" tooltip="Disable the collision protection on some specific part of NAO&apos;s body.&#x0A;&#x0A;Note: When this box is unloaded, the collision protection state will be reset to&#x0A;its previous state (enabled or disabled)." x="126" y="44">
                                                      <bitmap>media/images/box/sensors/anti_collision.png</bitmap>
                                                      <script language="4">
                                                        <content>
                                                          <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.motion = ALProxy( "ALMotion" )

    def onLoad(self):
        self.collisionLArmState = self.motion.getCollisionProtectionEnabled("LArm")
        self.collisionRArmState = self.motion.getCollisionProtectionEnabled("RArm")

    def onUnload(self):
        self.motion.setCollisionProtectionEnabled("LArm", self.collisionLArmState)
        self.motion.setCollisionProtectionEnabled("RArm", self.collisionRArmState)

    def onInput_onSet(self):
        # enable/disable collision protection
        result = self.motion.setCollisionProtectionEnabled( self.getParameter("Body part"), False )
        if( result ):
            self.success()
        else:
            self.logger.warning( "Disabling collision protection failed. Deactivation succeeds only if the current state of the chain is not in collision. If you want to deactivate collision of both arms, they need to be off collision." )
            self.failure()]]>
                                                        </content>
                                                      </script>
                                                      <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                      <Input name="onSet" type="1" type_size="1" nature="1" inner="0" tooltip="The anti-collision feature is enabled or disabled when this input is stimulated." id="2" />
                                                      <Output name="success" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent if the collision protection has been successfully enabled or disabled.&#x0A;&#x0A;Note: The only case where there is a failure is when you try to disable the&#x0A;anti-collision while it is currently in collision with some part of his body." id="3" />
                                                      <Output name="failure" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent if the collision protection has failed to be enabled or disabled.&#x0A;&#x0A;Note: The only case where there is a failure is when you try to disable the&#x0A;anti-collision while it is currently in collision with some part of his body." id="4" />
                                                      <Parameter name="Body part" inherits_from_parent="0" content_type="3" value="Arms" default_value="Arms" custom_choice="0" tooltip="Body part which avoids the collision." id="5">
                                                        <Choice value="Arms" />
                                                        <Choice value="LArm" />
                                                        <Choice value="RArm" />
                                                      </Parameter>
                                                    </Box>
                                                    <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                  </Diagram>
                                                </BehaviorKeyframe>
                                              </BehaviorLayer>
                                              <ActuatorList model="nao">
                                                <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                                  <Key frame="10" value="-1.40867" />
                                                  <Key frame="20" value="-2.73208e-05" />
                                                  <Key frame="28" value="2.37067" />
                                                  <Key frame="36" value="3.86374e-05" />
                                                  <Key frame="44" value="-0.353971" />
                                                  <Key frame="50" value="0.788621" />
                                                  <Key frame="56" value="1.40386" />
                                                  <Key frame="62" value="-1.32078" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="3.60116" />
                                                  <Key frame="20" value="0" />
                                                  <Key frame="28" value="29.5016" />
                                                  <Key frame="36" value="-38.5028" />
                                                  <Key frame="44" value="-1.23289" />
                                                  <Key frame="50" value="11.1598" />
                                                  <Key frame="56" value="4.2164" />
                                                  <Key frame="62" value="-2.02391" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="119.496" />
                                                  <Key frame="20" value="120" />
                                                  <Key frame="26" value="116.806" />
                                                  <Key frame="36" value="119.496" />
                                                  <Key frame="44" value="119.5" />
                                                  <Key frame="50" value="74.9692" />
                                                  <Key frame="56" value="51.7658" />
                                                  <Key frame="59" value="40.3" />
                                                  <Key frame="62" value="51.6779" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="56.1604" />
                                                  <Key frame="20" value="21" />
                                                  <Key frame="26" value="20" />
                                                  <Key frame="36" value="20" />
                                                  <Key frame="44" value="23" />
                                                  <Key frame="50" value="67.1469" />
                                                  <Key frame="56" value="22.7616" />
                                                  <Key frame="62" value="12.3903" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                                  <Key frame="10" value="-43.5967" />
                                                  <Key frame="20" value="9" />
                                                  <Key frame="26" value="7.02893" />
                                                  <Key frame="36" value="5" />
                                                  <Key frame="44" value="3.42537" />
                                                  <Key frame="50" value="-54.6711" />
                                                  <Key frame="56" value="-55.1984" />
                                                  <Key frame="62" value="-25.1394" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="-35.7695" />
                                                  <Key frame="20" value="0" />
                                                  <Key frame="26" value="-88.5" />
                                                  <Key frame="36" value="-89.5017" />
                                                  <Key frame="44" value="-50.1" />
                                                  <Key frame="46" value="-59.3" />
                                                  <Key frame="50" value="-38.9336" />
                                                  <Key frame="56" value="-64.3343" />
                                                  <Key frame="62" value="-70.7504" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                                  <Key frame="10" value="-40.4326" />
                                                  <Key frame="26" value="-102.484" />
                                                  <Key frame="44" value="-41.2236" />
                                                  <Key frame="50" value="-2.72705" />
                                                  <Key frame="62" value="3.42537" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                                  <Key frame="10" value="0.0502082" />
                                                  <Key frame="26" value="0.0763898" />
                                                  <Key frame="44" value="0.0905716" />
                                                  <Key frame="50" value="0.0127537" />
                                                  <Key frame="62" value="0.3004" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="119.496" />
                                                  <Key frame="20" value="120" />
                                                  <Key frame="26" value="111.889" />
                                                  <Key frame="36" value="119.496" />
                                                  <Key frame="44" value="119.5" />
                                                  <Key frame="50" value="109.955" />
                                                  <Key frame="56" value="59.4172" />
                                                  <Key frame="59" value="41.8" />
                                                  <Key frame="62" value="53.0011" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="-61.5266" />
                                                  <Key frame="20" value="-21" />
                                                  <Key frame="26" value="-20" />
                                                  <Key frame="36" value="-20" />
                                                  <Key frame="44" value="-23.5" />
                                                  <Key frame="50" value="-51.507" />
                                                  <Key frame="56" value="-42.4541" />
                                                  <Key frame="62" value="-13.8893" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                                  <Key frame="10" value="43.8556" />
                                                  <Key frame="20" value="-9" />
                                                  <Key frame="26" value="-14.7682" />
                                                  <Key frame="36" value="-5" />
                                                  <Key frame="44" value="-3.78175" />
                                                  <Key frame="50" value="90.3503" />
                                                  <Key frame="56" value="61.1702" />
                                                  <Key frame="62" value="30.0566" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="40.6963" />
                                                  <Key frame="20" value="0" />
                                                  <Key frame="26" value="88.5" />
                                                  <Key frame="36" value="89.5017" />
                                                  <Key frame="44" value="40.9" />
                                                  <Key frame="46" value="60.4" />
                                                  <Key frame="50" value="54.8468" />
                                                  <Key frame="56" value="65.6575" />
                                                  <Key frame="62" value="72.7768" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                                  <Key frame="10" value="66.0043" />
                                                  <Key frame="26" value="98.8758" />
                                                  <Key frame="44" value="63.6312" />
                                                  <Key frame="50" value="14.1482" />
                                                  <Key frame="62" value="-3.2544" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                                  <Key frame="10" value="0" />
                                                  <Key frame="20" value="0" />
                                                  <Key frame="26" value="0.0182082" />
                                                  <Key frame="44" value="0.00293558" />
                                                  <Key frame="50" value="0.126571" />
                                                  <Key frame="62" value="0.2996" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="-26.9804" />
                                                  <Key frame="20" value="0" />
                                                  <Key frame="31" value="0.441863" />
                                                  <Key frame="36" value="-2.73208e-05" />
                                                  <Key frame="44" value="-37.5274" />
                                                  <Key frame="50" value="-40.34" />
                                                  <Key frame="62" value="-35.418" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="2.55126" />
                                                  <Key frame="20" value="8.991e-06" />
                                                  <Key frame="31" value="3.34229" />
                                                  <Key frame="36" value="8.991e-06" />
                                                  <Key frame="44" value="-3.68905" />
                                                  <Key frame="50" value="8.06912" />
                                                  <Key frame="62" value="15.9987" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="14.3288" />
                                                  <Key frame="20" value="-10" />
                                                  <Key frame="31" value="21.448" />
                                                  <Key frame="36" value="-10" />
                                                  <Key frame="44" value="-67.4984" />
                                                  <Key frame="50" value="-90" />
                                                  <Key frame="62" value="-90.5261" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                                  <Key frame="10" value="5.2711" />
                                                  <Key frame="20" value="96" />
                                                  <Key frame="31" value="115.751" />
                                                  <Key frame="36" value="96" />
                                                  <Key frame="44" value="61.6976" />
                                                  <Key frame="50" value="80.3062" />
                                                  <Key frame="62" value="79.9791" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                                  <Key frame="10" value="47.2833" />
                                                  <Key frame="20" value="14" />
                                                  <Key frame="31" value="-26.0184" />
                                                  <Key frame="36" value="14" />
                                                  <Key frame="44" value="38.8457" />
                                                  <Key frame="50" value="44.4668" />
                                                  <Key frame="62" value="47.8986" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="-1.93121" />
                                                  <Key frame="20" value="0" />
                                                  <Key frame="31" value="-1.93121" />
                                                  <Key frame="36" value="0" />
                                                  <Key frame="44" value="9.75839" />
                                                  <Key frame="50" value="5.20441" />
                                                  <Key frame="62" value="-0.524946" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="-8.52309" />
                                                  <Key frame="20" value="0" />
                                                  <Key frame="31" value="-1.31597" />
                                                  <Key frame="36" value="0" />
                                                  <Key frame="44" value="3.51807" />
                                                  <Key frame="50" value="-6.98985" />
                                                  <Key frame="62" value="-15.3786" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="10.6325" />
                                                  <Key frame="20" value="-10" />
                                                  <Key frame="31" value="16.1697" />
                                                  <Key frame="36" value="-10" />
                                                  <Key frame="44" value="-66.7122" />
                                                  <Key frame="50" value="-90" />
                                                  <Key frame="62" value="-91.234" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                                  <Key frame="10" value="10.9889" />
                                                  <Key frame="20" value="96" />
                                                  <Key frame="31" value="116.107" />
                                                  <Key frame="36" value="96" />
                                                  <Key frame="44" value="62.7571" />
                                                  <Key frame="50" value="78.8859" />
                                                  <Key frame="62" value="80.687" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                                  <Key frame="10" value="26.7215" />
                                                  <Key frame="20" value="14" />
                                                  <Key frame="31" value="-21.4432" />
                                                  <Key frame="36" value="14" />
                                                  <Key frame="44" value="41.1357" />
                                                  <Key frame="50" value="44.1094" />
                                                  <Key frame="62" value="48.6944" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="9.5826" />
                                                  <Key frame="20" value="4.94951e-06" />
                                                  <Key frame="31" value="-2.28278" />
                                                  <Key frame="36" value="4.94951e-06" />
                                                  <Key frame="44" value="-8.25942" />
                                                  <Key frame="50" value="-6.87076" />
                                                  <Key frame="62" value="1.0571" />
                                                </ActuatorCurve>
                                              </ActuatorList>
                                            </Timeline>
                                          </Box>
                                          <Box name="SideToBelly" id="6" localization="8" tooltip="Lie down on the back or the belly from an other lie down position (on the side)." x="513" y="538">
                                            <bitmap>media/images/box/movement/move.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		""

	def onInput_onStop(self):
		""]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="10">
                                              <ActuatorList model="nao">
                                                <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                                  <Key frame="5" value="41.3067" />
                                                  <Key frame="10" value="41.3067" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                                  <Key frame="5" value="8.52309" />
                                                  <Key frame="10" value="8.52309" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                                  <Key frame="5" value="108.72" />
                                                  <Key frame="10" value="108.72" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                                  <Key frame="5" value="45.965" />
                                                  <Key frame="10" value="45.965" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                                  <Key frame="5" value="-56.8684" />
                                                  <Key frame="10" value="-56.8684" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                                  <Key frame="5" value="-26.8046" />
                                                  <Key frame="10" value="-26.8046" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                                  <Key frame="5" value="-38.8505" />
                                                  <Key frame="10" value="-38.8505" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                                  <Key frame="5" value="0.200389" />
                                                  <Key frame="10" value="0.200389" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                                  <Key frame="5" value="113.383" />
                                                  <Key frame="10" value="113.383" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                                  <Key frame="5" value="-44.6514" />
                                                  <Key frame="10" value="-44.6514" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                                  <Key frame="5" value="52.9084" />
                                                  <Key frame="10" value="52.9084" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                                  <Key frame="5" value="19.5144" />
                                                  <Key frame="10" value="19.5144" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                                  <Key frame="5" value="37" />
                                                  <Key frame="10" value="37" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                                  <Key frame="5" value="0.146571" />
                                                  <Key frame="10" value="0.146571" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                                  <Key frame="5" value="-65.5648" />
                                                  <Key frame="10" value="-65.5648" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                                  <Key frame="5" value="14.4166" />
                                                  <Key frame="10" value="14.4166" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                                  <Key frame="5" value="2.02391" />
                                                  <Key frame="10" value="2.02391" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                                  <Key frame="5" value="-5.27591" />
                                                  <Key frame="10" value="-5.27591" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                                  <Key frame="5" value="20.3885" />
                                                  <Key frame="10" value="20.3885" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                                  <Key frame="5" value="19.6902" />
                                                  <Key frame="10" value="19.6902" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                                  <Key frame="5" value="-1.75543" />
                                                  <Key frame="10" value="-1.75543" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                                  <Key frame="5" value="23.8163" />
                                                  <Key frame="10" value="23.8163" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                                  <Key frame="5" value="-5.2711" />
                                                  <Key frame="10" value="-5.2711" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                                  <Key frame="5" value="29.9735" />
                                                  <Key frame="10" value="29.9735" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                                  <Key frame="5" value="-3.86483" />
                                                  <Key frame="10" value="-3.86483" />
                                                </ActuatorCurve>
                                              </ActuatorList>
                                            </Timeline>
                                          </Box>
                                          <Box name="Switch Case" id="9" localization="8" tooltip="Test input value and stimulate the output matching to this value. If there is no&#x0A;output matching, the default output (onDefault) is stimulated.&#x0A;&#x0A;You can edit a case by left double-clicking on the line. You can add a&#x0A;case by right clicking on a line and selecting &apos;Insert a row&apos;. You can delete&#x0A;a case by right clicking on a line and selecting &apos;Remove a row&apos;." plugin="dispatcher_plugin" x="261" y="101">
                                            <bitmap>media/images/box/interaction/choice.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion("Back")):
			self.output_1(p)
		elif(p == self.typeConversion("Stand")):
			self.output_2(p)
		elif(p == self.typeConversion("Crouch")):
			self.output_3(p)
		elif(p == self.typeConversion("Knee")):
			self.output_4(p)
		elif(p == self.typeConversion("Frog")):
			self.output_5(p)
		elif(p == self.typeConversion("Belly")):
			self.output_6(p)
		elif(p == self.typeConversion("Left")):
			self.output_7(p)
		elif(p == self.typeConversion("Right")):
			self.output_8(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]>
                                              </content>
                                            </script>
                                            <pluginContent>
                                              <keywords>
                                                <keyword>&quot;Back&quot;</keyword>
                                                <keyword>&quot;Stand&quot;</keyword>
                                                <keyword>&quot;Crouch&quot;</keyword>
                                                <keyword>&quot;Knee&quot;</keyword>
                                                <keyword>&quot;Frog&quot;</keyword>
                                                <keyword>&quot;Belly&quot;</keyword>
                                                <keyword>&quot;Left&quot;</keyword>
                                                <keyword>&quot;Right&quot;</keyword>
                                                <keyword></keyword>
                                              </keywords>
                                            </pluginContent>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Value to test." id="2" />
                                            <Output name="onDefault" type="1" type_size="1" nature="1" inner="0" tooltip="If the input value does not match any value set on the box." id="3" />
                                            <Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="4" />
                                            <Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="5" />
                                            <Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="6" />
                                            <Output name="output_4" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="7" />
                                            <Output name="output_5" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="8" />
                                            <Output name="output_6" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="9" />
                                            <Output name="output_7" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="10" />
                                            <Output name="output_8" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="11" />
                                          </Box>
                                          <Box name="Switch Case" id="1" localization="8" tooltip="Test input value and stimulate the output matching to this value. If there is no&#x0A;output matching, the default output (onDefault) is stimulated.&#x0A;&#x0A;You can edit a case by left double-clicking on the line. You can add a&#x0A;case by right clicking on a line and selecting &apos;Insert a row&apos;. You can delete&#x0A;a case by right clicking on a line and selecting &apos;Remove a row&apos;." plugin="dispatcher_plugin" x="795" y="538">
                                            <bitmap>media/images/box/interaction/choice.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion("Belly")):
			self.output_1(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]>
                                              </content>
                                            </script>
                                            <pluginContent>
                                              <keywords>
                                                <keyword>&quot;Belly&quot;</keyword>
                                                <keyword></keyword>
                                              </keywords>
                                            </pluginContent>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Value to test." id="2" />
                                            <Output name="onDefault" type="1" type_size="1" nature="1" inner="0" tooltip="If the input value does not match any value set on the box." id="3" />
                                            <Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="4" />
                                          </Box>
                                          <Box name="Switch Case" id="4" localization="8" tooltip="Test input value and stimulate the output matching to this value. If there is no&#x0A;output matching, the default output (onDefault) is stimulated.&#x0A;&#x0A;You can edit a case by left double-clicking on the line. You can add a&#x0A;case by right clicking on a line and selecting &apos;Insert a row&apos;. You can delete&#x0A;a case by right clicking on a line and selecting &apos;Remove a row&apos;." plugin="dispatcher_plugin" x="977" y="378">
                                            <bitmap>media/images/box/interaction/choice.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion("Crouch")):
			self.output_1(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]>
                                              </content>
                                            </script>
                                            <pluginContent>
                                              <keywords>
                                                <keyword>&quot;Crouch&quot;</keyword>
                                                <keyword></keyword>
                                              </keywords>
                                            </pluginContent>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Value to test." id="2" />
                                            <Output name="onDefault" type="1" type_size="1" nature="1" inner="0" tooltip="If the input value does not match any value set on the box." id="3" />
                                            <Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="4" />
                                          </Box>
                                          <Box name="Get Robot Pose" id="5" localization="8" tooltip="Return NAO&apos;s current pose.&#x0A;&#x0A;Note: The box waits for the robot pose to be stabilized. You can set the maximum&#x0A;time to wait in parameters. After this time is ellapsed, the current pose is sent to the&#x0A;output anyway." x="656" y="542">
                                            <bitmap>media/images/box/sensors/inertial_unit.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.robotPoseProxy = ALProxy("ALRobotPosture")
        self.threadTime = 0.1 #seconds

    def onLoad(self):
        self.bIsRunning = False
        self.bMustStop = False

    def onUnload(self):
        self.bMustStop = True

    def onInput_onStart(self):
        if( self.bIsRunning ):
            return
        self.bIsRunning = True
        self.bMustStop = False
        beginTime = time.time()
        RobotPoseAndTime = ["Unknown", 0.]
        while( not self.bMustStop ):
            RobotPoseAndTime = self.robotPoseProxy.getActualPoseAndTime()
            # as soon as the robot is not moving anymore from its position, give its position
            if( RobotPoseAndTime[1] > 0.5 or time.time() - beginTime > self.getParameter("Time to wait for pose stabilization (s)") ):
                self.bMustStop = True
            if( not self.bMustStop ):
                time.sleep(self.threadTime)
        self.robotPose(RobotPoseAndTime[0])
        self.bIsRunning = False]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Output name="robotPose" type="3" type_size="1" nature="2" inner="0" tooltip='NAO&apos;s current pose. It can be:&#x0A;- &quot;Unknown&quot;&#x0A;- &quot;Stand&quot;&#x0A;- &quot;Sit&quot;&#x0A;- &quot;Crouch&quot;&#x0A;- &quot;Knee&quot;&#x0A;- &quot;Frog&quot;&#x0A;- &quot;Back&quot;&#x0A;- &quot;Belly&quot;&#x0A;- &quot;Left&quot;&#x0A;- &quot;Right&quot;&#x0A;- &quot;HeadBack&quot;' id="3" />
                                            <Parameter name="Time to wait for pose stabilization (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0.5" max="10" tooltip="Maximum time to wait NAO&apos;s pose stabilization. After this time is ellapsed,&#x0A;the current pose is sent to the output even though it is not stabilized." id="4" />
                                          </Box>
                                          <Box name="Get Robot Pose" id="2" localization="8" tooltip="Return NAO&apos;s current pose.&#x0A;&#x0A;Note: The box waits for the robot pose to be stabilized. You can set the maximum&#x0A;time to wait in parameters. After this time is ellapsed, the current pose is sent to the&#x0A;output anyway." x="845" y="378">
                                            <bitmap>media/images/box/sensors/inertial_unit.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.robotPoseProxy = ALProxy("ALRobotPosture")
        self.threadTime = 0.1 #seconds

    def onLoad(self):
        self.bIsRunning = False
        self.bMustStop = False

    def onUnload(self):
        self.bMustStop = True

    def onInput_onStart(self):
        if( self.bIsRunning ):
            return
        self.bIsRunning = True
        self.bMustStop = False
        beginTime = time.time()
        RobotPoseAndTime = ["Unknown", 0.]
        while( not self.bMustStop ):
            RobotPoseAndTime = self.robotPoseProxy.getActualPoseAndTime()
            # as soon as the robot is not moving anymore from its position, give its position
            if( RobotPoseAndTime[1] > 0.5 or time.time() - beginTime > self.getParameter("Time to wait for pose stabilization (s)") ):
                self.bMustStop = True
            if( not self.bMustStop ):
                time.sleep(self.threadTime)
        self.robotPose(RobotPoseAndTime[0])
        self.bIsRunning = False]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Output name="robotPose" type="3" type_size="1" nature="2" inner="0" tooltip='NAO&apos;s current pose. It can be:&#x0A;- &quot;Unknown&quot;&#x0A;- &quot;Stand&quot;&#x0A;- &quot;Sit&quot;&#x0A;- &quot;Crouch&quot;&#x0A;- &quot;Knee&quot;&#x0A;- &quot;Frog&quot;&#x0A;- &quot;Back&quot;&#x0A;- &quot;Belly&quot;&#x0A;- &quot;Left&quot;&#x0A;- &quot;Right&quot;&#x0A;- &quot;HeadBack&quot;' id="3" />
                                            <Parameter name="Time to wait for pose stabilization (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0.5" max="10" tooltip="Maximum time to wait NAO&apos;s pose stabilization. After this time is ellapsed,&#x0A;the current pose is sent to the output even though it is not stabilized." id="4" />
                                          </Box>
                                          <Box name="Get Robot Pose" id="3" localization="8" tooltip="Return NAO&apos;s current pose.&#x0A;&#x0A;Note: The box waits for the robot pose to be stabilized. You can set the maximum&#x0A;time to wait in parameters. After this time is ellapsed, the current pose is sent to the&#x0A;output anyway." x="104" y="49">
                                            <bitmap>media/images/box/sensors/inertial_unit.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.robotPoseProxy = ALProxy("ALRobotPosture")
        self.threadTime = 0.1 #seconds

    def onLoad(self):
        self.bIsRunning = False
        self.bMustStop = False

    def onUnload(self):
        self.bMustStop = True

    def onInput_onStart(self):
        if( self.bIsRunning ):
            return
        self.bIsRunning = True
        self.bMustStop = False
        beginTime = time.time()
        RobotPoseAndTime = ["Unknown", 0.]
        while( not self.bMustStop ):
            RobotPoseAndTime = self.robotPoseProxy.getActualPoseAndTime()
            # as soon as the robot is not moving anymore from its position, give its position
            if( RobotPoseAndTime[1] > 0.5 or time.time() - beginTime > self.getParameter("Time to wait for pose stabilization (s)") ):
                self.bMustStop = True
            if( not self.bMustStop ):
                time.sleep(self.threadTime)
        self.robotPose(RobotPoseAndTime[0])
        self.bIsRunning = False]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Output name="robotPose" type="3" type_size="1" nature="2" inner="0" tooltip='NAO&apos;s current pose. It can be:&#x0A;- &quot;Unknown&quot;&#x0A;- &quot;Stand&quot;&#x0A;- &quot;Sit&quot;&#x0A;- &quot;Crouch&quot;&#x0A;- &quot;Knee&quot;&#x0A;- &quot;Frog&quot;&#x0A;- &quot;Back&quot;&#x0A;- &quot;Belly&quot;&#x0A;- &quot;Left&quot;&#x0A;- &quot;Right&quot;&#x0A;- &quot;HeadBack&quot;' id="3" />
                                            <Parameter name="Time to wait for pose stabilization (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0.5" max="10" tooltip="Maximum time to wait NAO&apos;s pose stabilization. After this time is ellapsed,&#x0A;the current pose is sent to the output even though it is not stabilized." id="4" />
                                          </Box>
                                          <Box name="Relax Motors" id="7" localization="8" tooltip="Relax motors for a while for a better electric current consumption.&#x0A;&#x0A;!!Warning!! This box must be applied only after a Sit Down. In other positions NAO&#x0A;could fall." x="1087" y="131">
                                            <bitmap>media/images/box/movement/stiffness.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        # WARNING: This should only be called when sitting and its
        # behavior may change in future version. The aim of the method
        # is to reduce battery usage when motors are stiff while sitting.
        try:
            ALMotion._relaxMotorsWhenSitting()
        except:
            pass
        self.onStopped()]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                          </Box>
                                          <Link inputowner="11" indexofinput="2" outputowner="9" indexofoutput="6" />
                                          <Link inputowner="12" indexofinput="2" outputowner="9" indexofoutput="8" />
                                          <Link inputowner="12" indexofinput="2" outputowner="9" indexofoutput="9" />
                                          <Link inputowner="6" indexofinput="2" outputowner="9" indexofoutput="11" />
                                          <Link inputowner="14" indexofinput="2" outputowner="9" indexofoutput="4" />
                                          <Link inputowner="11" indexofinput="2" outputowner="9" indexofoutput="5" />
                                          <Link inputowner="12" indexofinput="2" outputowner="9" indexofoutput="7" />
                                          <Link inputowner="6" indexofinput="2" outputowner="9" indexofoutput="10" />
                                          <Link inputowner="0" indexofinput="4" outputowner="9" indexofoutput="3" />
                                          <Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="3" />
                                          <Link inputowner="12" indexofinput="2" outputowner="1" indexofoutput="4" />
                                          <Link inputowner="11" indexofinput="2" outputowner="4" indexofoutput="4" />
                                          <Link inputowner="0" indexofinput="4" outputowner="4" indexofoutput="3" />
                                          <Link inputowner="5" indexofinput="2" outputowner="6" indexofoutput="4" />
                                          <Link inputowner="1" indexofinput="2" outputowner="5" indexofoutput="3" />
                                          <Link inputowner="2" indexofinput="2" outputowner="12" indexofoutput="4" />
                                          <Link inputowner="4" indexofinput="2" outputowner="2" indexofoutput="3" />
                                          <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="2" />
                                          <Link inputowner="9" indexofinput="2" outputowner="3" indexofoutput="3" />
                                          <Link inputowner="7" indexofinput="2" outputowner="14" indexofoutput="4" />
                                          <Link inputowner="7" indexofinput="2" outputowner="11" indexofoutput="4" />
                                          <Link inputowner="0" indexofinput="4" outputowner="7" indexofoutput="3" />
                                        </Diagram>
                                      </BehaviorKeyframe>
                                    </BehaviorLayer>
                                  </Timeline>
                                </Box>
                                <Box name="Switch Case" id="1" localization="8" tooltip="Test input value and stimulate the output matching to this value. If there is no&#x0A;output matching, the default output (onDefault) is stimulated.&#x0A;&#x0A;You can edit a case by left double-clicking on the line. You can add a&#x0A;case by right clicking on a line and selecting &apos;Insert a row&apos;. You can delete&#x0A;a case by right clicking on a line and selecting &apos;Remove a row&apos;." plugin="dispatcher_plugin" x="431" y="128">
                                  <bitmap>media/images/box/interaction/choice.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion("Sit")):
			self.output_1(p)
		elif(p == self.typeConversion("Unknown")):
			self.output_2(p)
		elif(p == self.typeConversion("HeadBack")):
			self.output_3(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]>
                                    </content>
                                  </script>
                                  <pluginContent>
                                    <keywords>
                                      <keyword>&quot;Sit&quot;</keyword>
                                      <keyword>&quot;Unknown&quot;</keyword>
                                      <keyword>&quot;HeadBack&quot;</keyword>
                                      <keyword></keyword>
                                    </keywords>
                                  </pluginContent>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Value to test." id="2" />
                                  <Output name="onDefault" type="1" type_size="1" nature="1" inner="0" tooltip="If the input value does not match any value set on the box." id="3" />
                                  <Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="4" />
                                  <Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="5" />
                                  <Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="6" />
                                </Box>
                                <Box name="Only Once" id="4" localization="8" tooltip="This box&apos;s output is stimulated only the first time the onSignal input is." x="104" y="62">
                                  <bitmap>media/images/box/box-script.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.bFirstTime = True

    def onUnload(self):
        self.bFirstTime = True

    def onInput_onSignal(self):
        if( self.bFirstTime ):
            self.bFirstTime = False
            self.firstTime()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onSignal" type="1" type_size="1" nature="1" inner="0" tooltip="The signal that must pass only once." id="2" />
                                  <Output name="firstTime" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent first time the onSignal input is stimulated." id="3" />
                                </Box>
                                <Box name="Set Stiffness" id="7" localization="8" tooltip="Set motors stiffness." x="707" y="221">
                                  <bitmap>media/images/box/movement/stiffness.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def setStiffness(self, stiffness):
        self.bIsRunning = True
        duration = self.getParameter("Duration (s)")
        if(self.getParameter("Head")):
            ALMotion.post.stiffnessInterpolation("Head", stiffness, duration)
        if(self.getParameter("Left arm")):
            ALMotion.post.stiffnessInterpolation("LArm", stiffness, duration)
        if(self.getParameter("Right arm")):
            ALMotion.post.stiffnessInterpolation("RArm", stiffness, duration)
        if(self.getParameter("Left leg")):
            ALMotion.post.stiffnessInterpolation("LLeg", stiffness, duration)
        if(self.getParameter("Right leg")):
            ALMotion.post.stiffnessInterpolation("RLeg", stiffness, duration)
        time.sleep(duration)
        self.bIsRunning = False

    def onInput_onSet(self):
        if( self.bIsRunning ):
            return
        self.setStiffness(self.getParameter("Motors stiffness (%)")/100.)
        self.onReady() #~ activate output of the box]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onSet" type="1" type_size="1" nature="1" inner="0" tooltip="When this input is stimulated, the stiffness of the selected motors is set to&#x0A;the stiffness parameter value." id="2" />
                                  <Output name="onReady" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when stiffness has been set." id="3" />
                                  <Parameter name="Head" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Do we want to modify the head stiffness?" id="4" />
                                  <Parameter name="Left arm" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Do we want to modify the left arm stiffness?" id="5" />
                                  <Parameter name="Right arm" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Do we want to modify the right arm stiffness?" id="6" />
                                  <Parameter name="Left leg" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Do we want to modify the left leg stiffness?" id="7" />
                                  <Parameter name="Right leg" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Do we want to modify the right leg stiffness?" id="8" />
                                  <Parameter name="Motors stiffness (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Stiffness value the motors are set to." id="9" />
                                  <Parameter name="Duration (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0.02" max="10" tooltip="How much time to go to the max/min stiffness in seconds." id="10" />
                                </Box>
                                <Box name="Get Robot Pose" id="2" localization="8" tooltip="Return NAO&apos;s current pose.&#x0A;&#x0A;Note: The box waits for the robot pose to be stabilized. You can set the maximum&#x0A;time to wait in parameters. After this time is ellapsed, the current pose is sent to the&#x0A;output anyway." x="272" y="115">
                                  <bitmap>media/images/box/sensors/inertial_unit.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.robotPoseProxy = ALProxy("ALRobotPosture")
        self.threadTime = 0.1 #seconds

    def onLoad(self):
        self.bIsRunning = False
        self.bMustStop = False

    def onUnload(self):
        self.bMustStop = True

    def onInput_onStart(self):
        if( self.bIsRunning ):
            return
        self.bIsRunning = True
        self.bMustStop = False
        beginTime = time.time()
        RobotPoseAndTime = ["Unknown", 0.]
        while( not self.bMustStop ):
            RobotPoseAndTime = self.robotPoseProxy.getActualPoseAndTime()
            # as soon as the robot is not moving anymore from its position, give its position
            if( RobotPoseAndTime[1] > 0.5 or time.time() - beginTime > self.getParameter("Time to wait for pose stabilization (s)") ):
                self.bMustStop = True
            if( not self.bMustStop ):
                time.sleep(self.threadTime)
        self.robotPose(RobotPoseAndTime[0])
        self.bIsRunning = False]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Output name="robotPose" type="3" type_size="1" nature="2" inner="0" tooltip='NAO&apos;s current pose. It can be:&#x0A;- &quot;Unknown&quot;&#x0A;- &quot;Stand&quot;&#x0A;- &quot;Sit&quot;&#x0A;- &quot;Crouch&quot;&#x0A;- &quot;Knee&quot;&#x0A;- &quot;Frog&quot;&#x0A;- &quot;Back&quot;&#x0A;- &quot;Belly&quot;&#x0A;- &quot;Left&quot;&#x0A;- &quot;Right&quot;&#x0A;- &quot;HeadBack&quot;' id="3" />
                                  <Parameter name="Time to wait for pose stabilization (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0.5" max="10" tooltip="Maximum time to wait NAO&apos;s pose stabilization. After this time is ellapsed,&#x0A;the current pose is sent to the output even though it is not stabilized." id="4" />
                                </Box>
                                <Box name="Left Sit Motion" id="3" localization="8" tooltip="The robot makes the right motion to sit down depending on its current position." x="597" y="514">
                                  <bitmap>media/images/box/movement/sit_ground.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        self.count = 0
        pass

    def onInput_onStop(self):
        self.onUnload()
        pass]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent after a step to sit down is done." id="4" />
                                  <Timeline enable="0">
                                    <BehaviorLayer name="SitDownBehavior">
                                      <BehaviorKeyframe name="DetectRobotPose" index="1">
                                        <Diagram>
                                          <Box name="CrouchToSitDown" id="11" localization="8" tooltip="Sit down from crouch or stand position." x="941" y="228">
                                            <bitmap>media/images/box/movement/move.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="72">
                                              <ActuatorList model="nao">
                                                <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                                  <Key frame="13" value="-18.1081" />
                                                  <Key frame="24" value="-25.2273" />
                                                  <Key frame="34" value="-36.3017" />
                                                  <Key frame="43" value="-35.9501" />
                                                  <Key frame="52" value="-23.4695" />
                                                  <Key frame="59" value="-10.5494" />
                                                  <Key frame="66" value="-0.00240423" />
                                                  <Key frame="72" value="-1.23289" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                                  <Key frame="13" value="21.2674" />
                                                  <Key frame="24" value="21.5311" />
                                                  <Key frame="34" value="21.0916" />
                                                  <Key frame="43" value="20.4764" />
                                                  <Key frame="52" value="21.0916" />
                                                  <Key frame="59" value="21.0037" />
                                                  <Key frame="66" value="21.7069" />
                                                  <Key frame="72" value="-1.93602" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                                  <Key frame="13" value="46.3" />
                                                  <Key frame="24" value="34" />
                                                  <Key frame="34" value="99.9353" />
                                                  <Key frame="39" value="119" />
                                                  <Key frame="52" value="119.496" />
                                                  <Key frame="59" value="108.197" />
                                                  <Key frame="66" value="44.8" />
                                                  <Key frame="72" value="53.3527" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                                  <Key frame="13" value="32.5223" />
                                                  <Key frame="24" value="53.3" />
                                                  <Key frame="29" value="43.7" />
                                                  <Key frame="34" value="31.7" />
                                                  <Key frame="39" value="30.1" />
                                                  <Key frame="52" value="31.7" />
                                                  <Key frame="59" value="89.2" />
                                                  <Key frame="66" value="31.4676" />
                                                  <Key frame="72" value="15.1198" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                                  <Key frame="13" value="-8" />
                                                  <Key frame="24" value="-0.261271" />
                                                  <Key frame="34" value="3.95753" />
                                                  <Key frame="39" value="8.44001" />
                                                  <Key frame="52" value="-6.7" />
                                                  <Key frame="59" value="-100.37" />
                                                  <Key frame="66" value="-64.598" />
                                                  <Key frame="72" value="-29.705" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                                  <Key frame="13" value="-48" />
                                                  <Key frame="24" value="-27.4246" />
                                                  <Key frame="34" value="-4.48488" />
                                                  <Key frame="39" value="-5.80326" />
                                                  <Key frame="52" value="-33.9" />
                                                  <Key frame="59" value="-59.5051" />
                                                  <Key frame="66" value="-74.0951" />
                                                  <Key frame="72" value="-73.4799" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                                  <Key frame="13" value="-10.8083" />
                                                  <Key frame="24" value="-60.4671" />
                                                  <Key frame="34" value="-60.2913" />
                                                  <Key frame="39" value="-59.764" />
                                                  <Key frame="52" value="-59.764" />
                                                  <Key frame="59" value="-60.0276" />
                                                  <Key frame="66" value="-60.8187" />
                                                  <Key frame="72" value="3.43018" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                                  <Key frame="13" value="0.406207" />
                                                  <Key frame="24" value="0.0854807" />
                                                  <Key frame="34" value="0.0883898" />
                                                  <Key frame="39" value="0.103299" />
                                                  <Key frame="52" value="0.117844" />
                                                  <Key frame="59" value="0.114935" />
                                                  <Key frame="66" value="0.121117" />
                                                  <Key frame="72" value="0.2996" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                                  <Key frame="13" value="59.8" />
                                                  <Key frame="24" value="41.8" />
                                                  <Key frame="29" value="41.8" />
                                                  <Key frame="34" value="57.9182" />
                                                  <Key frame="43" value="86.2194" />
                                                  <Key frame="52" value="116.542" />
                                                  <Key frame="59" value="88.1" />
                                                  <Key frame="66" value="38.8" />
                                                  <Key frame="72" value="52.2932" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                                  <Key frame="13" value="-19.2459" />
                                                  <Key frame="24" value="-30.6718" />
                                                  <Key frame="34" value="-27.6" />
                                                  <Key frame="43" value="-48" />
                                                  <Key frame="52" value="-25.4" />
                                                  <Key frame="59" value="-89.2" />
                                                  <Key frame="66" value="-32.6054" />
                                                  <Key frame="72" value="-12.5661" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                                  <Key frame="13" value="32.2587" />
                                                  <Key frame="24" value="4.9" />
                                                  <Key frame="34" value="-6.06212" />
                                                  <Key frame="43" value="89" />
                                                  <Key frame="52" value="18.8991" />
                                                  <Key frame="59" value="69.2" />
                                                  <Key frame="66" value="43.5967" />
                                                  <Key frame="72" value="25.0515" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                                  <Key frame="13" value="54.9299" />
                                                  <Key frame="24" value="68.9" />
                                                  <Key frame="34" value="40" />
                                                  <Key frame="43" value="51.7" />
                                                  <Key frame="47" value="27.9" />
                                                  <Key frame="52" value="39.3" />
                                                  <Key frame="59" value="55" />
                                                  <Key frame="66" value="75.7603" />
                                                  <Key frame="72" value="73.3872" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                                  <Key frame="13" value="-5.00742" />
                                                  <Key frame="24" value="41.0478" />
                                                  <Key frame="34" value="41.0478" />
                                                  <Key frame="43" value="41.0478" />
                                                  <Key frame="52" value="41.751" />
                                                  <Key frame="59" value="41.8389" />
                                                  <Key frame="66" value="41.3994" />
                                                  <Key frame="72" value="-3.42537" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                                  <Key frame="13" value="0.231662" />
                                                  <Key frame="24" value="0.0669354" />
                                                  <Key frame="34" value="0.0665718" />
                                                  <Key frame="43" value="0.0665718" />
                                                  <Key frame="52" value="0.0731171" />
                                                  <Key frame="59" value="0.0694809" />
                                                  <Key frame="66" value="0.0607536" />
                                                  <Key frame="72" value="0.3004" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                                  <Key frame="13" value="-22.7616" />
                                                  <Key frame="24" value="-24.2557" />
                                                  <Key frame="34" value="-52.0295" />
                                                  <Key frame="43" value="-33.5722" />
                                                  <Key frame="52" value="-30.9355" />
                                                  <Key frame="59" value="-45.4376" />
                                                  <Key frame="66" value="-44.5587" />
                                                  <Key frame="72" value="-35.1543" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                                  <Key frame="13" value="7.90785" />
                                                  <Key frame="24" value="14.6755" />
                                                  <Key frame="34" value="21.7947" />
                                                  <Key frame="43" value="32.957" />
                                                  <Key frame="52" value="30.6718" />
                                                  <Key frame="59" value="12.3024" />
                                                  <Key frame="66" value="18.4549" />
                                                  <Key frame="72" value="15.3786" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                                  <Key frame="13" value="-43.8604" />
                                                  <Key frame="24" value="-49.2218" />
                                                  <Key frame="34" value="-78.226" />
                                                  <Key frame="43" value="-94.5739" />
                                                  <Key frame="52" value="-88.3336" />
                                                  <Key frame="59" value="-92.2008" />
                                                  <Key frame="66" value="-81.2144" />
                                                  <Key frame="72" value="-90.8824" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                                  <Key frame="13" value="108.461" />
                                                  <Key frame="24" value="44.3877" />
                                                  <Key frame="34" value="65.4817" />
                                                  <Key frame="43" value="65.6575" />
                                                  <Key frame="52" value="59.5" />
                                                  <Key frame="59" value="68.6458" />
                                                  <Key frame="66" value="56.1652" />
                                                  <Key frame="72" value="80.5991" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                                  <Key frame="13" value="-41.8341" />
                                                  <Key frame="24" value="19.1628" />
                                                  <Key frame="34" value="26.1941" />
                                                  <Key frame="43" value="44.2119" />
                                                  <Key frame="52" value="40.8721" />
                                                  <Key frame="59" value="53.4029" />
                                                  <Key frame="66" value="53.4029" />
                                                  <Key frame="72" value="48.6944" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                                  <Key frame="13" value="-12.0436" />
                                                  <Key frame="24" value="-29.0067" />
                                                  <Key frame="34" value="-3.34229" />
                                                  <Key frame="43" value="3.1617" />
                                                  <Key frame="52" value="-10.8131" />
                                                  <Key frame="59" value="-2.02391" />
                                                  <Key frame="66" value="-2.72705" />
                                                  <Key frame="72" value="-1.0571" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                                  <Key frame="13" value="-10.4615" />
                                                  <Key frame="24" value="-18" />
                                                  <Key frame="34" value="15.0271" />
                                                  <Key frame="43" value="-16.7897" />
                                                  <Key frame="52" value="-30.325" />
                                                  <Key frame="59" value="-13.3619" />
                                                  <Key frame="66" value="-20.4812" />
                                                  <Key frame="72" value="-15.9987" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                                  <Key frame="13" value="-33.8359" />
                                                  <Key frame="24" value="-49.8322" />
                                                  <Key frame="34" value="-0.524946" />
                                                  <Key frame="43" value="-35.5937" />
                                                  <Key frame="52" value="-89.0319" />
                                                  <Key frame="59" value="-91.3171" />
                                                  <Key frame="66" value="-83.9342" />
                                                  <Key frame="72" value="-90.5261" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                                  <Key frame="13" value="121.039" />
                                                  <Key frame="24" value="121.039" />
                                                  <Key frame="34" value="104.149" />
                                                  <Key frame="43" value="113.554" />
                                                  <Key frame="52" value="61.7" />
                                                  <Key frame="59" value="66.3558" />
                                                  <Key frame="66" value="62.3128" />
                                                  <Key frame="72" value="80.067" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                                  <Key frame="13" value="-68.1542" />
                                                  <Key frame="24" value="-68.1542" />
                                                  <Key frame="34" value="-68.1542" />
                                                  <Key frame="43" value="-29.9735" />
                                                  <Key frame="52" value="42.3614" />
                                                  <Key frame="59" value="52.8695" />
                                                  <Key frame="66" value="52.8205" />
                                                  <Key frame="72" value="47.8986" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                                  <Key frame="13" value="-2.46337" />
                                                  <Key frame="24" value="-4.57277" />
                                                  <Key frame="34" value="-2.37548" />
                                                  <Key frame="43" value="26.0135" />
                                                  <Key frame="52" value="10.3688" />
                                                  <Key frame="59" value="2.72224" />
                                                  <Key frame="66" value="2.89802" />
                                                  <Key frame="72" value="0.524946" />
                                                </ActuatorCurve>
                                              </ActuatorList>
                                            </Timeline>
                                          </Box>
                                          <Box name="BellyToCrouch" id="12" localization="8" tooltip="Crouch from lie down position (on the belly)." x="707" y="382">
                                            <bitmap>media/images/box/movement/move.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="100">
                                              <ActuatorList model="nao">
                                                <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                                  <Key frame="10" value="10" />
                                                  <Key frame="20" value="-13" />
                                                  <Key frame="34" value="16.4" />
                                                  <Key frame="45" value="17" />
                                                  <Key frame="58" value="-28.4" />
                                                  <Key frame="65" value="-17" />
                                                  <Key frame="76" value="3" />
                                                  <Key frame="89" value="-22.4" />
                                                  <Key frame="100" value="-1" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="-33.0497" />
                                                  <Key frame="20" value="-31.3797" />
                                                  <Key frame="34" value="6.15002" />
                                                  <Key frame="45" value="29.5" />
                                                  <Key frame="58" value="21.8" />
                                                  <Key frame="65" value="21.2674" />
                                                  <Key frame="76" value="-6" />
                                                  <Key frame="89" value="-30.5887" />
                                                  <Key frame="100" value="0.4" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="-1.57965" />
                                                  <Key frame="20" value="-86.6" />
                                                  <Key frame="34" value="-70.0473" />
                                                  <Key frame="45" value="-13.5329" />
                                                  <Key frame="58" value="12.483" />
                                                  <Key frame="65" value="25.7547" />
                                                  <Key frame="76" value="52.3859" />
                                                  <Key frame="89" value="55.0226" />
                                                  <Key frame="100" value="77.5229" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="87.982" />
                                                  <Key frame="20" value="11" />
                                                  <Key frame="34" value="4.74856" />
                                                  <Key frame="45" value="4.74856" />
                                                  <Key frame="58" value="13.0104" />
                                                  <Key frame="65" value="10.4615" />
                                                  <Key frame="76" value="0.498473" />
                                                  <Key frame="89" value="7.56109" />
                                                  <Key frame="100" value="0.79343" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                                  <Key frame="10" value="-119" />
                                                  <Key frame="20" value="-89.4714" />
                                                  <Key frame="34" value="-92.4597" />
                                                  <Key frame="45" value="-96.5906" />
                                                  <Key frame="58" value="-112.323" />
                                                  <Key frame="65" value="-111.796" />
                                                  <Key frame="76" value="-38.1426" />
                                                  <Key frame="89" value="-22.6737" />
                                                  <Key frame="100" value="-49.6564" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="-6" />
                                                  <Key frame="20" value="-21.8874" />
                                                  <Key frame="34" value="-36.3896" />
                                                  <Key frame="45" value="-89.2125" />
                                                  <Key frame="58" value="-0.498473" />
                                                  <Key frame="65" value="-0.498473" />
                                                  <Key frame="76" value="-24.2605" />
                                                  <Key frame="89" value="-37.2" />
                                                  <Key frame="100" value="-47.8155" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                                  <Key frame="10" value="-86.4831" />
                                                  <Key frame="20" value="-86.4831" />
                                                  <Key frame="34" value="-85.7799" />
                                                  <Key frame="45" value="-81.8248" />
                                                  <Key frame="58" value="-82.2643" />
                                                  <Key frame="65" value="-82.5279" />
                                                  <Key frame="76" value="-82.7037" />
                                                  <Key frame="89" value="-82.5279" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                                  <Key frame="10" value="0.0185718" />
                                                  <Key frame="20" value="0.0127537" />
                                                  <Key frame="34" value="0.0262082" />
                                                  <Key frame="45" value="0.0469355" />
                                                  <Key frame="58" value="0.0494809" />
                                                  <Key frame="65" value="0.04839" />
                                                  <Key frame="76" value="0.0472991" />
                                                  <Key frame="89" value="0.04839" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="4.83164" />
                                                  <Key frame="20" value="-86.6" />
                                                  <Key frame="34" value="-71.6342" />
                                                  <Key frame="45" value="4.12851" />
                                                  <Key frame="58" value="73" />
                                                  <Key frame="65" value="43.3" />
                                                  <Key frame="76" value="43" />
                                                  <Key frame="89" value="74" />
                                                  <Key frame="100" value="86.9225" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="-89.0319" />
                                                  <Key frame="20" value="-0.964405" />
                                                  <Key frame="34" value="-4.39218" />
                                                  <Key frame="45" value="-4.04062" />
                                                  <Key frame="58" value="-8.96255" />
                                                  <Key frame="65" value="-53.8" />
                                                  <Key frame="76" value="-38.8" />
                                                  <Key frame="89" value="-48.5" />
                                                  <Key frame="100" value="-4.83164" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                                  <Key frame="10" value="119" />
                                                  <Key frame="20" value="90.5309" />
                                                  <Key frame="34" value="91.9371" />
                                                  <Key frame="45" value="102.396" />
                                                  <Key frame="58" value="76.0287" />
                                                  <Key frame="65" value="71.5" />
                                                  <Key frame="76" value="55.7258" />
                                                  <Key frame="89" value="55" />
                                                  <Key frame="100" value="51.6827" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="0.5" />
                                                  <Key frame="20" value="20.2127" />
                                                  <Key frame="34" value="36.5606" />
                                                  <Key frame="45" value="48.7775" />
                                                  <Key frame="58" value="88.8561" />
                                                  <Key frame="65" value="42" />
                                                  <Key frame="76" value="42.2" />
                                                  <Key frame="89" value="66.1801" />
                                                  <Key frame="100" value="63.016" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                                  <Key frame="10" value="88.8609" />
                                                  <Key frame="20" value="88.8609" />
                                                  <Key frame="34" value="86.9273" />
                                                  <Key frame="45" value="82.9722" />
                                                  <Key frame="58" value="80.5112" />
                                                  <Key frame="65" value="80.687" />
                                                  <Key frame="76" value="80.687" />
                                                  <Key frame="89" value="31.2" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                                  <Key frame="10" value="0.0585718" />
                                                  <Key frame="20" value="0.0196627" />
                                                  <Key frame="34" value="0.0407536" />
                                                  <Key frame="45" value="0.0545718" />
                                                  <Key frame="58" value="0.0574809" />
                                                  <Key frame="65" value="0.0574809" />
                                                  <Key frame="76" value="0.0549355" />
                                                  <Key frame="89" value="0.0574809" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="-1.93121" />
                                                  <Key frame="20" value="2" />
                                                  <Key frame="34" value="-24.9588" />
                                                  <Key frame="45" value="-44.6466" />
                                                  <Key frame="58" value="-59.6761" />
                                                  <Key frame="65" value="-65.621" />
                                                  <Key frame="76" value="-65.621" />
                                                  <Key frame="89" value="-32.5175" />
                                                  <Key frame="100" value="0" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="-1.8" />
                                                  <Key frame="20" value="-0.00240423" />
                                                  <Key frame="34" value="-0.090296" />
                                                  <Key frame="45" value="-17.8444" />
                                                  <Key frame="58" value="-14.5924" />
                                                  <Key frame="65" value="-18.3718" />
                                                  <Key frame="76" value="-13.0104" />
                                                  <Key frame="89" value="4.30429" />
                                                  <Key frame="100" value="-0.6" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="4.39218" />
                                                  <Key frame="20" value="-0.00240423" />
                                                  <Key frame="34" value="-90.3551" />
                                                  <Key frame="45" value="-95.1891" />
                                                  <Key frame="58" value="-68.7337" />
                                                  <Key frame="65" value="-91.5856" />
                                                  <Key frame="76" value="-18.4597" />
                                                  <Key frame="89" value="-40.6963" />
                                                  <Key frame="100" value="-60" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                                  <Key frame="10" value="-4.48007" />
                                                  <Key frame="20" value="114" />
                                                  <Key frame="34" value="119.535" />
                                                  <Key frame="45" value="99.8474" />
                                                  <Key frame="58" value="121.478" />
                                                  <Key frame="65" value="121.478" />
                                                  <Key frame="76" value="121.478" />
                                                  <Key frame="89" value="121.478" />
                                                  <Key frame="100" value="120" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                                  <Key frame="10" value="53.2648" />
                                                  <Key frame="20" value="-59" />
                                                  <Key frame="34" value="-65.2133" />
                                                  <Key frame="45" value="-67.9785" />
                                                  <Key frame="58" value="-67.9785" />
                                                  <Key frame="65" value="-33.748" />
                                                  <Key frame="76" value="-67.9785" />
                                                  <Key frame="89" value="-67.9785" />
                                                  <Key frame="100" value="-60" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="-10.8" />
                                                  <Key frame="20" value="-0.00240423" />
                                                  <Key frame="34" value="-0.353971" />
                                                  <Key frame="45" value="0.261271" />
                                                  <Key frame="58" value="5.62267" />
                                                  <Key frame="65" value="0.788621" />
                                                  <Key frame="76" value="5.44688" />
                                                  <Key frame="89" value="-2.02391" />
                                                  <Key frame="100" value="0" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="-3.60596" />
                                                  <Key frame="20" value="-0.00240423" />
                                                  <Key frame="34" value="-0.090296" />
                                                  <Key frame="45" value="21.619" />
                                                  <Key frame="58" value="17.0486" />
                                                  <Key frame="65" value="17.0486" />
                                                  <Key frame="76" value="-11.1647" />
                                                  <Key frame="89" value="-7.29742" />
                                                  <Key frame="100" value="0.6" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="3.51807" />
                                                  <Key frame="20" value="0.00240423" />
                                                  <Key frame="34" value="-89.9108" />
                                                  <Key frame="45" value="-73.3872" />
                                                  <Key frame="58" value="-59.4124" />
                                                  <Key frame="65" value="-66.4437" />
                                                  <Key frame="76" value="-67.7621" />
                                                  <Key frame="89" value="-72.7719" />
                                                  <Key frame="100" value="-60" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                                  <Key frame="10" value="6.9" />
                                                  <Key frame="20" value="114" />
                                                  <Key frame="34" value="121.039" />
                                                  <Key frame="45" value="16.1697" />
                                                  <Key frame="58" value="23.201" />
                                                  <Key frame="65" value="20.4764" />
                                                  <Key frame="76" value="41.2188" />
                                                  <Key frame="89" value="115.399" />
                                                  <Key frame="100" value="120" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                                  <Key frame="10" value="52.8205" />
                                                  <Key frame="20" value="-59" />
                                                  <Key frame="34" value="-65.9212" />
                                                  <Key frame="45" value="12.3903" />
                                                  <Key frame="58" value="40.6915" />
                                                  <Key frame="65" value="52.8695" />
                                                  <Key frame="76" value="47.2833" />
                                                  <Key frame="89" value="-28.743" />
                                                  <Key frame="100" value="-60" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="0.0854875" />
                                                  <Key frame="20" value="-0.00240423" />
                                                  <Key frame="34" value="0.0854875" />
                                                  <Key frame="45" value="25.9257" />
                                                  <Key frame="58" value="17.2244" />
                                                  <Key frame="65" value="6.76526" />
                                                  <Key frame="76" value="2.37067" />
                                                  <Key frame="89" value="6.94104" />
                                                  <Key frame="100" value="0" />
                                                </ActuatorCurve>
                                              </ActuatorList>
                                            </Timeline>
                                          </Box>
                                          <Box name="BackToSitDown" id="14" localization="8" tooltip="Sit down from lie down position (on the back)." x="923" y="91">
                                            <bitmap>media/images/box/movement/move.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="62" resources_acquisition="1">
                                              <BehaviorLayer name="behavior_layer1">
                                                <BehaviorKeyframe name="keyframe10" index="10">
                                                  <Diagram>
                                                    <Box name="Disable Anti-Collision" id="2" localization="8" tooltip="Disable the collision protection on some specific part of NAO&apos;s body.&#x0A;&#x0A;Note: When this box is unloaded, the collision protection state will be reset to&#x0A;its previous state (enabled or disabled)." x="129" y="64">
                                                      <bitmap>media/images/box/sensors/anti_collision.png</bitmap>
                                                      <script language="4">
                                                        <content>
                                                          <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.motion = ALProxy( "ALMotion" )

    def onLoad(self):
        self.collisionLArmState = self.motion.getCollisionProtectionEnabled("LArm")
        self.collisionRArmState = self.motion.getCollisionProtectionEnabled("RArm")

    def onUnload(self):
        self.motion.setCollisionProtectionEnabled("LArm", self.collisionLArmState)
        self.motion.setCollisionProtectionEnabled("RArm", self.collisionRArmState)

    def onInput_onSet(self):
        # enable/disable collision protection
        result = self.motion.setCollisionProtectionEnabled( self.getParameter("Body part"), False )
        if( result ):
            self.success()
        else:
            self.logger.warning( "Disabling collision protection failed. Deactivation succeeds only if the current state of the chain is not in collision. If you want to deactivate collision of both arms, they need to be off collision." )
            self.failure()]]>
                                                        </content>
                                                      </script>
                                                      <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                      <Input name="onSet" type="1" type_size="1" nature="1" inner="0" tooltip="The anti-collision feature is enabled or disabled when this input is stimulated." id="2" />
                                                      <Output name="success" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent if the collision protection has been successfully enabled or disabled.&#x0A;&#x0A;Note: The only case where there is a failure is when you try to disable the&#x0A;anti-collision while it is currently in collision with some part of his body." id="3" />
                                                      <Output name="failure" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent if the collision protection has failed to be enabled or disabled.&#x0A;&#x0A;Note: The only case where there is a failure is when you try to disable the&#x0A;anti-collision while it is currently in collision with some part of his body." id="4" />
                                                      <Parameter name="Body part" inherits_from_parent="0" content_type="3" value="Arms" default_value="Arms" custom_choice="0" tooltip="Body part which avoids the collision." id="5">
                                                        <Choice value="Arms" />
                                                        <Choice value="LArm" />
                                                        <Choice value="RArm" />
                                                      </Parameter>
                                                    </Box>
                                                    <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                  </Diagram>
                                                </BehaviorKeyframe>
                                              </BehaviorLayer>
                                              <ActuatorList model="nao">
                                                <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                                  <Key frame="10" value="-1.40867" />
                                                  <Key frame="20" value="-2.73208e-05" />
                                                  <Key frame="28" value="2.37067" />
                                                  <Key frame="36" value="3.86374e-05" />
                                                  <Key frame="44" value="-0.353971" />
                                                  <Key frame="50" value="0.788621" />
                                                  <Key frame="56" value="1.40386" />
                                                  <Key frame="62" value="-1.32078" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="3.60116" />
                                                  <Key frame="20" value="0" />
                                                  <Key frame="28" value="29.5016" />
                                                  <Key frame="36" value="-38.5028" />
                                                  <Key frame="44" value="-1.23289" />
                                                  <Key frame="50" value="11.1598" />
                                                  <Key frame="56" value="4.2164" />
                                                  <Key frame="62" value="-2.02391" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="119.496" />
                                                  <Key frame="20" value="120" />
                                                  <Key frame="26" value="111.889" />
                                                  <Key frame="36" value="119.496" />
                                                  <Key frame="44" value="119.5" />
                                                  <Key frame="50" value="109.955" />
                                                  <Key frame="56" value="59.4172" />
                                                  <Key frame="59" value="41.8" />
                                                  <Key frame="62" value="53.0011" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="61.5266" />
                                                  <Key frame="20" value="21" />
                                                  <Key frame="26" value="20" />
                                                  <Key frame="36" value="20" />
                                                  <Key frame="44" value="23.5" />
                                                  <Key frame="50" value="51.507" />
                                                  <Key frame="56" value="42.4541" />
                                                  <Key frame="62" value="13.8893" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                                  <Key frame="10" value="-43.8556" />
                                                  <Key frame="20" value="9" />
                                                  <Key frame="26" value="14.7682" />
                                                  <Key frame="36" value="5" />
                                                  <Key frame="44" value="3.78175" />
                                                  <Key frame="50" value="-90.3503" />
                                                  <Key frame="56" value="-61.1702" />
                                                  <Key frame="62" value="-30.0566" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="-40.6963" />
                                                  <Key frame="20" value="0" />
                                                  <Key frame="26" value="-88.5" />
                                                  <Key frame="36" value="-89.5017" />
                                                  <Key frame="44" value="-40.9" />
                                                  <Key frame="46" value="-60.4" />
                                                  <Key frame="50" value="-54.8468" />
                                                  <Key frame="56" value="-65.6575" />
                                                  <Key frame="62" value="-72.7768" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                                  <Key frame="10" value="-66.0043" />
                                                  <Key frame="26" value="-98.8758" />
                                                  <Key frame="44" value="-63.6312" />
                                                  <Key frame="50" value="-14.1482" />
                                                  <Key frame="62" value="3.2544" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                                  <Key frame="10" value="0" />
                                                  <Key frame="20" value="0" />
                                                  <Key frame="26" value="0.0182082" />
                                                  <Key frame="44" value="0.00293558" />
                                                  <Key frame="50" value="0.126571" />
                                                  <Key frame="62" value="0.2996" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="119.496" />
                                                  <Key frame="20" value="120" />
                                                  <Key frame="26" value="116.806" />
                                                  <Key frame="36" value="119.496" />
                                                  <Key frame="44" value="119.5" />
                                                  <Key frame="50" value="74.9692" />
                                                  <Key frame="56" value="51.7658" />
                                                  <Key frame="59" value="40.3" />
                                                  <Key frame="62" value="51.6779" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="-56.1604" />
                                                  <Key frame="20" value="-21" />
                                                  <Key frame="26" value="-20" />
                                                  <Key frame="36" value="-20" />
                                                  <Key frame="44" value="-23" />
                                                  <Key frame="50" value="-67.1469" />
                                                  <Key frame="56" value="-22.7616" />
                                                  <Key frame="62" value="-12.3903" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                                  <Key frame="10" value="43.5967" />
                                                  <Key frame="20" value="-9" />
                                                  <Key frame="26" value="-7.02893" />
                                                  <Key frame="36" value="-5" />
                                                  <Key frame="44" value="-3.42537" />
                                                  <Key frame="50" value="54.6711" />
                                                  <Key frame="56" value="55.1984" />
                                                  <Key frame="62" value="25.1394" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="35.7695" />
                                                  <Key frame="20" value="0" />
                                                  <Key frame="26" value="88.5" />
                                                  <Key frame="36" value="89.5017" />
                                                  <Key frame="44" value="50.1" />
                                                  <Key frame="46" value="59.3" />
                                                  <Key frame="50" value="38.9336" />
                                                  <Key frame="56" value="64.3343" />
                                                  <Key frame="62" value="70.7504" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                                  <Key frame="10" value="40.4326" />
                                                  <Key frame="26" value="102.484" />
                                                  <Key frame="44" value="41.2236" />
                                                  <Key frame="50" value="2.72705" />
                                                  <Key frame="62" value="-3.42537" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                                  <Key frame="10" value="0.0502082" />
                                                  <Key frame="26" value="0.0763898" />
                                                  <Key frame="44" value="0.0905716" />
                                                  <Key frame="50" value="0.0127537" />
                                                  <Key frame="62" value="0.3004" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="-26.9804" />
                                                  <Key frame="20" value="0" />
                                                  <Key frame="31" value="0.441863" />
                                                  <Key frame="36" value="-2.73208e-05" />
                                                  <Key frame="44" value="-37.5274" />
                                                  <Key frame="50" value="-40.34" />
                                                  <Key frame="62" value="-35.418" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="8.52309" />
                                                  <Key frame="20" value="0" />
                                                  <Key frame="31" value="1.31597" />
                                                  <Key frame="36" value="0" />
                                                  <Key frame="44" value="-3.51807" />
                                                  <Key frame="50" value="6.98985" />
                                                  <Key frame="62" value="15.3786" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="10.6325" />
                                                  <Key frame="20" value="-10" />
                                                  <Key frame="31" value="16.1697" />
                                                  <Key frame="36" value="-10" />
                                                  <Key frame="44" value="-66.7122" />
                                                  <Key frame="50" value="-90" />
                                                  <Key frame="62" value="-91.234" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                                  <Key frame="10" value="10.9889" />
                                                  <Key frame="20" value="96" />
                                                  <Key frame="31" value="116.107" />
                                                  <Key frame="36" value="96" />
                                                  <Key frame="44" value="62.7571" />
                                                  <Key frame="50" value="78.8859" />
                                                  <Key frame="62" value="80.687" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                                  <Key frame="10" value="26.7215" />
                                                  <Key frame="20" value="14" />
                                                  <Key frame="31" value="-21.4432" />
                                                  <Key frame="36" value="14" />
                                                  <Key frame="44" value="41.1357" />
                                                  <Key frame="50" value="44.1094" />
                                                  <Key frame="62" value="48.6944" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="-9.5826" />
                                                  <Key frame="20" value="-4.94951e-06" />
                                                  <Key frame="31" value="2.28278" />
                                                  <Key frame="36" value="-4.94951e-06" />
                                                  <Key frame="44" value="8.25942" />
                                                  <Key frame="50" value="6.87076" />
                                                  <Key frame="62" value="-1.0571" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="-2.55126" />
                                                  <Key frame="20" value="-8.991e-06" />
                                                  <Key frame="31" value="-3.34229" />
                                                  <Key frame="36" value="-8.991e-06" />
                                                  <Key frame="44" value="3.68905" />
                                                  <Key frame="50" value="-8.06912" />
                                                  <Key frame="62" value="-15.9987" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="14.3288" />
                                                  <Key frame="20" value="-10" />
                                                  <Key frame="31" value="21.448" />
                                                  <Key frame="36" value="-10" />
                                                  <Key frame="44" value="-67.4984" />
                                                  <Key frame="50" value="-90" />
                                                  <Key frame="62" value="-90.5261" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                                  <Key frame="10" value="5.2711" />
                                                  <Key frame="20" value="96" />
                                                  <Key frame="31" value="115.751" />
                                                  <Key frame="36" value="96" />
                                                  <Key frame="44" value="61.6976" />
                                                  <Key frame="50" value="80.3062" />
                                                  <Key frame="62" value="79.9791" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                                  <Key frame="10" value="47.2833" />
                                                  <Key frame="20" value="14" />
                                                  <Key frame="31" value="-26.0184" />
                                                  <Key frame="36" value="14" />
                                                  <Key frame="44" value="38.8457" />
                                                  <Key frame="50" value="44.4668" />
                                                  <Key frame="62" value="47.8986" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="1.93121" />
                                                  <Key frame="20" value="0" />
                                                  <Key frame="31" value="1.93121" />
                                                  <Key frame="36" value="0" />
                                                  <Key frame="44" value="-9.75839" />
                                                  <Key frame="50" value="-5.20441" />
                                                  <Key frame="62" value="0.524946" />
                                                </ActuatorCurve>
                                              </ActuatorList>
                                            </Timeline>
                                          </Box>
                                          <Box name="SideToBelly" id="6" localization="8" tooltip="Lie down on the back or the belly from an other lie down position (on the side)." x="513" y="538">
                                            <bitmap>media/images/box/movement/move.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		""

	def onInput_onStop(self):
		""]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="10">
                                              <ActuatorList model="nao">
                                                <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                                  <Key frame="5" value="41.3067" />
                                                  <Key frame="10" value="41.3067" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                                  <Key frame="5" value="8.52309" />
                                                  <Key frame="10" value="8.52309" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                                  <Key frame="5" value="113.383" />
                                                  <Key frame="10" value="113.383" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                                  <Key frame="5" value="44.6514" />
                                                  <Key frame="10" value="44.6514" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                                  <Key frame="5" value="-52.9084" />
                                                  <Key frame="10" value="-52.9084" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                                  <Key frame="5" value="-19.5144" />
                                                  <Key frame="10" value="-19.5144" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                                  <Key frame="5" value="-37" />
                                                  <Key frame="10" value="-37" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                                  <Key frame="5" value="0.146571" />
                                                  <Key frame="10" value="0.146571" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                                  <Key frame="5" value="108.72" />
                                                  <Key frame="10" value="108.72" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                                  <Key frame="5" value="-45.965" />
                                                  <Key frame="10" value="-45.965" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                                  <Key frame="5" value="56.8684" />
                                                  <Key frame="10" value="56.8684" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                                  <Key frame="5" value="26.8046" />
                                                  <Key frame="10" value="26.8046" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                                  <Key frame="5" value="38.8505" />
                                                  <Key frame="10" value="38.8505" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                                  <Key frame="5" value="0.200389" />
                                                  <Key frame="10" value="0.200389" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                                  <Key frame="5" value="-65.5648" />
                                                  <Key frame="10" value="-65.5648" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                                  <Key frame="5" value="1.75543" />
                                                  <Key frame="10" value="1.75543" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                                  <Key frame="5" value="23.8163" />
                                                  <Key frame="10" value="23.8163" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                                  <Key frame="5" value="-5.2711" />
                                                  <Key frame="10" value="-5.2711" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                                  <Key frame="5" value="29.9735" />
                                                  <Key frame="10" value="29.9735" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                                  <Key frame="5" value="3.86483" />
                                                  <Key frame="10" value="3.86483" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                                  <Key frame="5" value="-14.4166" />
                                                  <Key frame="10" value="-14.4166" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                                  <Key frame="5" value="2.02391" />
                                                  <Key frame="10" value="2.02391" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                                  <Key frame="5" value="-5.27591" />
                                                  <Key frame="10" value="-5.27591" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                                  <Key frame="5" value="20.3885" />
                                                  <Key frame="10" value="20.3885" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                                  <Key frame="5" value="-19.6902" />
                                                  <Key frame="10" value="-19.6902" />
                                                </ActuatorCurve>
                                              </ActuatorList>
                                            </Timeline>
                                          </Box>
                                          <Box name="Switch Case" id="9" localization="8" tooltip="Test input value and stimulate the output matching to this value. If there is no&#x0A;output matching, the default output (onDefault) is stimulated.&#x0A;&#x0A;You can edit a case by left double-clicking on the line. You can add a&#x0A;case by right clicking on a line and selecting &apos;Insert a row&apos;. You can delete&#x0A;a case by right clicking on a line and selecting &apos;Remove a row&apos;." plugin="dispatcher_plugin" x="261" y="101">
                                            <bitmap>media/images/box/interaction/choice.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion("Back")):
			self.output_1(p)
		elif(p == self.typeConversion("Stand")):
			self.output_2(p)
		elif(p == self.typeConversion("Crouch")):
			self.output_3(p)
		elif(p == self.typeConversion("Knee")):
			self.output_4(p)
		elif(p == self.typeConversion("Frog")):
			self.output_5(p)
		elif(p == self.typeConversion("Belly")):
			self.output_6(p)
		elif(p == self.typeConversion("Left")):
			self.output_7(p)
		elif(p == self.typeConversion("Right")):
			self.output_8(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]>
                                              </content>
                                            </script>
                                            <pluginContent>
                                              <keywords>
                                                <keyword>&quot;Back&quot;</keyword>
                                                <keyword>&quot;Stand&quot;</keyword>
                                                <keyword>&quot;Crouch&quot;</keyword>
                                                <keyword>&quot;Knee&quot;</keyword>
                                                <keyword>&quot;Frog&quot;</keyword>
                                                <keyword>&quot;Belly&quot;</keyword>
                                                <keyword>&quot;Left&quot;</keyword>
                                                <keyword>&quot;Right&quot;</keyword>
                                                <keyword></keyword>
                                              </keywords>
                                            </pluginContent>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Value to test." id="2" />
                                            <Output name="onDefault" type="1" type_size="1" nature="1" inner="0" tooltip="If the input value does not match any value set on the box." id="3" />
                                            <Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="4" />
                                            <Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="5" />
                                            <Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="6" />
                                            <Output name="output_4" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="7" />
                                            <Output name="output_5" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="8" />
                                            <Output name="output_6" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="9" />
                                            <Output name="output_7" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="10" />
                                            <Output name="output_8" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="11" />
                                          </Box>
                                          <Box name="Switch Case" id="1" localization="8" tooltip="Test input value and stimulate the output matching to this value. If there is no&#x0A;output matching, the default output (onDefault) is stimulated.&#x0A;&#x0A;You can edit a case by left double-clicking on the line. You can add a&#x0A;case by right clicking on a line and selecting &apos;Insert a row&apos;. You can delete&#x0A;a case by right clicking on a line and selecting &apos;Remove a row&apos;." plugin="dispatcher_plugin" x="795" y="538">
                                            <bitmap>media/images/box/interaction/choice.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion("Belly")):
			self.output_1(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]>
                                              </content>
                                            </script>
                                            <pluginContent>
                                              <keywords>
                                                <keyword>&quot;Belly&quot;</keyword>
                                                <keyword></keyword>
                                              </keywords>
                                            </pluginContent>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Value to test." id="2" />
                                            <Output name="onDefault" type="1" type_size="1" nature="1" inner="0" tooltip="If the input value does not match any value set on the box." id="3" />
                                            <Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="4" />
                                          </Box>
                                          <Box name="Switch Case" id="4" localization="8" tooltip="Test input value and stimulate the output matching to this value. If there is no&#x0A;output matching, the default output (onDefault) is stimulated.&#x0A;&#x0A;You can edit a case by left double-clicking on the line. You can add a&#x0A;case by right clicking on a line and selecting &apos;Insert a row&apos;. You can delete&#x0A;a case by right clicking on a line and selecting &apos;Remove a row&apos;." plugin="dispatcher_plugin" x="977" y="378">
                                            <bitmap>media/images/box/interaction/choice.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion("Crouch")):
			self.output_1(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]>
                                              </content>
                                            </script>
                                            <pluginContent>
                                              <keywords>
                                                <keyword>&quot;Crouch&quot;</keyword>
                                                <keyword></keyword>
                                              </keywords>
                                            </pluginContent>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Value to test." id="2" />
                                            <Output name="onDefault" type="1" type_size="1" nature="1" inner="0" tooltip="If the input value does not match any value set on the box." id="3" />
                                            <Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="4" />
                                          </Box>
                                          <Box name="Get Robot Pose" id="5" localization="8" tooltip="Return NAO&apos;s current pose.&#x0A;&#x0A;Note: The box waits for the robot pose to be stabilized. You can set the maximum&#x0A;time to wait in parameters. After this time is ellapsed, the current pose is sent to the&#x0A;output anyway." x="656" y="542">
                                            <bitmap>media/images/box/sensors/inertial_unit.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.robotPoseProxy = ALProxy("ALRobotPosture")
        self.threadTime = 0.1 #seconds

    def onLoad(self):
        self.bIsRunning = False
        self.bMustStop = False

    def onUnload(self):
        self.bMustStop = True

    def onInput_onStart(self):
        if( self.bIsRunning ):
            return
        self.bIsRunning = True
        self.bMustStop = False
        beginTime = time.time()
        RobotPoseAndTime = ["Unknown", 0.]
        while( not self.bMustStop ):
            RobotPoseAndTime = self.robotPoseProxy.getActualPoseAndTime()
            # as soon as the robot is not moving anymore from its position, give its position
            if( RobotPoseAndTime[1] > 0.5 or time.time() - beginTime > self.getParameter("Time to wait for pose stabilization (s)") ):
                self.bMustStop = True
            if( not self.bMustStop ):
                time.sleep(self.threadTime)
        self.robotPose(RobotPoseAndTime[0])
        self.bIsRunning = False]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Output name="robotPose" type="3" type_size="1" nature="2" inner="0" tooltip='NAO&apos;s current pose. It can be:&#x0A;- &quot;Unknown&quot;&#x0A;- &quot;Stand&quot;&#x0A;- &quot;Sit&quot;&#x0A;- &quot;Crouch&quot;&#x0A;- &quot;Knee&quot;&#x0A;- &quot;Frog&quot;&#x0A;- &quot;Back&quot;&#x0A;- &quot;Belly&quot;&#x0A;- &quot;Left&quot;&#x0A;- &quot;Right&quot;&#x0A;- &quot;HeadBack&quot;' id="3" />
                                            <Parameter name="Time to wait for pose stabilization (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0.5" max="10" tooltip="Maximum time to wait NAO&apos;s pose stabilization. After this time is ellapsed,&#x0A;the current pose is sent to the output even though it is not stabilized." id="4" />
                                          </Box>
                                          <Box name="Get Robot Pose" id="2" localization="8" tooltip="Return NAO&apos;s current pose.&#x0A;&#x0A;Note: The box waits for the robot pose to be stabilized. You can set the maximum&#x0A;time to wait in parameters. After this time is ellapsed, the current pose is sent to the&#x0A;output anyway." x="845" y="378">
                                            <bitmap>media/images/box/sensors/inertial_unit.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.robotPoseProxy = ALProxy("ALRobotPosture")
        self.threadTime = 0.1 #seconds

    def onLoad(self):
        self.bIsRunning = False
        self.bMustStop = False

    def onUnload(self):
        self.bMustStop = True

    def onInput_onStart(self):
        if( self.bIsRunning ):
            return
        self.bIsRunning = True
        self.bMustStop = False
        beginTime = time.time()
        RobotPoseAndTime = ["Unknown", 0.]
        while( not self.bMustStop ):
            RobotPoseAndTime = self.robotPoseProxy.getActualPoseAndTime()
            # as soon as the robot is not moving anymore from its position, give its position
            if( RobotPoseAndTime[1] > 0.5 or time.time() - beginTime > self.getParameter("Time to wait for pose stabilization (s)") ):
                self.bMustStop = True
            if( not self.bMustStop ):
                time.sleep(self.threadTime)
        self.robotPose(RobotPoseAndTime[0])
        self.bIsRunning = False]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Output name="robotPose" type="3" type_size="1" nature="2" inner="0" tooltip='NAO&apos;s current pose. It can be:&#x0A;- &quot;Unknown&quot;&#x0A;- &quot;Stand&quot;&#x0A;- &quot;Sit&quot;&#x0A;- &quot;Crouch&quot;&#x0A;- &quot;Knee&quot;&#x0A;- &quot;Frog&quot;&#x0A;- &quot;Back&quot;&#x0A;- &quot;Belly&quot;&#x0A;- &quot;Left&quot;&#x0A;- &quot;Right&quot;&#x0A;- &quot;HeadBack&quot;' id="3" />
                                            <Parameter name="Time to wait for pose stabilization (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0.5" max="10" tooltip="Maximum time to wait NAO&apos;s pose stabilization. After this time is ellapsed,&#x0A;the current pose is sent to the output even though it is not stabilized." id="4" />
                                          </Box>
                                          <Box name="Get Robot Pose" id="3" localization="8" tooltip="Return NAO&apos;s current pose.&#x0A;&#x0A;Note: The box waits for the robot pose to be stabilized. You can set the maximum&#x0A;time to wait in parameters. After this time is ellapsed, the current pose is sent to the&#x0A;output anyway." x="104" y="49">
                                            <bitmap>media/images/box/sensors/inertial_unit.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.robotPoseProxy = ALProxy("ALRobotPosture")
        self.threadTime = 0.1 #seconds

    def onLoad(self):
        self.bIsRunning = False
        self.bMustStop = False

    def onUnload(self):
        self.bMustStop = True

    def onInput_onStart(self):
        if( self.bIsRunning ):
            return
        self.bIsRunning = True
        self.bMustStop = False
        beginTime = time.time()
        RobotPoseAndTime = ["Unknown", 0.]
        while( not self.bMustStop ):
            RobotPoseAndTime = self.robotPoseProxy.getActualPoseAndTime()
            # as soon as the robot is not moving anymore from its position, give its position
            if( RobotPoseAndTime[1] > 0.5 or time.time() - beginTime > self.getParameter("Time to wait for pose stabilization (s)") ):
                self.bMustStop = True
            if( not self.bMustStop ):
                time.sleep(self.threadTime)
        self.robotPose(RobotPoseAndTime[0])
        self.bIsRunning = False]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Output name="robotPose" type="3" type_size="1" nature="2" inner="0" tooltip='NAO&apos;s current pose. It can be:&#x0A;- &quot;Unknown&quot;&#x0A;- &quot;Stand&quot;&#x0A;- &quot;Sit&quot;&#x0A;- &quot;Crouch&quot;&#x0A;- &quot;Knee&quot;&#x0A;- &quot;Frog&quot;&#x0A;- &quot;Back&quot;&#x0A;- &quot;Belly&quot;&#x0A;- &quot;Left&quot;&#x0A;- &quot;Right&quot;&#x0A;- &quot;HeadBack&quot;' id="3" />
                                            <Parameter name="Time to wait for pose stabilization (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0.5" max="10" tooltip="Maximum time to wait NAO&apos;s pose stabilization. After this time is ellapsed,&#x0A;the current pose is sent to the output even though it is not stabilized." id="4" />
                                          </Box>
                                          <Box name="Relax Motors" id="7" localization="8" tooltip="Relax motors for a while for a better electric current consumption.&#x0A;&#x0A;!!Warning!! This box must be applied only after a Sit Down. In other positions NAO&#x0A;could fall." x="1087" y="131">
                                            <bitmap>media/images/box/movement/stiffness.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        # WARNING: This should only be called when sitting and its
        # behavior may change in future version. The aim of the method
        # is to reduce battery usage when motors are stiff while sitting.
        try:
            ALMotion._relaxMotorsWhenSitting()
        except:
            pass
        self.onStopped()]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                          </Box>
                                          <Link inputowner="11" indexofinput="2" outputowner="9" indexofoutput="6" />
                                          <Link inputowner="12" indexofinput="2" outputowner="9" indexofoutput="8" />
                                          <Link inputowner="12" indexofinput="2" outputowner="9" indexofoutput="9" />
                                          <Link inputowner="6" indexofinput="2" outputowner="9" indexofoutput="11" />
                                          <Link inputowner="14" indexofinput="2" outputowner="9" indexofoutput="4" />
                                          <Link inputowner="11" indexofinput="2" outputowner="9" indexofoutput="5" />
                                          <Link inputowner="12" indexofinput="2" outputowner="9" indexofoutput="7" />
                                          <Link inputowner="6" indexofinput="2" outputowner="9" indexofoutput="10" />
                                          <Link inputowner="0" indexofinput="4" outputowner="9" indexofoutput="3" />
                                          <Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="3" />
                                          <Link inputowner="12" indexofinput="2" outputowner="1" indexofoutput="4" />
                                          <Link inputowner="11" indexofinput="2" outputowner="4" indexofoutput="4" />
                                          <Link inputowner="0" indexofinput="4" outputowner="4" indexofoutput="3" />
                                          <Link inputowner="5" indexofinput="2" outputowner="6" indexofoutput="4" />
                                          <Link inputowner="1" indexofinput="2" outputowner="5" indexofoutput="3" />
                                          <Link inputowner="2" indexofinput="2" outputowner="12" indexofoutput="4" />
                                          <Link inputowner="4" indexofinput="2" outputowner="2" indexofoutput="3" />
                                          <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="2" />
                                          <Link inputowner="9" indexofinput="2" outputowner="3" indexofoutput="3" />
                                          <Link inputowner="7" indexofinput="2" outputowner="14" indexofoutput="4" />
                                          <Link inputowner="7" indexofinput="2" outputowner="11" indexofoutput="4" />
                                          <Link inputowner="0" indexofinput="4" outputowner="7" indexofoutput="3" />
                                        </Diagram>
                                      </BehaviorKeyframe>
                                    </BehaviorLayer>
                                  </Timeline>
                                </Box>
                                <Box name="Side" id="6" localization="8" tooltip='Stimulates the rightOutput or the leftOutput output depending on the side&#x0A;parameter. If it is set to &quot;Random&quot; then the side is chosen randomly.' x="451" y="468">
                                  <bitmap>media/images/box/movement/move_arm.png</bitmap>
                                  <bitmap>media/images/box/movement/move_leftarm.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import random

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        side = self.getParameter("Side")
        if( side == "Random" ):
            side = random.choice( ["Left", "Right"] )
        if( side == "Left" ):
            self.leftOutput()
        else:
            self.rightOutput()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip='When this input is stimulated the output corresponding to the side set in&#x0A;parameters is stimulated. If the side parameter is set to &quot;Random&quot; then the&#x0A;side is chosen randomly.' id="2" />
                                  <Output name="rightOutput" type="1" type_size="1" nature="2" inner="0" tooltip="The output corresponding to the right." id="3" />
                                  <Output name="leftOutput" type="1" type_size="1" nature="2" inner="0" tooltip="The output corresponding to the left." id="4" />
                                  <Parameter name="Side" inherits_from_parent="1" content_type="3" value="Random" default_value="Random" custom_choice="0" tooltip='Side chosen. If set to &quot;Random&quot; the side is chosen randomly.' id="5">
                                    <Choice value="Left" />
                                    <Choice value="Random" />
                                    <Choice value="Right" />
                                  </Parameter>
                                </Box>
                                <Link inputowner="0" indexofinput="5" outputowner="9" indexofoutput="3" />
                                <Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="4" />
                                <Link inputowner="0" indexofinput="5" outputowner="1" indexofoutput="5" />
                                <Link inputowner="0" indexofinput="5" outputowner="1" indexofoutput="6" />
                                <Link inputowner="4" indexofinput="2" outputowner="0" indexofoutput="2" />
                                <Link inputowner="7" indexofinput="2" outputowner="1" indexofoutput="3" />
                                <Link inputowner="9" indexofinput="2" outputowner="7" indexofoutput="3" />
                                <Link inputowner="2" indexofinput="2" outputowner="4" indexofoutput="3" />
                                <Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="3" />
                                <Link inputowner="2" indexofinput="2" outputowner="13" indexofoutput="4" />
                                <Link inputowner="13" indexofinput="2" outputowner="6" indexofoutput="3" />
                                <Link inputowner="2" indexofinput="2" outputowner="3" indexofoutput="4" />
                                <Link inputowner="3" indexofinput="2" outputowner="6" indexofoutput="4" />
                                <Link inputowner="6" indexofinput="2" outputowner="9" indexofoutput="4" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                        <Resource name="All motors" type="Lock" timeout="0" />
                      </Box>
                      <Box name="Wait" id="34" localization="8" tooltip="Wait a moment before sending a signal on the output. The wait can be stopped any&#x0A;time. You may restart it any time, and it will start again." x="966" y="221">
                        <bitmap>media/images/box/wait.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import threading

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.tb = False

    def onUnload(self):
        if( self.tb ):
            self.tb.cancel()
            self.tb = False

    def triggerOutput( self, rPeriod = 1 ):
        self.onUnload() # to clean everything
        self.timerOutput()

    def startTimer( self, rPeriod = 1 ):
        if( self.tb ):
            self.tb.cancel()
        self.tb = threading.Timer( rPeriod, self.triggerOutput, [rPeriod] )
        self.tb.start()

    def onInput_onStart(self):
        self.startTimer( self.getParameter("Timeout (s)") )

    def onInput_onStop(self):
        bRunning = self.tb
        self.onUnload()
        if( bRunning ):
            self.timerOutput()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                        <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is ellapsed, or if the box is stopped." id="4" />
                        <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="3" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
                      </Box>
                      <Box name="PosesForImages" id="25" localization="8" tooltip="Normal Pose/HeadLeft/HeadRight" x="57" y="112">
                        <bitmap>media/images/box/box-diagram.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="Pattern Images_onStart" type="0" type_size="1" nature="2" inner="0" tooltip="This input has been automatically generated&#x0A;by converting several boxes into a single box." id="2" />
                        <Output name="PatternImages_detectionGood" type="0" type_size="1" nature="2" inner="0" tooltip="This output has been automatically generated&#x0A;by converting several boxes into a single box." id="3" />
                        <Timeline enable="0">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram scale="66.742">
                                <Box name="Pattern Images" id="11" localization="8" tooltip="Enter tooltip here" x="253" y="94">
                                  <bitmap>media/images/box/box-diagram.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import Image
import ImageDraw
import time
import os,sys
import cv2 as cv
import numpy as np
IP_ADDRESS = '192.168.1.28'
PORT=9559
class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):

        flag = self.showNaoImage()
        if (flag == 1):
            global imNum
            imNum = imNum+1
            self.detectionGood()
            self.onUnload()
            #self.onStopped()
        else:
            self.detectionFailure()
            self.onUnload()
            #self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        #self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass

    def sayWord(self,s):
        ttsProxy=ALProxy("ALTextToSpeech")
        ttsProxy.say(s)


    def showNaoImage(self):

        camProxy = ALProxy("ALVideoDevice")
        #,IP_ADDRESS,PORT)
        resolution = 2    # VGA
        colorSpace = 11   # RGB
        found = 0

        videoClient = camProxy.subscribe("python_client", resolution, colorSpace, 5)

        t0 = time.time()
        self.sayWord("I am here")
        naoImage = camProxy.getImageRemote(videoClient)
        assert naoImage
        # Get the image size and pixel array.
        imageWidth = naoImage[0]
        self.sayWord("First size received")
        imageHeight = naoImage[1]
        self.sayWord("Size received")
        array = naoImage[6]
        self.sayWord("I have detected image")
        # Create a PIL Image from our pixel array.
        im = Image.frombytes("RGB", (imageWidth, imageHeight), array)
        #CODE THAT WAS PREVIOUSLY
        # Create ipl Image to use with opencv
        #width and height might be confused
     #cv_img = cv.CreateImageHeader(im.size, #cv.IPL_DEPTH_8U, 3)  # RGB image
        #cv.SetData(cv_img, im.tostring(), im.size[0]*3)
        #cv.cvtColor(cv_img, cv_img, cv.CV_RGB2BGR)
        cv_img = np.array(im)
        self.sayWord("Image transformed no numpy")
        cv_img = cv.cvtColor(cv_img,cv.COLOR_RGB2BGR)
        self.sayWord("Image inverted")
        gray_image = cv.cvtColor(cv_img,cv.COLOR_BGR2GRAY)
        self.sayWord("Image is gray")

        (found,corners)=cv.FindChessboardCorners(gray_image,(7,5),cv.CV_CALIB_CB_ADAPTIVE_THRESH| cv.CV_CALIB_CB_FILTER_QUADS)
        self.sayWord("Corner processing finished")
        if found == 1:

            self.sayWord("Corners Detected")

            self.sayWord("Saving Image")

        else:

            self.sayWord("Corners can not be detected")

            flag = 0
            camProxy.unsubscribe(videoClient)
            return flag


        t1 = time.time()

        # Time the image transfer.
        self.logger.info("acquisition delay "+str(t1 - t0))

        camProxy.unsubscribe(videoClient)


        self.logger.info(str(imNum))
        self.sayWord("Saving")
        # Save the image.
        imName = "image"+str(imNum)+".jpg"
        im.save("/home/nao/SavedImages/"+imName)
        self.sayWord("Image"+str(imNum)+"Saved")

        flag = 1

        return flag]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="detectionFailure" type="1" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                  <Output name="detectionGood" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                </Box>
                                <Box name="Say" id="2" localization="8" tooltip="Say some text. Note that you must open the box to enter the text." x="490" y="153">
                                  <bitmap>media/images/box/interaction/say.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                  <Parameter name="Voice shaping (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean.' id="5" />
                                  <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean." id="6" />
                                  <Timeline enable="0">
                                    <BehaviorLayer name="behavior_layer1">
                                      <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                          <Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="422" y="65">
                                            <bitmap>media/images/box/interaction/say.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                            <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                            <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                            <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                          </Box>
                                          <Box name="Localized Text" id="5" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="114" y="68">
                                            <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.sentences = {
			"Chinese" : " 你好 ",
			"English" : " Changing position ",
			"French" : " Bonjour ",
			"German" : " Hallo ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요  ",
			"Portuguese" : " Olá ",
			"Spanish" : " Hola ",
		}

	def onLoad(self):
		self.tts = self.session().service("ALTextToSpeech")

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
                                              </content>
                                            </script>
                                            <pluginContent>
                                              <chinese uiName="‎普通话 (Mandarin Chinese)" languageName="Chinese">
                                                <![CDATA[你好]]>
                                              </chinese>
                                              <english uiName="‎American English (American English)" languageName="English">
                                                <![CDATA[Changing position]]>
                                              </english>
                                              <french uiName="‎Français (French)" languageName="French">
                                                <![CDATA[Bonjour]]>
                                              </french>
                                              <german uiName="‎Deutsch (German)" languageName="German">
                                                <![CDATA[Hallo]]>
                                              </german>
                                              <italian uiName="‎Italiano (Italian)" languageName="Italian">
                                                <![CDATA[Ciao]]>
                                              </italian>
                                              <japanese uiName="‎日本語 (Japanese)" languageName="Japanese">
                                                <![CDATA[こんにちは]]>
                                              </japanese>
                                              <korean uiName="‎한국어 (Korean)" languageName="Korean">
                                                <![CDATA[안녕하세요 ]]>
                                              </korean>
                                              <portuguese uiName="‎Português (Portuguese)" languageName="Portuguese">
                                                <![CDATA[Olá]]>
                                              </portuguese>
                                              <spanish uiName="‎Español (Spanish)" languageName="Spanish">
                                                <![CDATA[Hola]]>
                                              </spanish>
                                              <language>english</language>
                                            </pluginContent>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                            <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                          </Box>
                                          <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                          <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" />
                                          <Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" />
                                        </Diagram>
                                      </BehaviorKeyframe>
                                    </BehaviorLayer>
                                  </Timeline>
                                </Box>
                                <Link inputowner="11" indexofinput="2" outputowner="0" indexofoutput="2" />
                                <Link inputowner="0" indexofinput="3" outputowner="11" indexofoutput="5" />
                                <Link inputowner="2" indexofinput="2" outputowner="11" indexofoutput="4" />
                                <Link inputowner="0" indexofinput="3" outputowner="2" indexofoutput="4" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                      </Box>
                      <Box name="PosesForImages" id="21" localization="8" tooltip="Normal Pose/HeadLeft/HeadRight" x="423" y="312">
                        <bitmap>media/images/box/box-diagram.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="Pattern Images_onStart" type="0" type_size="1" nature="2" inner="0" tooltip="This input has been automatically generated&#x0A;by converting several boxes into a single box." id="2" />
                        <Output name="PatternImages_detectionGood" type="0" type_size="1" nature="2" inner="0" tooltip="This output has been automatically generated&#x0A;by converting several boxes into a single box." id="3" />
                        <Timeline enable="0">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram>
                                <Box name="Pattern Images" id="11" localization="8" tooltip="Enter tooltip here" x="196" y="93">
                                  <bitmap>media/images/box/box-diagram.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import Image
import ImageDraw
import time
import os,sys
import cv2 as cv

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):

        flag = self.showNaoImage()
        if (flag == 1):
            global imNum
            imNum = imNum+1
            self.detectionGood()
            self.onUnload()
            #self.onStopped()
        else:
            self.detectionFailure()
            self.onUnload()
            #self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        #self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass

    def sayWord(self,s):
        ttsProxy=ALProxy("ALTextToSpeech")
        ttsProxy.say(s)


    def showNaoImage(self):

        camProxy = ALProxy("ALVideoDevice")
        resolution = 2    # VGA
        colorSpace = 11   # RGB
        found = 0

        videoClient = camProxy.subscribe("python_client", resolution, colorSpace, 5)

        t0 = time.time()

        naoImage = camProxy.getImageRemote(videoClient)

        # Get the image size and pixel array.
        imageWidth = naoImage[0]
        imageHeight = naoImage[1]
        array = naoImage[6]

        # Create a PIL Image from our pixel array.
        im = Image.fromstring("RGB", (imageWidth, imageHeight), array)

        # Create ipl Image to use with opencv
        cv_img = cv.CreateImageHeader(im.size, cv.IPL_DEPTH_8U, 3)  # RGB image
        cv.SetData(cv_img, im.tostring(), im.size[0]*3)
        cv.CvtColor(cv_img, cv_img, cv.CV_RGB2BGR)

        gray_image=cv.CreateImage(cv.GetSize(cv_img),8,1)
        cv.CvtColor(cv_img,gray_image,cv.CV_BGR2GRAY)


        (found,corners)=cv.FindChessboardCorners(gray_image,(7,5),cv.CV_CALIB_CB_ADAPTIVE_THRESH| cv.CV_CALIB_CB_FILTER_QUADS)
        if found == 1:

            self.sayWord("Corners Detected")

            self.sayWord("Saving Image")

        else:

            self.sayWord("Corners can not be detected")

            flag = 0
            camProxy.unsubscribe(videoClient)
            return flag


        t1 = time.time()

        # Time the image transfer.
        self.logger.info("acquisition delay "+str(t1 - t0))

        camProxy.unsubscribe(videoClient)


        self.logger.info(str(imNum))

        # Save the image.
        imName = "image"+str(imNum)+".jpg"
        im.save("/home/nao/SavedImages/"+imName)
        self.sayWord("Image"+str(imNum)+"Saved")

        flag = 1

        return flag]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="detectionFailure" type="1" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                  <Output name="detectionGood" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                </Box>
                                <Box name="Say" id="2" localization="8" tooltip="Say some text. Note that you must open the box to enter the text." x="369" y="150">
                                  <bitmap>media/images/box/interaction/say.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                  <Parameter name="Voice shaping (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean.' id="5" />
                                  <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean." id="6" />
                                  <Timeline enable="0">
                                    <BehaviorLayer name="behavior_layer1">
                                      <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                          <Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="422" y="65">
                                            <bitmap>media/images/box/interaction/say.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                            <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                            <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                            <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                          </Box>
                                          <Box name="Localized Text" id="5" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="114" y="68">
                                            <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.sentences = {
			"Chinese" : " 你好 ",
			"English" : " Changing position ",
			"French" : " Bonjour ",
			"German" : " Hallo ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요  ",
			"Portuguese" : " Olá ",
			"Spanish" : " Hola ",
		}

	def onLoad(self):
		self.tts = self.session().service("ALTextToSpeech")

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
                                              </content>
                                            </script>
                                            <pluginContent>
                                              <chinese uiName="‎普通话 (Mandarin Chinese)" languageName="Chinese">
                                                <![CDATA[你好]]>
                                              </chinese>
                                              <english uiName="‎American English (American English)" languageName="English">
                                                <![CDATA[Changing position]]>
                                              </english>
                                              <french uiName="‎Français (French)" languageName="French">
                                                <![CDATA[Bonjour]]>
                                              </french>
                                              <german uiName="‎Deutsch (German)" languageName="German">
                                                <![CDATA[Hallo]]>
                                              </german>
                                              <italian uiName="‎Italiano (Italian)" languageName="Italian">
                                                <![CDATA[Ciao]]>
                                              </italian>
                                              <japanese uiName="‎日本語 (Japanese)" languageName="Japanese">
                                                <![CDATA[こんにちは]]>
                                              </japanese>
                                              <korean uiName="‎한국어 (Korean)" languageName="Korean">
                                                <![CDATA[안녕하세요 ]]>
                                              </korean>
                                              <portuguese uiName="‎Português (Portuguese)" languageName="Portuguese">
                                                <![CDATA[Olá]]>
                                              </portuguese>
                                              <spanish uiName="‎Español (Spanish)" languageName="Spanish">
                                                <![CDATA[Hola]]>
                                              </spanish>
                                              <language>english</language>
                                            </pluginContent>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                            <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                          </Box>
                                          <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                          <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" />
                                          <Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" />
                                        </Diagram>
                                      </BehaviorKeyframe>
                                    </BehaviorLayer>
                                  </Timeline>
                                </Box>
                                <Link inputowner="11" indexofinput="2" outputowner="0" indexofoutput="2" />
                                <Link inputowner="0" indexofinput="3" outputowner="11" indexofoutput="5" />
                                <Link inputowner="2" indexofinput="2" outputowner="11" indexofoutput="4" />
                                <Link inputowner="0" indexofinput="3" outputowner="2" indexofoutput="4" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                      </Box>
                      <Box name="Walk To" id="35" localization="8" tooltip="Make NAO walk to a configured point relative to its current location." x="436" y="505">
                        <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #~ self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        self.onStopped()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                        <Parameter name="Distance X (m)" inherits_from_parent="0" content_type="2" value="0.2" default_value="0.2" min="-2" max="2" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="5" />
                        <Parameter name="Distance Y (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-2" max="2" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="6" />
                        <Parameter name="Theta (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-3.14" max="3.14" tooltip="The orientation in radians for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="7" />
                        <Parameter name="Left arm enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate left arm motion during the walk to make it more realistic." id="8" />
                        <Parameter name="Right arm enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate right arm motion during the walk to make it more realistic." id="9" />
                        <Parameter name="Stop walk when foot contact is lost" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If this option is activated, NAO stops walking when he loses foot contact with&#x0A;the ground. Else, he just keeps walking." id="10" />
                        <Timeline enable="0">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram>
                                <Box name="Walk To Advanced" id="3" localization="8" tooltip="Make NAO walk to a configured point relative to his current location with specific gait parameters." x="195" y="73">
                                  <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.motion = ALProxy("ALMotion")
        footGaitConfigMin = self.motion.getFootGaitConfig("Min")
        footGaitConfigMax = self.motion.getFootGaitConfig("Max")
        self.dFootGaitConfig = {}
        for i in range(len(footGaitConfigMin)):
            # [0] = key ("MaxStepX" for ex)
            # [1] = min
            # [2] = max
            self.dFootGaitConfig[footGaitConfigMin[i][0]] = [footGaitConfigMin[i][1], footGaitConfigMax[i][1]]

    def onLoad(self):
        pass

    def onUnload(self):
        self.motion.setWalkTargetVelocity(0.0, 0.0, 0.0, 0.0)

    def onInput_onStart(self):
        # send walk configuration to ALMotion
        self.motion.setWalkArmsEnable(self.getParameter("Left arm enabled"), self.getParameter("Right arm enabled"))
        self.motion.setMotionConfig([["ENABLE_FOOT_CONTACT_PROTECTION",self.getParameter("Stop walk when foot contact is lost")]])
        for k, v in self.dFootGaitConfig.iteritems():
            for unit in ["m", "rad", "%"]:
                try: # try for each unit and do nothing if value in gaitConfig but not in parameters
                    param = self.getParameter( str(k) + " (" + unit + ")" )
                    if( unit == "%" ):
                        param = param / 100.
                    if( len(v) == 2 ):
                        v.append( param )
                    else:
                        v[2] = param
                    break
                except:
                    pass

        gaitConfig = []
        for k, v in self.dFootGaitConfig.iteritems():
            try:
                gaitConfig.append( [k, v[2]] )
            except: # if some value added in gaitConfig but not in parameters
                pass
        # active walk process
        self.motion.walkTo(self.getParameter("Distance X (m)"), self.getParameter("Distance Y (m)"), self.getParameter("Theta (rad)"), gaitConfig)
         # The walk is finished so output
        self.onStopped() #~ activate output of the box

    def onInput_onStop(self):
        self.onUnload()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                  <Parameter name="Distance X (m)" inherits_from_parent="1" content_type="2" value="0.1" default_value="0.2" min="-2" max="2" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="5" />
                                  <Parameter name="Distance Y (m)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-2" max="2" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="6" />
                                  <Parameter name="Theta (rad)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-3.14" max="3.14" tooltip="The orientation in radians for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="7" />
                                  <Parameter name="Left arm enabled" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="Activate left arm motion during the walk to make it more realistic." id="8" />
                                  <Parameter name="Right arm enabled" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="Activate right arm motion during the walk to make it more realistic." id="9" />
                                  <Parameter name="Stop walk when foot contact is lost" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="If this option is activated, NAO stops walking when he loses foot contact with&#x0A;the ground. Else, he just keeps walking." id="10" />
                                  <Parameter name="MaxStepX (m)" inherits_from_parent="0" content_type="2" value="0.022804" default_value="0.04" min="0.001" max="0.06" tooltip="Maximum length of forward/backward step." id="11" />
                                  <Parameter name="MaxStepY (m)" inherits_from_parent="0" content_type="2" value="0.126652" default_value="0.14" min="0.101" max="0.16" tooltip="Maximum length of lateral step." id="12" />
                                  <Parameter name="MaxStepTheta (rad)" inherits_from_parent="0" content_type="2" value="0.228217" default_value="0.349065" min="0.001" max="0.523598" tooltip="Maximum length of rotational step." id="13" />
                                  <Parameter name="MaxStepFrequency (%)" inherits_from_parent="0" content_type="1" value="49" default_value="100" min="0" max="100" tooltip="Maximum step frequency." id="14" />
                                  <Parameter name="StepHeight (m)" inherits_from_parent="0" content_type="2" value="0.02" default_value="0.02" min="0.005" max="0.04" tooltip="Height of the step i.e. how high NAO put his feet up during the walk." id="15" />
                                  <Parameter name="TorsoWx (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-0.122173" max="0.122173" tooltip="Lateral angle of the torso during the walk.&#x0A;&#x0A;Note: A positive value means that NAO will be tilted to the right. A negative&#x0A;value means he is tilted to the left." id="16" />
                                  <Parameter name="TorsoWy (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-0.122173" max="0.122173" tooltip="Angle of the torso toward forward/backward during the walk.&#x0A;&#x0A;Note: A positive value means that NAO will be inclined forward. A negative&#x0A;value means he is inclined backward." id="17" />
                                  <Resource name="Legs" type="Lock" timeout="0" />
                                </Box>
                                <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="2" />
                                <Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                        <Resource name="Legs" type="Lock" timeout="0" />
                      </Box>
                      <Box name="PosesForImages" id="24" localization="8" tooltip="Normal Pose/HeadLeft/HeadRight" x="976" y="336">
                        <bitmap>media/images/box/box-diagram.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="Pattern Images_onStart" type="0" type_size="1" nature="2" inner="0" tooltip="This input has been automatically generated&#x0A;by converting several boxes into a single box." id="2" />
                        <Output name="PatternImages_detectionGood" type="0" type_size="1" nature="2" inner="0" tooltip="This output has been automatically generated&#x0A;by converting several boxes into a single box." id="3" />
                        <Timeline enable="0">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram scale="66.742">
                                <Box name="Pattern Images" id="11" localization="8" tooltip="Enter tooltip here" x="86" y="245">
                                  <bitmap>media/images/box/box-diagram.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import Image
import ImageDraw
import time
import os,sys
import cv2 as cv

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):

        flag = self.showNaoImage()
        if (flag == 1):
            global imNum
            imNum = imNum+1
            self.detectionGood()
            self.onUnload()
            #self.onStopped()
        else:
            self.detectionFailure()
            self.onUnload()
            #self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        #self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass

    def sayWord(self,s):
        ttsProxy=ALProxy("ALTextToSpeech")
        ttsProxy.say(s)


    def showNaoImage(self):

        camProxy = ALProxy("ALVideoDevice")
        resolution = 2    # VGA
        colorSpace = 11   # RGB
        found = 0

        videoClient = camProxy.subscribe("python_client", resolution, colorSpace, 5)

        t0 = time.time()

        naoImage = camProxy.getImageRemote(videoClient)

        # Get the image size and pixel array.
        imageWidth = naoImage[0]
        imageHeight = naoImage[1]
        array = naoImage[6]

        # Create a PIL Image from our pixel array.
        im = Image.fromstring("RGB", (imageWidth, imageHeight), array)

        # Create ipl Image to use with opencv
        cv_img = cv.CreateImageHeader(im.size, cv.IPL_DEPTH_8U, 3)  # RGB image
        cv.SetData(cv_img, im.tostring(), im.size[0]*3)
        cv.CvtColor(cv_img, cv_img, cv.CV_RGB2BGR)

        gray_image=cv.CreateImage(cv.GetSize(cv_img),8,1)
        cv.CvtColor(cv_img,gray_image,cv.CV_BGR2GRAY)


        (found,corners)=cv.FindChessboardCorners(gray_image,(7,5),cv.CV_CALIB_CB_ADAPTIVE_THRESH| cv.CV_CALIB_CB_FILTER_QUADS)
        if found == 1:

            self.sayWord("Corners Detected")

            self.sayWord("Saving Image")

        else:

            self.sayWord("Corners can not be detected")

            flag = 0
            camProxy.unsubscribe(videoClient)
            return flag


        t1 = time.time()

        # Time the image transfer.
        self.logger.info("acquisition delay "+str(t1 - t0))

        camProxy.unsubscribe(videoClient)


        self.logger.info(str(imNum))

        # Save the image.
        imName = "image"+str(imNum)+".jpg"
        im.save("/home/nao/SavedImages/"+imName)
        self.sayWord("Image"+str(imNum)+"Saved")

        flag = 1

        return flag]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="detectionFailure" type="1" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                  <Output name="detectionGood" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                </Box>
                                <Box name="Pattern Images" id="14" localization="8" tooltip="Enter tooltip here" x="234" y="32">
                                  <bitmap>media/images/box/box-diagram.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import Image
import ImageDraw
import time
import os,sys
import cv2 as cv

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):

        flag = self.showNaoImage()
        if (flag == 1):
            global imNum
            imNum = imNum+1
            self.detectionGood()
            self.onUnload()
            #self.onStopped()
        else:
            self.detectionFailure()
            self.onUnload()
            #self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        #self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass

    def sayWord(self,s):
        ttsProxy=ALProxy("ALTextToSpeech")
        ttsProxy.say(s)


    def showNaoImage(self):

        camProxy = ALProxy("ALVideoDevice")
        resolution = 2    # VGA
        colorSpace = 11   # RGB
        found = 0

        videoClient = camProxy.subscribe("python_client", resolution, colorSpace, 5)

        t0 = time.time()

        naoImage = camProxy.getImageRemote(videoClient)

        # Get the image size and pixel array.
        imageWidth = naoImage[0]
        imageHeight = naoImage[1]
        array = naoImage[6]

        # Create a PIL Image from our pixel array.
        im = Image.fromstring("RGB", (imageWidth, imageHeight), array)

        # Create ipl Image to use with opencv
        cv_img = cv.CreateImageHeader(im.size, cv.IPL_DEPTH_8U, 3)  # RGB image
        cv.SetData(cv_img, im.tostring(), im.size[0]*3)
        cv.CvtColor(cv_img, cv_img, cv.CV_RGB2BGR)

        gray_image=cv.CreateImage(cv.GetSize(cv_img),8,1)
        cv.CvtColor(cv_img,gray_image,cv.CV_BGR2GRAY)


        (found,corners)=cv.FindChessboardCorners(gray_image,(7,5),cv.CV_CALIB_CB_ADAPTIVE_THRESH| cv.CV_CALIB_CB_FILTER_QUADS)
        if found == 1:

            self.sayWord("Corners Detected")

            self.sayWord("Saving Image")

        else:

            self.sayWord("Corners can not be detected")

            flag = 0
            camProxy.unsubscribe(videoClient)
            return flag


        t1 = time.time()

        # Time the image transfer.
        self.logger.info("acquisition delay "+str(t1 - t0))

        camProxy.unsubscribe(videoClient)


        self.logger.info(str(imNum))

        # Save the image.
        imName = "image"+str(imNum)+".jpg"
        im.save("/home/nao/SavedImages/"+imName)
        self.sayWord("Image"+str(imNum)+"Saved")

        flag = 1

        return flag]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="detectionFailure" type="1" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                  <Output name="detectionGood" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                </Box>
                                <Box name="Pattern Images" id="16" localization="8" tooltip="Enter tooltip here" x="510" y="78">
                                  <bitmap>media/images/box/box-diagram.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import Image
import ImageDraw
import time
import os,sys
import cv2 as cv

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):

        flag = self.showNaoImage()
        if (flag == 1):
            global imNum
            imNum = imNum+1
            self.detectionGood()
            self.onUnload()
            #self.onStopped()
        else:
            self.detectionFailure()
            self.onUnload()
            #self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        #self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass

    def sayWord(self,s):
        ttsProxy=ALProxy("ALTextToSpeech")
        ttsProxy.say(s)


    def showNaoImage(self):

        camProxy = ALProxy("ALVideoDevice")
        resolution = 2    # VGA
        colorSpace = 11   # RGB
        found = 0

        videoClient = camProxy.subscribe("python_client", resolution, colorSpace, 5)

        t0 = time.time()

        naoImage = camProxy.getImageRemote(videoClient)

        # Get the image size and pixel array.
        imageWidth = naoImage[0]
        imageHeight = naoImage[1]
        array = naoImage[6]

        # Create a PIL Image from our pixel array.
        im = Image.fromstring("RGB", (imageWidth, imageHeight), array)

        # Create ipl Image to use with opencv
        cv_img = cv.CreateImageHeader(im.size, cv.IPL_DEPTH_8U, 3)  # RGB image
        cv.SetData(cv_img, im.tostring(), im.size[0]*3)
        cv.CvtColor(cv_img, cv_img, cv.CV_RGB2BGR)

        gray_image=cv.CreateImage(cv.GetSize(cv_img),8,1)
        cv.CvtColor(cv_img,gray_image,cv.CV_BGR2GRAY)


        (found,corners)=cv.FindChessboardCorners(gray_image,(7,5),cv.CV_CALIB_CB_ADAPTIVE_THRESH| cv.CV_CALIB_CB_FILTER_QUADS)
        if found == 1:

            self.sayWord("Corners Detected")

            self.sayWord("Saving Image")

        else:

            self.sayWord("Corners can not be detected")

            flag = 0
            camProxy.unsubscribe(videoClient)
            return flag


        t1 = time.time()

        # Time the image transfer.
        self.logger.info("acquisition delay "+str(t1 - t0))

        camProxy.unsubscribe(videoClient)


        self.logger.info(str(imNum))

        # Save the image.
        imName = "image"+str(imNum)+".jpg"
        im.save("/home/nao/SavedImages/"+imName)
        self.sayWord("Image"+str(imNum)+"Saved")

        flag = 1

        return flag]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="detectionFailure" type="1" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                  <Output name="detectionGood" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                </Box>
                                <Box name="HeadLeft" id="4" localization="8" tooltip='Robot will go to the position &quot;HeadLeft&#x0A;Position description : Turn Head to the left while sitting&#x0A;' x="104" y="26">
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="20">
                                    <ActuatorList model="nao">
                                      <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                        <Key frame="20" value="28.7382" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-1.84813" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="54.051" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="16.6091" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-29.534" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-72.4204" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0.173378" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                        <Key frame="20" value="0.2952" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="53.9679" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-14.5924" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="24.871" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="73.6557" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0.261268" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                        <Key frame="20" value="0.2964" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-35.418" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="15.735" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-89.8229" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="79.8912" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="48.7775" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-0.964409" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-16.4334" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-90.443" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="79.2807" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="48.0792" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0.441859" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                </Box>
                                <Box name="HeadRight" id="5" localization="8" tooltip='Robot will go to the position &quot;HeadRight&#x0A;Position description : Turn Head to right while sitting&#x0A;' x="370" y="102">
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="20">
                                    <ActuatorList model="nao">
                                      <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-33.8407" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-1.84813" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="54.051" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="16.6091" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-29.534" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-72.4204" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0.173378" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                        <Key frame="20" value="0.2956" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="53.9679" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-14.5924" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="24.7831" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="73.6557" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0.349159" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                        <Key frame="20" value="0.2964" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-35.5058" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="15.735" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-89.9108" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="79.8912" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="48.7775" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-0.964409" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-16.4334" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-90.443" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="79.2807" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="48.0792" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0.353968" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                </Box>
                                <Box name="Say" id="1" localization="8" tooltip="Say some text. Note that you must open the box to enter the text." x="755" y="219">
                                  <bitmap>media/images/box/interaction/say.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                  <Parameter name="Voice shaping (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean.' id="5" />
                                  <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean." id="6" />
                                  <Timeline enable="0">
                                    <BehaviorLayer name="behavior_layer1">
                                      <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                          <Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="422" y="65">
                                            <bitmap>media/images/box/interaction/say.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                            <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                            <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                            <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                          </Box>
                                          <Box name="Localized Text" id="5" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="114" y="68">
                                            <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.sentences = {
			"Chinese" : " 你好 ",
			"English" : " Corners are not be detected ",
			"French" : " Bonjour ",
			"German" : " Hallo ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요  ",
			"Portuguese" : " Olá ",
			"Spanish" : " Hola ",
		}

	def onLoad(self):
		self.tts = self.session().service("ALTextToSpeech")

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
                                              </content>
                                            </script>
                                            <pluginContent>
                                              <chinese uiName="‎普通话 (Mandarin Chinese)" languageName="Chinese">
                                                <![CDATA[你好]]>
                                              </chinese>
                                              <english uiName="‎American English (American English)" languageName="English">
                                                <![CDATA[Corners are not be detected]]>
                                              </english>
                                              <french uiName="‎Français (French)" languageName="French">
                                                <![CDATA[Bonjour]]>
                                              </french>
                                              <german uiName="‎Deutsch (German)" languageName="German">
                                                <![CDATA[Hallo]]>
                                              </german>
                                              <italian uiName="‎Italiano (Italian)" languageName="Italian">
                                                <![CDATA[Ciao]]>
                                              </italian>
                                              <japanese uiName="‎日本語 (Japanese)" languageName="Japanese">
                                                <![CDATA[こんにちは]]>
                                              </japanese>
                                              <korean uiName="‎한국어 (Korean)" languageName="Korean">
                                                <![CDATA[안녕하세요 ]]>
                                              </korean>
                                              <portuguese uiName="‎Português (Portuguese)" languageName="Portuguese">
                                                <![CDATA[Olá]]>
                                              </portuguese>
                                              <spanish uiName="‎Español (Spanish)" languageName="Spanish">
                                                <![CDATA[Hola]]>
                                              </spanish>
                                              <language>english</language>
                                            </pluginContent>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                            <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                          </Box>
                                          <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                          <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" />
                                          <Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" />
                                        </Diagram>
                                      </BehaviorKeyframe>
                                    </BehaviorLayer>
                                  </Timeline>
                                </Box>
                                <Link inputowner="11" indexofinput="2" outputowner="0" indexofoutput="2" />
                                <Link inputowner="0" indexofinput="3" outputowner="11" indexofoutput="5" />
                                <Link inputowner="14" indexofinput="2" outputowner="4" indexofoutput="4" />
                                <Link inputowner="4" indexofinput="2" outputowner="11" indexofoutput="4" />
                                <Link inputowner="5" indexofinput="2" outputowner="14" indexofoutput="4" />
                                <Link inputowner="16" indexofinput="2" outputowner="5" indexofoutput="4" />
                                <Link inputowner="0" indexofinput="3" outputowner="14" indexofoutput="5" />
                                <Link inputowner="0" indexofinput="3" outputowner="16" indexofoutput="5" />
                                <Link inputowner="1" indexofinput="2" outputowner="16" indexofoutput="4" />
                                <Link inputowner="0" indexofinput="3" outputowner="1" indexofoutput="4" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                      </Box>
                      <Box name="Stand Up" id="26" localization="8" tooltip="NAO tries to stand up from any position for a number of tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." x="591" y="319">
                        <bitmap>media/images/box/movement/stand.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated when NAO succeed in standing up." id="4" />
                        <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot failed to stand up after n tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." id="5" />
                        <Parameter name="Maximum of tries" inherits_from_parent="0" content_type="1" value="3" default_value="3" min="1" max="10" tooltip="The maximum number that the robot tries to stand up and fails before the failure&#x0A;output is stimulated." id="6" />
                        <Parameter name="Side" inherits_from_parent="0" content_type="3" value="Right" default_value="Random" custom_choice="0" tooltip='Side of the arm used to stand up. If it is set to &quot;Random&quot; the side is chosen randomly.' id="7">
                          <Choice value="Left" />
                          <Choice value="Random" />
                          <Choice value="Right" />
                        </Parameter>
                        <Timeline enable="0">
                          <BehaviorLayer name="StandUpBehavior">
                            <BehaviorKeyframe name="DetectRobotPose" index="1">
                              <Diagram>
                                <Box name="Check Count" id="7" localization="8" tooltip="Check number of tries. If the current try number is higher than the maximum&#x0A;number of tries set in parent box parameters, then the failed output is&#x0A;stimulated, else the tryAgain output is stimulated." x="863" y="179">
                                  <bitmap>media/images/box/box-script.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.nTries = 0

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        self.nTries += 1
        if (self.nTries > self.getParameter("Maximum of tries")):
            self.failed()
        else:
            self.tryAgain()

    def onInput_onStop(self):
        self.onUnload()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Output name="failed" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent if the current try number is higher than the maximum number of tries&#x0A;set in parent box parameters." id="3" />
                                  <Output name="tryAgain" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent if the current try number is smaller than or equal to the maximum&#x0A;number of tries set in parent box parameters." id="4" />
                                </Box>
                                <Box name="Switch Case" id="10" localization="8" tooltip="Test input value and stimulate the output matching to this value. If there is no&#x0A;output matching, the default output (onDefault) is stimulated.&#x0A;&#x0A;You can edit a case by left double-clicking on the line. You can add a&#x0A;case by right clicking on a line and selecting &apos;Insert a row&apos;. You can delete&#x0A;a case by right clicking on a line and selecting &apos;Remove a row&apos;." plugin="dispatcher_plugin" x="444" y="86">
                                  <bitmap>media/images/box/interaction/choice.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion("Stand")):
			self.output_1(p)
		elif(p == self.typeConversion("Unknown")):
			self.output_2(p)
		elif(p == self.typeConversion("HeadBack")):
			self.output_3(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]>
                                    </content>
                                  </script>
                                  <pluginContent>
                                    <keywords>
                                      <keyword>&quot;Stand&quot;</keyword>
                                      <keyword>&quot;Unknown&quot;</keyword>
                                      <keyword>&quot;HeadBack&quot;</keyword>
                                      <keyword></keyword>
                                    </keywords>
                                  </pluginContent>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Value to test." id="2" />
                                  <Output name="onDefault" type="1" type_size="1" nature="1" inner="0" tooltip="If the input value does not match any value set on the box." id="3" />
                                  <Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="4" />
                                  <Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="5" />
                                  <Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="6" />
                                </Box>
                                <Box name="Right Stand Motion" id="20" localization="8" tooltip="The robot makes the right motion to stand up depending on its current position." x="562" y="346">
                                  <bitmap>media/images/box/movement/stand.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        self.count = 0
        pass

    def onInput_onStop(self):
        self.onUnload()
        pass]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent after a step to sit down is done." id="4" />
                                  <Timeline enable="0">
                                    <BehaviorLayer name="SitDownBehavior">
                                      <BehaviorKeyframe name="DetectRobotPose" index="1">
                                        <Diagram>
                                          <Box name="Switch Case" id="9" localization="8" tooltip="Test input value and stimulate the output matching to this value. If there is no&#x0A;output matching, the default output (onDefault) is stimulated.&#x0A;&#x0A;You can edit a case by left double-clicking on the line. You can add a&#x0A;case by right clicking on a line and selecting &apos;Insert a row&apos;. You can delete&#x0A;a case by right clicking on a line and selecting &apos;Remove a row&apos;." plugin="dispatcher_plugin" x="230" y="73">
                                            <bitmap>media/images/box/interaction/choice.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion("Left")):
			self.output_1(p)
		elif(p == self.typeConversion("Right")):
			self.output_2(p)
		elif(p == self.typeConversion("Back")):
			self.output_3(p)
		elif(p == self.typeConversion("Knee")):
			self.output_4(p)
		elif(p == self.typeConversion("Frog")):
			self.output_5(p)
		elif(p == self.typeConversion("Belly")):
			self.output_6(p)
		elif(p == self.typeConversion("Crouch")):
			self.output_7(p)
		elif(p == self.typeConversion("Sit")):
			self.output_8(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]>
                                              </content>
                                            </script>
                                            <pluginContent>
                                              <keywords>
                                                <keyword>&quot;Left&quot;</keyword>
                                                <keyword>&quot;Right&quot;</keyword>
                                                <keyword>&quot;Back&quot;</keyword>
                                                <keyword>&quot;Knee&quot;</keyword>
                                                <keyword>&quot;Frog&quot;</keyword>
                                                <keyword>&quot;Belly&quot;</keyword>
                                                <keyword>&quot;Crouch&quot;</keyword>
                                                <keyword>&quot;Sit&quot;</keyword>
                                                <keyword></keyword>
                                              </keywords>
                                            </pluginContent>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Value to test." id="2" />
                                            <Output name="onDefault" type="1" type_size="1" nature="1" inner="0" tooltip="If the input value does not match any value set on the box." id="3" />
                                            <Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="4" />
                                            <Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="5" />
                                            <Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="6" />
                                            <Output name="output_4" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="7" />
                                            <Output name="output_5" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="8" />
                                            <Output name="output_6" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="9" />
                                            <Output name="output_7" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="10" />
                                            <Output name="output_8" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="11" />
                                          </Box>
                                          <Box name="SitToCrouch" id="12" localization="8" tooltip="First motion to Stand up from a sitting position" x="689" y="627">
                                            <bitmap>media/images/box/movement/move.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #~ self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            <Timeline enable="1" fps="25" start_frame="1" end_frame="180" size="180" resources_acquisition="1">
                                              <ActuatorList model="nao">
                                                <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                                  <Key frame="15" value="0.0854875" />
                                                  <Key frame="28" value="-16" />
                                                  <Key frame="39" value="-19.9538" />
                                                  <Key frame="55" value="-27" />
                                                  <Key frame="75" value="-30" />
                                                  <Key frame="94" value="-16.4382" />
                                                  <Key frame="126" value="-0.538656" />
                                                  <Key frame="180" value="-0.538656" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                                  <Key frame="15" value="21.2674" />
                                                  <Key frame="28" value="21.1795" />
                                                  <Key frame="39" value="13" />
                                                  <Key frame="55" value="15.8" />
                                                  <Key frame="75" value="9" />
                                                  <Key frame="94" value="20.0369" />
                                                  <Key frame="126" value="21.707" />
                                                  <Key frame="180" value="21.707" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                                  <Key frame="15" value="28.4" />
                                                  <Key frame="28" value="32.9" />
                                                  <Key frame="39" value="35.9" />
                                                  <Key frame="55" value="58.094" />
                                                  <Key frame="64" value="37.3" />
                                                  <Key frame="75" value="43.0645" />
                                                  <Key frame="94" value="64.2" />
                                                  <Key frame="109" value="67.2" />
                                                  <Key frame="126" value="80.7" />
                                                  <Key frame="180" value="61.2" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                                  <Key frame="15" value="13.9724" />
                                                  <Key frame="21" value="28.3" />
                                                  <Key frame="28" value="23.8163" />
                                                  <Key frame="39" value="29.2" />
                                                  <Key frame="55" value="43.2" />
                                                  <Key frame="64" value="35" />
                                                  <Key frame="75" value="29.2655" />
                                                  <Key frame="94" value="4.39218" />
                                                  <Key frame="109" value="8.87466" />
                                                  <Key frame="126" value="39.461" />
                                                  <Key frame="180" value="33.9238" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                                  <Key frame="15" value="-31.204" />
                                                  <Key frame="28" value="-40.7842" />
                                                  <Key frame="39" value="-42.1904" />
                                                  <Key frame="55" value="-46.8487" />
                                                  <Key frame="64" value="-17.0534" />
                                                  <Key frame="75" value="-9.31893" />
                                                  <Key frame="94" value="-49.837" />
                                                  <Key frame="109" value="-58.0988" />
                                                  <Key frame="126" value="-52.7374" />
                                                  <Key frame="180" value="-20.9206" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                                  <Key frame="15" value="-60.9066" />
                                                  <Key frame="28" value="-53.5237" />
                                                  <Key frame="39" value="-45.4376" />
                                                  <Key frame="55" value="-53.9631" />
                                                  <Key frame="64" value="-61.1702" />
                                                  <Key frame="75" value="-35.7695" />
                                                  <Key frame="94" value="-51.0627" />
                                                  <Key frame="109" value="-48.7775" />
                                                  <Key frame="126" value="-70.8383" />
                                                  <Key frame="180" value="-61.7855" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                                  <Key frame="15" value="-42.542" />
                                                  <Key frame="28" value="-44.2119" />
                                                  <Key frame="39" value="-42.1904" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                                  <Key frame="15" value="0.0181527" />
                                                  <Key frame="28" value="0.0665718" />
                                                  <Key frame="39" value="0.0720262" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                                  <Key frame="15" value="32.4344" />
                                                  <Key frame="21" value="42" />
                                                  <Key frame="28" value="76.0287" />
                                                  <Key frame="39" value="112.68" />
                                                  <Key frame="55" value="119.496" />
                                                  <Key frame="75" value="118.48" />
                                                  <Key frame="85" value="119.496" />
                                                  <Key frame="94" value="116.195" />
                                                  <Key frame="109" value="92.4645" />
                                                  <Key frame="126" value="81.5659" />
                                                  <Key frame="180" value="69.7005" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                                  <Key frame="15" value="-20.1296" />
                                                  <Key frame="28" value="-38.6748" />
                                                  <Key frame="39" value="-36.5654" />
                                                  <Key frame="48" value="-36" />
                                                  <Key frame="55" value="-0.5" />
                                                  <Key frame="75" value="-29.1825" />
                                                  <Key frame="85" value="-31.7313" />
                                                  <Key frame="94" value="-32.3466" />
                                                  <Key frame="109" value="-38.1474" />
                                                  <Key frame="126" value="-33.0497" />
                                                  <Key frame="180" value="-15.0319" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                                  <Key frame="15" value="27.5077" />
                                                  <Key frame="28" value="104.413" />
                                                  <Key frame="39" value="117.685" />
                                                  <Key frame="55" value="-5" />
                                                  <Key frame="75" value="-4.66067" />
                                                  <Key frame="85" value="-4.39699" />
                                                  <Key frame="94" value="-3.78175" />
                                                  <Key frame="109" value="18.1033" />
                                                  <Key frame="126" value="96.239" />
                                                  <Key frame="180" value="55.3694" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                                  <Key frame="15" value="69.7005" />
                                                  <Key frame="28" value="58.9778" />
                                                  <Key frame="39" value="39.0263" />
                                                  <Key frame="48" value="49" />
                                                  <Key frame="55" value="0.5" />
                                                  <Key frame="75" value="4.57277" />
                                                  <Key frame="85" value="3.43018" />
                                                  <Key frame="94" value="0.969213" />
                                                  <Key frame="109" value="19.0749" />
                                                  <Key frame="126" value="28.4793" />
                                                  <Key frame="180" value="55.7258" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                                  <Key frame="15" value="61.6097" />
                                                  <Key frame="28" value="62.7523" />
                                                  <Key frame="39" value="62.3128" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                                  <Key frame="15" value="0.0181527" />
                                                  <Key frame="28" value="0.126571" />
                                                  <Key frame="39" value="0.140026" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                                  <Key frame="15" value="-38.7578" />
                                                  <Key frame="28" value="-37.3412" />
                                                  <Key frame="39" value="-43.0541" />
                                                  <Key frame="75" value="-28.5959" />
                                                  <Key frame="82" value="-36.9896" />
                                                  <Key frame="94" value="-49.2155" />
                                                  <Key frame="126" value="-24.871" />
                                                  <Key frame="145" value="-16.1697" />
                                                  <Key frame="180" value="-9.92936" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                                  <Key frame="15" value="8.00055" />
                                                  <Key frame="28" value="8.30857" />
                                                  <Key frame="39" value="8.48435" />
                                                  <Key frame="55" value="31" />
                                                  <Key frame="75" value="8.87947" />
                                                  <Key frame="82" value="-1.44741" />
                                                  <Key frame="94" value="-10" />
                                                  <Key frame="126" value="10.4615" />
                                                  <Key frame="145" value="25.2273" />
                                                  <Key frame="180" value="7.4732" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                                  <Key frame="15" value="-89.9987" />
                                                  <Key frame="28" value="-90" />
                                                  <Key frame="39" value="-90" />
                                                  <Key frame="55" value="-90" />
                                                  <Key frame="75" value="-49.1057" />
                                                  <Key frame="82" value="-34.1405" />
                                                  <Key frame="94" value="-3" />
                                                  <Key frame="109" value="-23" />
                                                  <Key frame="126" value="-39.5489" />
                                                  <Key frame="145" value="-43.2403" />
                                                  <Key frame="180" value="-41.8341" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                                  <Key frame="15" value="41.4825" />
                                                  <Key frame="28" value="54.9601" />
                                                  <Key frame="39" value="67.8801" />
                                                  <Key frame="55" value="96" />
                                                  <Key frame="75" value="121.04" />
                                                  <Key frame="82" value="121.04" />
                                                  <Key frame="94" value="121.04" />
                                                  <Key frame="126" value="114.696" />
                                                  <Key frame="145" value="121.039" />
                                                  <Key frame="180" value="92.7234" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                                  <Key frame="15" value="44.4708" />
                                                  <Key frame="28" value="43.2822" />
                                                  <Key frame="39" value="43.2822" />
                                                  <Key frame="55" value="38" />
                                                  <Key frame="75" value="-26" />
                                                  <Key frame="82" value="-39" />
                                                  <Key frame="94" value="-63" />
                                                  <Key frame="126" value="-68.15" />
                                                  <Key frame="145" value="-68.15" />
                                                  <Key frame="180" value="-42.1904" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                                  <Key frame="15" value="-2.89802" />
                                                  <Key frame="28" value="-0.315349" />
                                                  <Key frame="39" value="1.53038" />
                                                  <Key frame="55" value="-10" />
                                                  <Key frame="75" value="-22.6737" />
                                                  <Key frame="82" value="-4.97361" />
                                                  <Key frame="94" value="-5.94664" />
                                                  <Key frame="126" value="0.617646" />
                                                  <Key frame="145" value="-0.964405" />
                                                  <Key frame="180" value="-5.09532" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                                  <Key frame="15" value="-8.25942" />
                                                  <Key frame="28" value="-7.64074" />
                                                  <Key frame="39" value="-12.0353" />
                                                  <Key frame="55" value="-31" />
                                                  <Key frame="75" value="-31.9952" />
                                                  <Key frame="82" value="-42.0943" />
                                                  <Key frame="94" value="-35" />
                                                  <Key frame="126" value="-14.5876" />
                                                  <Key frame="145" value="-4.65586" />
                                                  <Key frame="180" value="-4.30429" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                                  <Key frame="15" value="-88.9488" />
                                                  <Key frame="28" value="-90" />
                                                  <Key frame="39" value="-90" />
                                                  <Key frame="55" value="-90" />
                                                  <Key frame="75" value="-87.3668" />
                                                  <Key frame="82" value="-90" />
                                                  <Key frame="94" value="-89.3612" />
                                                  <Key frame="126" value="-48.6944" />
                                                  <Key frame="145" value="-38.8505" />
                                                  <Key frame="180" value="-37.1806" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                                  <Key frame="15" value="48.3429" />
                                                  <Key frame="28" value="54.6752" />
                                                  <Key frame="39" value="69.6168" />
                                                  <Key frame="55" value="96" />
                                                  <Key frame="75" value="70" />
                                                  <Key frame="82" value="72.9567" />
                                                  <Key frame="94" value="63" />
                                                  <Key frame="126" value="34.1044" />
                                                  <Key frame="145" value="82.5327" />
                                                  <Key frame="180" value="90.5309" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                                  <Key frame="15" value="45.003" />
                                                  <Key frame="28" value="43.5603" />
                                                  <Key frame="39" value="43.5603" />
                                                  <Key frame="55" value="38" />
                                                  <Key frame="75" value="45" />
                                                  <Key frame="82" value="38.3747" />
                                                  <Key frame="94" value="45" />
                                                  <Key frame="109" value="45" />
                                                  <Key frame="118" value="31" />
                                                  <Key frame="126" value="27.6004" />
                                                  <Key frame="145" value="-21.1795" />
                                                  <Key frame="180" value="-45.1739" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                                  <Key frame="15" value="2.81494" />
                                                  <Key frame="28" value="0.0417638" />
                                                  <Key frame="39" value="-0.0461279" />
                                                  <Key frame="55" value="10" />
                                                  <Key frame="75" value="0.532261" />
                                                  <Key frame="82" value="4.26057" />
                                                  <Key frame="88" value="-9" />
                                                  <Key frame="94" value="-6" />
                                                  <Key frame="109" value="14" />
                                                  <Key frame="118" value="20" />
                                                  <Key frame="126" value="25.2273" />
                                                  <Key frame="145" value="24.2605" />
                                                  <Key frame="180" value="5.18802" />
                                                </ActuatorCurve>
                                              </ActuatorList>
                                            </Timeline>
                                          </Box>
                                          <Box name="CrouchToStand" id="3" localization="8" tooltip="From the old bad position" x="1206" y="505">
                                            <bitmap>media/images/box/movement/move.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		""

	def onInput_onStop(self):
		""]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="15">
                                              <ActuatorList model="nao">
                                                <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                                  <Key frame="15" value="3.86483" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                                  <Key frame="15" value="-2.37548" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                                  <Key frame="15" value="90.8776" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                                  <Key frame="15" value="12.8298" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                                  <Key frame="15" value="-58.5383" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                                  <Key frame="15" value="-37.791" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                                  <Key frame="15" value="-43.0693" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                                  <Key frame="15" value="0.26148" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                                  <Key frame="15" value="84.1148" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                                  <Key frame="15" value="-8.44001" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                                  <Key frame="15" value="52.1174" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                                  <Key frame="15" value="21.2722" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                                  <Key frame="15" value="60.4671" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                                  <Key frame="15" value="0.218207" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                                  <Key frame="15" value="-13.7087" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                                  <Key frame="15" value="8.5279" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                                  <Key frame="15" value="12.1315" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                                  <Key frame="15" value="-5.18802" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                                  <Key frame="15" value="4.65586" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                                  <Key frame="15" value="-7.64418" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                                  <Key frame="15" value="-3.33748" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                                  <Key frame="15" value="12.1267" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                                  <Key frame="15" value="-4.39218" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                                  <Key frame="15" value="4.57277" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                                  <Key frame="15" value="3.43018" />
                                                </ActuatorCurve>
                                              </ActuatorList>
                                            </Timeline>
                                          </Box>
                                          <Box name="BellyToStand" id="16" localization="8" tooltip="First motion to Stand up from the belly" x="1199" y="347">
                                            <bitmap>media/images/box/movement/move.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="100">
                                              <ActuatorList model="nao">
                                                <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                                  <Key frame="10" value="0" />
                                                  <Key frame="20" value="-13" />
                                                  <Key frame="34" value="16.4" />
                                                  <Key frame="45" value="17" />
                                                  <Key frame="58" value="-28.4" />
                                                  <Key frame="65" value="-17" />
                                                  <Key frame="76" value="3" />
                                                  <Key frame="89" value="-22.4" />
                                                  <Key frame="100" value="3.86483" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="-38.5" />
                                                  <Key frame="20" value="-31.3797" />
                                                  <Key frame="34" value="6.15002" />
                                                  <Key frame="45" value="29.5" />
                                                  <Key frame="58" value="21.8" />
                                                  <Key frame="65" value="21.2674" />
                                                  <Key frame="76" value="-6" />
                                                  <Key frame="89" value="-30.5887" />
                                                  <Key frame="100" value="7.3" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="4.83164" />
                                                  <Key frame="20" value="-86.6" />
                                                  <Key frame="34" value="-71.6342" />
                                                  <Key frame="45" value="4.12851" />
                                                  <Key frame="58" value="73" />
                                                  <Key frame="65" value="43.3" />
                                                  <Key frame="76" value="43" />
                                                  <Key frame="89" value="74" />
                                                  <Key frame="100" value="91.3171" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="89.0319" />
                                                  <Key frame="20" value="0.964405" />
                                                  <Key frame="34" value="4.39218" />
                                                  <Key frame="45" value="4.04062" />
                                                  <Key frame="58" value="8.96255" />
                                                  <Key frame="65" value="53.8" />
                                                  <Key frame="76" value="38.8" />
                                                  <Key frame="89" value="48.5" />
                                                  <Key frame="100" value="12.4782" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                                  <Key frame="10" value="-119" />
                                                  <Key frame="20" value="-90.5309" />
                                                  <Key frame="34" value="-91.9371" />
                                                  <Key frame="45" value="-102.396" />
                                                  <Key frame="58" value="-76.0287" />
                                                  <Key frame="65" value="-71.5" />
                                                  <Key frame="76" value="-55.7258" />
                                                  <Key frame="89" value="-55" />
                                                  <Key frame="100" value="-58.3625" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="-0.5" />
                                                  <Key frame="20" value="-20.2127" />
                                                  <Key frame="34" value="-36.5606" />
                                                  <Key frame="45" value="-48.7775" />
                                                  <Key frame="58" value="-88.8561" />
                                                  <Key frame="65" value="-42" />
                                                  <Key frame="76" value="-42.2" />
                                                  <Key frame="89" value="-66.1801" />
                                                  <Key frame="100" value="-39.0215" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                                  <Key frame="10" value="-88.8609" />
                                                  <Key frame="20" value="-88.8609" />
                                                  <Key frame="34" value="-86.9273" />
                                                  <Key frame="45" value="-82.9722" />
                                                  <Key frame="58" value="-80.5112" />
                                                  <Key frame="65" value="-80.687" />
                                                  <Key frame="76" value="-80.687" />
                                                  <Key frame="89" value="-31.2" />
                                                  <Key frame="100" value="-40.6963" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                                  <Key frame="10" value="0.0585718" />
                                                  <Key frame="20" value="0.0196627" />
                                                  <Key frame="34" value="0.0407536" />
                                                  <Key frame="45" value="0.0545718" />
                                                  <Key frame="58" value="0.0574809" />
                                                  <Key frame="65" value="0.0574809" />
                                                  <Key frame="76" value="0.0549355" />
                                                  <Key frame="89" value="0.0574809" />
                                                  <Key frame="100" value="0.260753" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="-1.57965" />
                                                  <Key frame="20" value="-86.6" />
                                                  <Key frame="34" value="-70.0473" />
                                                  <Key frame="45" value="-13.5329" />
                                                  <Key frame="58" value="12.483" />
                                                  <Key frame="65" value="25.7547" />
                                                  <Key frame="76" value="52.3859" />
                                                  <Key frame="89" value="55.0226" />
                                                  <Key frame="100" value="84.73" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="-87.982" />
                                                  <Key frame="20" value="-11" />
                                                  <Key frame="34" value="-4.74856" />
                                                  <Key frame="45" value="-4.74856" />
                                                  <Key frame="58" value="-13.0104" />
                                                  <Key frame="65" value="-10.4615" />
                                                  <Key frame="76" value="-0.498473" />
                                                  <Key frame="89" value="-7.56109" />
                                                  <Key frame="100" value="-8.5279" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                                  <Key frame="10" value="119" />
                                                  <Key frame="20" value="89.4714" />
                                                  <Key frame="34" value="92.4597" />
                                                  <Key frame="45" value="96.5906" />
                                                  <Key frame="58" value="112.323" />
                                                  <Key frame="65" value="111.796" />
                                                  <Key frame="76" value="38.1426" />
                                                  <Key frame="89" value="22.6737" />
                                                  <Key frame="100" value="52.1174" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="6" />
                                                  <Key frame="20" value="21.8874" />
                                                  <Key frame="34" value="36.3896" />
                                                  <Key frame="45" value="89.2125" />
                                                  <Key frame="58" value="0.498473" />
                                                  <Key frame="65" value="0.498473" />
                                                  <Key frame="76" value="24.2605" />
                                                  <Key frame="89" value="37.2" />
                                                  <Key frame="100" value="22.5027" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                                  <Key frame="10" value="86.4831" />
                                                  <Key frame="20" value="86.4831" />
                                                  <Key frame="34" value="85.7799" />
                                                  <Key frame="45" value="81.8248" />
                                                  <Key frame="58" value="82.2643" />
                                                  <Key frame="65" value="82.5279" />
                                                  <Key frame="76" value="82.7037" />
                                                  <Key frame="89" value="82.5279" />
                                                  <Key frame="100" value="62.2249" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                                  <Key frame="10" value="0.0185718" />
                                                  <Key frame="20" value="0.0127537" />
                                                  <Key frame="34" value="0.0262082" />
                                                  <Key frame="45" value="0.0469355" />
                                                  <Key frame="58" value="0.0494809" />
                                                  <Key frame="65" value="0.04839" />
                                                  <Key frame="76" value="0.0472991" />
                                                  <Key frame="89" value="0.04839" />
                                                  <Key frame="100" value="0.217844" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="1.3" />
                                                  <Key frame="20" value="2" />
                                                  <Key frame="34" value="-24.9588" />
                                                  <Key frame="45" value="-44.6466" />
                                                  <Key frame="58" value="-59.6761" />
                                                  <Key frame="65" value="-65.621" />
                                                  <Key frame="76" value="-65.621" />
                                                  <Key frame="89" value="-32.5175" />
                                                  <Key frame="100" value="-13.5329" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="0" />
                                                  <Key frame="20" value="0.00240423" />
                                                  <Key frame="34" value="0.090296" />
                                                  <Key frame="45" value="-21.619" />
                                                  <Key frame="58" value="-17.0486" />
                                                  <Key frame="65" value="-17.0486" />
                                                  <Key frame="76" value="11.1647" />
                                                  <Key frame="89" value="7.29742" />
                                                  <Key frame="100" value="8.5279" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="-46.1" />
                                                  <Key frame="20" value="0.00240423" />
                                                  <Key frame="34" value="-89.9108" />
                                                  <Key frame="45" value="-73.3872" />
                                                  <Key frame="58" value="-59.4124" />
                                                  <Key frame="65" value="-66.4437" />
                                                  <Key frame="76" value="-67.7621" />
                                                  <Key frame="89" value="-72.7719" />
                                                  <Key frame="100" value="12.2194" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                                  <Key frame="10" value="-5.29" />
                                                  <Key frame="20" value="114" />
                                                  <Key frame="34" value="121.039" />
                                                  <Key frame="45" value="16.1697" />
                                                  <Key frame="58" value="23.201" />
                                                  <Key frame="65" value="20.4764" />
                                                  <Key frame="76" value="41.2188" />
                                                  <Key frame="89" value="115.399" />
                                                  <Key frame="100" value="-5.18802" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                                  <Key frame="10" value="36.9" />
                                                  <Key frame="20" value="-59" />
                                                  <Key frame="34" value="-65.9212" />
                                                  <Key frame="45" value="12.3903" />
                                                  <Key frame="58" value="40.6915" />
                                                  <Key frame="65" value="52.8695" />
                                                  <Key frame="76" value="47.2833" />
                                                  <Key frame="89" value="-28.743" />
                                                  <Key frame="100" value="4.39218" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="0" />
                                                  <Key frame="20" value="0.00240423" />
                                                  <Key frame="34" value="-0.0854875" />
                                                  <Key frame="45" value="-25.9257" />
                                                  <Key frame="58" value="-17.2244" />
                                                  <Key frame="65" value="-6.76526" />
                                                  <Key frame="76" value="-2.37067" />
                                                  <Key frame="89" value="-6.94104" />
                                                  <Key frame="100" value="-7.73207" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="0" />
                                                  <Key frame="20" value="0.00240423" />
                                                  <Key frame="34" value="0.090296" />
                                                  <Key frame="45" value="17.8444" />
                                                  <Key frame="58" value="14.5924" />
                                                  <Key frame="65" value="18.3718" />
                                                  <Key frame="76" value="13.0104" />
                                                  <Key frame="89" value="-4.30429" />
                                                  <Key frame="100" value="-3.42537" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="-46.1" />
                                                  <Key frame="20" value="-0.00240423" />
                                                  <Key frame="34" value="-90.3551" />
                                                  <Key frame="45" value="-95.1891" />
                                                  <Key frame="58" value="-68.7337" />
                                                  <Key frame="65" value="-91.5856" />
                                                  <Key frame="76" value="-18.4597" />
                                                  <Key frame="89" value="-40.6963" />
                                                  <Key frame="100" value="12.0388" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                                  <Key frame="10" value="-5.29" />
                                                  <Key frame="20" value="114" />
                                                  <Key frame="34" value="119.535" />
                                                  <Key frame="45" value="99.8474" />
                                                  <Key frame="58" value="121.478" />
                                                  <Key frame="65" value="121.478" />
                                                  <Key frame="76" value="121.478" />
                                                  <Key frame="89" value="121.478" />
                                                  <Key frame="100" value="-4.39218" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                                  <Key frame="10" value="36.9" />
                                                  <Key frame="20" value="-59" />
                                                  <Key frame="34" value="-65.2133" />
                                                  <Key frame="45" value="-67.9785" />
                                                  <Key frame="58" value="-67.9785" />
                                                  <Key frame="65" value="-33.748" />
                                                  <Key frame="76" value="-67.9785" />
                                                  <Key frame="89" value="-67.9785" />
                                                  <Key frame="100" value="4.92434" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="0" />
                                                  <Key frame="20" value="0.00240423" />
                                                  <Key frame="34" value="0.353971" />
                                                  <Key frame="45" value="-0.261271" />
                                                  <Key frame="58" value="-5.62267" />
                                                  <Key frame="65" value="-0.788621" />
                                                  <Key frame="76" value="-5.44688" />
                                                  <Key frame="89" value="2.02391" />
                                                  <Key frame="100" value="3.51807" />
                                                </ActuatorCurve>
                                              </ActuatorList>
                                            </Timeline>
                                          </Box>
                                          <Box name="BackToStand" id="5" localization="8" tooltip="First motion to Stand up from the back" x="1194" y="231">
                                            <bitmap>media/images/box/movement/move.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="105" resources_acquisition="1">
                                              <BehaviorLayer name="behavior_layer1">
                                                <BehaviorKeyframe name="keyframe10" index="10">
                                                  <Diagram>
                                                    <Box name="Disable Anti-Collision" id="2" localization="8" tooltip="Disable the collision protection on some specific part of NAO&apos;s body.&#x0A;&#x0A;Note: When this box is unloaded, the collision protection state will be reset to&#x0A;its previous state (enabled or disabled)." x="136" y="45">
                                                      <bitmap>media/images/box/sensors/anti_collision.png</bitmap>
                                                      <script language="4">
                                                        <content>
                                                          <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.motion = ALProxy( "ALMotion" )

    def onLoad(self):
        self.collisionLArmState = self.motion.getCollisionProtectionEnabled("LArm")
        self.collisionRArmState = self.motion.getCollisionProtectionEnabled("RArm")

    def onUnload(self):
        self.motion.setCollisionProtectionEnabled("LArm", self.collisionLArmState)
        self.motion.setCollisionProtectionEnabled("RArm", self.collisionRArmState)

    def onInput_onSet(self):
        # enable/disable collision protection
        result = self.motion.setCollisionProtectionEnabled( self.getParameter("Body part"), False )
        if( result ):
            self.success()
        else:
            self.logger.warning( "Disabling collision protection failed. Deactivation succeeds only if the current state of the chain is not in collision. If you want to deactivate collision of both arms, they need to be off collision." )
            self.failure()]]>
                                                        </content>
                                                      </script>
                                                      <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                      <Input name="onSet" type="1" type_size="1" nature="1" inner="0" tooltip="The anti-collision feature is enabled or disabled when this input is stimulated." id="2" />
                                                      <Output name="success" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent if the collision protection has been successfully enabled or disabled.&#x0A;&#x0A;Note: The only case where there is a failure is when you try to disable the&#x0A;anti-collision while it is currently in collision with some part of his body." id="3" />
                                                      <Output name="failure" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent if the collision protection has failed to be enabled or disabled.&#x0A;&#x0A;Note: The only case where there is a failure is when you try to disable the&#x0A;anti-collision while it is currently in collision with some part of his body." id="4" />
                                                      <Parameter name="Body part" inherits_from_parent="0" content_type="3" value="Arms" default_value="Arms" custom_choice="0" tooltip="Body part which avoids the collision." id="5">
                                                        <Choice value="Arms" />
                                                        <Choice value="LArm" />
                                                        <Choice value="RArm" />
                                                      </Parameter>
                                                    </Box>
                                                    <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                  </Diagram>
                                                </BehaviorKeyframe>
                                              </BehaviorLayer>
                                              <ActuatorList model="nao">
                                                <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                                  <Key frame="10" value="-1.40867" />
                                                  <Key frame="20" value="-2.73208e-05" />
                                                  <Key frame="28" value="2.37067" />
                                                  <Key frame="36" value="3.86374e-05" />
                                                  <Key frame="43" value="1.93188e-05" />
                                                  <Key frame="48" value="1.93187e-05" />
                                                  <Key frame="56" value="-29.4461" />
                                                  <Key frame="65" value="-17.3171" />
                                                  <Key frame="74" value="15.1" />
                                                  <Key frame="80" value="6.9" />
                                                  <Key frame="86" value="-0.538656" />
                                                  <Key frame="105" value="3.77694" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="3.60116" />
                                                  <Key frame="20" value="0" />
                                                  <Key frame="28" value="29.5016" />
                                                  <Key frame="36" value="-38.5028" />
                                                  <Key frame="43" value="0" />
                                                  <Key frame="48" value="20" />
                                                  <Key frame="56" value="9.84147" />
                                                  <Key frame="65" value="19.7732" />
                                                  <Key frame="74" value="0.6" />
                                                  <Key frame="80" value="1.7" />
                                                  <Key frame="86" value="21.707" />
                                                  <Key frame="105" value="-2.28759" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="119.496" />
                                                  <Key frame="20" value="119.5" />
                                                  <Key frame="26" value="116.806" />
                                                  <Key frame="36" value="119.496" />
                                                  <Key frame="43" value="119.496" />
                                                  <Key frame="48" value="119.496" />
                                                  <Key frame="56" value="116.454" />
                                                  <Key frame="65" value="73.7388" />
                                                  <Key frame="74" value="54.842" />
                                                  <Key frame="80" value="42.0098" />
                                                  <Key frame="86" value="42.0098" />
                                                  <Key frame="105" value="91.2292" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="56.1604" />
                                                  <Key frame="20" value="21" />
                                                  <Key frame="26" value="20" />
                                                  <Key frame="36" value="20" />
                                                  <Key frame="43" value="21" />
                                                  <Key frame="48" value="0.498473" />
                                                  <Key frame="56" value="17.1365" />
                                                  <Key frame="60" value="25.4" />
                                                  <Key frame="65" value="4.04062" />
                                                  <Key frame="74" value="15.2908" />
                                                  <Key frame="80" value="28.5624" />
                                                  <Key frame="86" value="28.5624" />
                                                  <Key frame="105" value="12.5661" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                                  <Key frame="10" value="-43.5967" />
                                                  <Key frame="20" value="9" />
                                                  <Key frame="26" value="7.02893" />
                                                  <Key frame="36" value="5" />
                                                  <Key frame="43" value="5" />
                                                  <Key frame="48" value="5" />
                                                  <Key frame="56" value="-112.328" />
                                                  <Key frame="65" value="-48.9581" />
                                                  <Key frame="74" value="-14.3288" />
                                                  <Key frame="80" value="4.75993" />
                                                  <Key frame="86" value="4.75993" />
                                                  <Key frame="105" value="-59.0656" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="-35.7695" />
                                                  <Key frame="20" value="-2" />
                                                  <Key frame="26" value="-88.5" />
                                                  <Key frame="36" value="-89.5017" />
                                                  <Key frame="43" value="-40" />
                                                  <Key frame="48" value="-0.498473" />
                                                  <Key frame="52" value="-11" />
                                                  <Key frame="56" value="-59.9398" />
                                                  <Key frame="65" value="-50.008" />
                                                  <Key frame="74" value="-47.547" />
                                                  <Key frame="80" value="-46.1434" />
                                                  <Key frame="86" value="-46.1434" />
                                                  <Key frame="105" value="-39.0215" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                                  <Key frame="10" value="-40.4326" />
                                                  <Key frame="26" value="-102.484" />
                                                  <Key frame="56" value="-41.5752" />
                                                  <Key frame="65" value="-41.2236" />
                                                  <Key frame="74" value="-41.3994" />
                                                  <Key frame="105" value="-40.7842" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                                  <Key frame="10" value="0.0502082" />
                                                  <Key frame="26" value="0.0763898" />
                                                  <Key frame="56" value="0.125481" />
                                                  <Key frame="65" value="0.154208" />
                                                  <Key frame="74" value="0.166208" />
                                                  <Key frame="105" value="0.258207" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="119.496" />
                                                  <Key frame="20" value="119.5" />
                                                  <Key frame="26" value="111.889" />
                                                  <Key frame="36" value="119.496" />
                                                  <Key frame="43" value="119.496" />
                                                  <Key frame="48" value="119.496" />
                                                  <Key frame="56" value="119.008" />
                                                  <Key frame="65" value="116.723" />
                                                  <Key frame="74" value="82.5327" />
                                                  <Key frame="80" value="51.0681" />
                                                  <Key frame="86" value="51.0681" />
                                                  <Key frame="105" value="84.2027" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="-61.5266" />
                                                  <Key frame="20" value="-21" />
                                                  <Key frame="26" value="-20" />
                                                  <Key frame="36" value="-20" />
                                                  <Key frame="43" value="-21" />
                                                  <Key frame="48" value="-0.498473" />
                                                  <Key frame="56" value="-26.1941" />
                                                  <Key frame="65" value="-32.3466" />
                                                  <Key frame="74" value="-40.4326" />
                                                  <Key frame="80" value="-50" />
                                                  <Key frame="86" value="-39" />
                                                  <Key frame="105" value="-8.61579" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                                  <Key frame="10" value="43.8556" />
                                                  <Key frame="20" value="-9" />
                                                  <Key frame="26" value="-14.7682" />
                                                  <Key frame="36" value="-5" />
                                                  <Key frame="43" value="-5" />
                                                  <Key frame="48" value="-5" />
                                                  <Key frame="56" value="-4.66067" />
                                                  <Key frame="65" value="-3.95753" />
                                                  <Key frame="74" value="-1.49656" />
                                                  <Key frame="80" value="0.0352695" />
                                                  <Key frame="86" value="0.0352695" />
                                                  <Key frame="105" value="52.2932" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="40.6963" />
                                                  <Key frame="20" value="2" />
                                                  <Key frame="26" value="88.5" />
                                                  <Key frame="36" value="89.5017" />
                                                  <Key frame="43" value="40" />
                                                  <Key frame="48" value="0.498473" />
                                                  <Key frame="56" value="5.53958" />
                                                  <Key frame="65" value="1.23289" />
                                                  <Key frame="74" value="10.901" />
                                                  <Key frame="80" value="26" />
                                                  <Key frame="86" value="32.0829" />
                                                  <Key frame="105" value="21.7996" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                                  <Key frame="10" value="66.0043" />
                                                  <Key frame="26" value="98.8758" />
                                                  <Key frame="56" value="61.8734" />
                                                  <Key frame="65" value="61.7855" />
                                                  <Key frame="74" value="61.8734" />
                                                  <Key frame="105" value="62.137" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                                  <Key frame="10" value="0" />
                                                  <Key frame="20" value="0" />
                                                  <Key frame="26" value="0.0182082" />
                                                  <Key frame="43" value="0" />
                                                  <Key frame="56" value="0.16439" />
                                                  <Key frame="65" value="0.171662" />
                                                  <Key frame="74" value="0.176753" />
                                                  <Key frame="105" value="0.215298" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="-26.9804" />
                                                  <Key frame="20" value="0" />
                                                  <Key frame="32" value="0.441863" />
                                                  <Key frame="36" value="-2.73208e-05" />
                                                  <Key frame="43" value="-37.5274" />
                                                  <Key frame="56" value="-28.5624" />
                                                  <Key frame="65" value="-49.217" />
                                                  <Key frame="74" value="-39.9" />
                                                  <Key frame="80" value="-23.0475" />
                                                  <Key frame="86" value="-23.0475" />
                                                  <Key frame="105" value="-13.1814" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="2.55126" />
                                                  <Key frame="20" value="8.991e-06" />
                                                  <Key frame="32" value="3.34229" />
                                                  <Key frame="36" value="8.991e-06" />
                                                  <Key frame="43" value="-3.71174" />
                                                  <Key frame="48" value="31" />
                                                  <Key frame="56" value="8.87947" />
                                                  <Key frame="65" value="-10.0173" />
                                                  <Key frame="74" value="0.529755" />
                                                  <Key frame="80" value="11" />
                                                  <Key frame="86" value="10" />
                                                  <Key frame="105" value="8.70368" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="14.3288" />
                                                  <Key frame="20" value="-10" />
                                                  <Key frame="32" value="21.448" />
                                                  <Key frame="36" value="-10" />
                                                  <Key frame="43" value="-67.4992" />
                                                  <Key frame="48" value="-90" />
                                                  <Key frame="56" value="-49.1291" />
                                                  <Key frame="65" value="-3.24959" />
                                                  <Key frame="74" value="-26.1014" />
                                                  <Key frame="80" value="-49" />
                                                  <Key frame="86" value="-47.8986" />
                                                  <Key frame="105" value="12.2194" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                                  <Key frame="10" value="5.2711" />
                                                  <Key frame="20" value="96" />
                                                  <Key frame="32" value="115.751" />
                                                  <Key frame="36" value="96" />
                                                  <Key frame="43" value="61.7515" />
                                                  <Key frame="48" value="96" />
                                                  <Key frame="56" value="120.937" />
                                                  <Key frame="65" value="121.024" />
                                                  <Key frame="74" value="121.039" />
                                                  <Key frame="80" value="121.039" />
                                                  <Key frame="86" value="121.039" />
                                                  <Key frame="105" value="-5.10012" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                                  <Key frame="10" value="47.2833" />
                                                  <Key frame="20" value="14" />
                                                  <Key frame="32" value="-26.0184" />
                                                  <Key frame="36" value="14" />
                                                  <Key frame="43" value="38.8165" />
                                                  <Key frame="48" value="38" />
                                                  <Key frame="56" value="-26.1062" />
                                                  <Key frame="65" value="-63.1087" />
                                                  <Key frame="74" value="-68.1542" />
                                                  <Key frame="80" value="-68.1542" />
                                                  <Key frame="86" value="-68.1542" />
                                                  <Key frame="105" value="4.65586" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="-1.93121" />
                                                  <Key frame="20" value="0" />
                                                  <Key frame="32" value="-1.93121" />
                                                  <Key frame="36" value="0" />
                                                  <Key frame="43" value="9.80246" />
                                                  <Key frame="48" value="-6" />
                                                  <Key frame="56" value="-22.6737" />
                                                  <Key frame="65" value="-5.71056" />
                                                  <Key frame="74" value="2.46337" />
                                                  <Key frame="80" value="6.76691" />
                                                  <Key frame="86" value="5" />
                                                  <Key frame="105" value="-7.81996" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="-8.52309" />
                                                  <Key frame="20" value="0" />
                                                  <Key frame="32" value="-1.31597" />
                                                  <Key frame="36" value="0" />
                                                  <Key frame="43" value="3.54635" />
                                                  <Key frame="48" value="-31" />
                                                  <Key frame="56" value="-31.9902" />
                                                  <Key frame="65" value="-34.9785" />
                                                  <Key frame="74" value="-35.9" />
                                                  <Key frame="80" value="-17" />
                                                  <Key frame="86" value="-1" />
                                                  <Key frame="105" value="-3.60116" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="10.6325" />
                                                  <Key frame="20" value="-10" />
                                                  <Key frame="32" value="16.1697" />
                                                  <Key frame="36" value="-10" />
                                                  <Key frame="43" value="-66.7243" />
                                                  <Key frame="48" value="-90" />
                                                  <Key frame="56" value="-87.3668" />
                                                  <Key frame="65" value="-89.3883" />
                                                  <Key frame="74" value="-59" />
                                                  <Key frame="80" value="-51.9" />
                                                  <Key frame="86" value="-51.9" />
                                                  <Key frame="105" value="11.9509" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                                  <Key frame="10" value="10.9889" />
                                                  <Key frame="20" value="96" />
                                                  <Key frame="32" value="116.107" />
                                                  <Key frame="36" value="96" />
                                                  <Key frame="43" value="62.6734" />
                                                  <Key frame="48" value="96" />
                                                  <Key frame="56" value="69.9642" />
                                                  <Key frame="65" value="63.0208" />
                                                  <Key frame="74" value="62.1" />
                                                  <Key frame="80" value="50.2" />
                                                  <Key frame="86" value="101" />
                                                  <Key frame="105" value="-4.39218" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                                  <Key frame="10" value="26.7215" />
                                                  <Key frame="20" value="14" />
                                                  <Key frame="32" value="-21.4432" />
                                                  <Key frame="36" value="14" />
                                                  <Key frame="43" value="41.102" />
                                                  <Key frame="48" value="38" />
                                                  <Key frame="56" value="45.003" />
                                                  <Key frame="65" value="44.9151" />
                                                  <Key frame="74" value="25.3" />
                                                  <Key frame="80" value="23.1" />
                                                  <Key frame="86" value="-33.2" />
                                                  <Key frame="105" value="4.66067" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="9.5826" />
                                                  <Key frame="20" value="4.94951e-06" />
                                                  <Key frame="32" value="-2.28278" />
                                                  <Key frame="36" value="4.94951e-06" />
                                                  <Key frame="43" value="-9.21535" />
                                                  <Key frame="48" value="6" />
                                                  <Key frame="56" value="0.529755" />
                                                  <Key frame="65" value="-5.62267" />
                                                  <Key frame="74" value="25.4" />
                                                  <Key frame="80" value="38.9384" />
                                                  <Key frame="86" value="15.9" />
                                                  <Key frame="105" value="3.60596" />
                                                </ActuatorCurve>
                                              </ActuatorList>
                                            </Timeline>
                                          </Box>
                                          <Box name="SideToBelly" id="4" localization="8" tooltip="Lie down on the back or the belly from an other lie down position (on the side)." x="656" y="93">
                                            <bitmap>media/images/box/movement/move.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		""

	def onInput_onStop(self):
		""]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="10">
                                              <ActuatorList model="nao">
                                                <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                                  <Key frame="5" value="41.3067" />
                                                  <Key frame="10" value="41.3067" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                                  <Key frame="5" value="8.52309" />
                                                  <Key frame="10" value="8.52309" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                                  <Key frame="5" value="108.72" />
                                                  <Key frame="10" value="108.72" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                                  <Key frame="5" value="45.965" />
                                                  <Key frame="10" value="45.965" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                                  <Key frame="5" value="-56.8684" />
                                                  <Key frame="10" value="-56.8684" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                                  <Key frame="5" value="-26.8046" />
                                                  <Key frame="10" value="-26.8046" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                                  <Key frame="5" value="-38.8505" />
                                                  <Key frame="10" value="-38.8505" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                                  <Key frame="5" value="0.200389" />
                                                  <Key frame="10" value="0.200389" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                                  <Key frame="5" value="113.383" />
                                                  <Key frame="10" value="113.383" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                                  <Key frame="5" value="-44.6514" />
                                                  <Key frame="10" value="-44.6514" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                                  <Key frame="5" value="52.9084" />
                                                  <Key frame="10" value="52.9084" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                                  <Key frame="5" value="19.5144" />
                                                  <Key frame="10" value="19.5144" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                                  <Key frame="5" value="37" />
                                                  <Key frame="10" value="37" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                                  <Key frame="5" value="0.146571" />
                                                  <Key frame="10" value="0.146571" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                                  <Key frame="5" value="-65.5648" />
                                                  <Key frame="10" value="-65.5648" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                                  <Key frame="5" value="14.4166" />
                                                  <Key frame="10" value="14.4166" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                                  <Key frame="5" value="2.02391" />
                                                  <Key frame="10" value="2.02391" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                                  <Key frame="5" value="-5.27591" />
                                                  <Key frame="10" value="-5.27591" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                                  <Key frame="5" value="20.3885" />
                                                  <Key frame="10" value="20.3885" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                                  <Key frame="5" value="19.6902" />
                                                  <Key frame="10" value="19.6902" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                                  <Key frame="5" value="-1.75543" />
                                                  <Key frame="10" value="-1.75543" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                                  <Key frame="5" value="23.8163" />
                                                  <Key frame="10" value="23.8163" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                                  <Key frame="5" value="-5.2711" />
                                                  <Key frame="10" value="-5.2711" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                                  <Key frame="5" value="29.9735" />
                                                  <Key frame="10" value="29.9735" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                                  <Key frame="5" value="-3.86483" />
                                                  <Key frame="10" value="-3.86483" />
                                                </ActuatorCurve>
                                              </ActuatorList>
                                            </Timeline>
                                          </Box>
                                          <Box name="Switch Case" id="1" localization="8" tooltip="Test input value and stimulate the output matching to this value. If there is no&#x0A;output matching, the default output (onDefault) is stimulated.&#x0A;&#x0A;You can edit a case by left double-clicking on the line. You can add a&#x0A;case by right clicking on a line and selecting &apos;Insert a row&apos;. You can delete&#x0A;a case by right clicking on a line and selecting &apos;Remove a row&apos;." plugin="dispatcher_plugin" x="923" y="96">
                                            <bitmap>media/images/box/interaction/choice.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion("Back")):
			self.output_1(p)
		elif(p == self.typeConversion("Knee")):
			self.output_2(p)
		elif(p == self.typeConversion("Frog")):
			self.output_3(p)
		elif(p == self.typeConversion("Belly")):
			self.output_4(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]>
                                              </content>
                                            </script>
                                            <pluginContent>
                                              <keywords>
                                                <keyword>&quot;Back&quot;</keyword>
                                                <keyword>&quot;Knee&quot;</keyword>
                                                <keyword>&quot;Frog&quot;</keyword>
                                                <keyword>&quot;Belly&quot;</keyword>
                                                <keyword></keyword>
                                              </keywords>
                                            </pluginContent>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Value to test." id="2" />
                                            <Output name="onDefault" type="1" type_size="1" nature="1" inner="0" tooltip="If the input value does not match any value set on the box." id="3" />
                                            <Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="4" />
                                            <Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="5" />
                                            <Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="6" />
                                            <Output name="output_4" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="7" />
                                          </Box>
                                          <Box name="Switch Case" id="7" localization="8" tooltip="Test input value and stimulate the output matching to this value. If there is no&#x0A;output matching, the default output (onDefault) is stimulated.&#x0A;&#x0A;You can edit a case by left double-clicking on the line. You can add a&#x0A;case by right clicking on a line and selecting &apos;Insert a row&apos;. You can delete&#x0A;a case by right clicking on a line and selecting &apos;Remove a row&apos;." plugin="dispatcher_plugin" x="955" y="621">
                                            <bitmap>media/images/box/interaction/choice.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion("Crouch")):
			self.output_1(p)
		elif(p == self.typeConversion("Stand")):
			self.output_2(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]>
                                              </content>
                                            </script>
                                            <pluginContent>
                                              <keywords>
                                                <keyword>&quot;Crouch&quot;</keyword>
                                                <keyword>&quot;Stand&quot;</keyword>
                                                <keyword></keyword>
                                              </keywords>
                                            </pluginContent>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Value to test." id="2" />
                                            <Output name="onDefault" type="1" type_size="1" nature="1" inner="0" tooltip="If the input value does not match any value set on the box." id="3" />
                                            <Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="4" />
                                            <Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="5" />
                                          </Box>
                                          <Box name="Get Robot Pose" id="8" localization="8" tooltip="Return NAO&apos;s current pose.&#x0A;&#x0A;Note: The box waits for the robot pose to be stabilized. You can set the maximum&#x0A;time to wait in parameters. After this time is ellapsed, the current pose is sent to the&#x0A;output anyway." x="89" y="41">
                                            <bitmap>media/images/box/sensors/inertial_unit.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.robotPoseProxy = ALProxy("ALRobotPosture")
        self.threadTime = 0.1 #seconds

    def onLoad(self):
        self.bIsRunning = False
        self.bMustStop = False

    def onUnload(self):
        self.bMustStop = True

    def onInput_onStart(self):
        if( self.bIsRunning ):
            return
        self.bIsRunning = True
        self.bMustStop = False
        beginTime = time.time()
        RobotPoseAndTime = ["Unknown", 0.]
        while( not self.bMustStop ):
            RobotPoseAndTime = self.robotPoseProxy.getActualPoseAndTime()
            # as soon as the robot is not moving anymore from its position, give its position
            if( RobotPoseAndTime[1] > 0.5 or time.time() - beginTime > self.getParameter("Time to wait for pose stabilization (s)") ):
                self.bMustStop = True
            if( not self.bMustStop ):
                time.sleep(self.threadTime)
        self.robotPose(RobotPoseAndTime[0])
        self.bIsRunning = False]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Output name="robotPose" type="3" type_size="1" nature="2" inner="0" tooltip='NAO&apos;s current pose. It can be:&#x0A;- &quot;Unknown&quot;&#x0A;- &quot;Stand&quot;&#x0A;- &quot;Sit&quot;&#x0A;- &quot;Crouch&quot;&#x0A;- &quot;Knee&quot;&#x0A;- &quot;Frog&quot;&#x0A;- &quot;Back&quot;&#x0A;- &quot;Belly&quot;&#x0A;- &quot;Left&quot;&#x0A;- &quot;Right&quot;&#x0A;- &quot;HeadBack&quot;' id="3" />
                                            <Parameter name="Time to wait for pose stabilization (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0.5" max="10" tooltip="Maximum time to wait NAO&apos;s pose stabilization. After this time is ellapsed,&#x0A;the current pose is sent to the output even though it is not stabilized." id="4" />
                                          </Box>
                                          <Box name="Get Robot Pose" id="10" localization="8" tooltip="Return NAO&apos;s current pose.&#x0A;&#x0A;Note: The box waits for the robot pose to be stabilized. You can set the maximum&#x0A;time to wait in parameters. After this time is ellapsed, the current pose is sent to the&#x0A;output anyway." x="794" y="96">
                                            <bitmap>media/images/box/sensors/inertial_unit.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.robotPoseProxy = ALProxy("ALRobotPosture")
        self.threadTime = 0.1 #seconds

    def onLoad(self):
        self.bIsRunning = False
        self.bMustStop = False

    def onUnload(self):
        self.bMustStop = True

    def onInput_onStart(self):
        if( self.bIsRunning ):
            return
        self.bIsRunning = True
        self.bMustStop = False
        beginTime = time.time()
        RobotPoseAndTime = ["Unknown", 0.]
        while( not self.bMustStop ):
            RobotPoseAndTime = self.robotPoseProxy.getActualPoseAndTime()
            # as soon as the robot is not moving anymore from its position, give its position
            if( RobotPoseAndTime[1] > 0.5 or time.time() - beginTime > self.getParameter("Time to wait for pose stabilization (s)") ):
                self.bMustStop = True
            if( not self.bMustStop ):
                time.sleep(self.threadTime)
        self.robotPose(RobotPoseAndTime[0])
        self.bIsRunning = False]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Output name="robotPose" type="3" type_size="1" nature="2" inner="0" tooltip='NAO&apos;s current pose. It can be:&#x0A;- &quot;Unknown&quot;&#x0A;- &quot;Stand&quot;&#x0A;- &quot;Sit&quot;&#x0A;- &quot;Crouch&quot;&#x0A;- &quot;Knee&quot;&#x0A;- &quot;Frog&quot;&#x0A;- &quot;Back&quot;&#x0A;- &quot;Belly&quot;&#x0A;- &quot;Left&quot;&#x0A;- &quot;Right&quot;&#x0A;- &quot;HeadBack&quot;' id="3" />
                                            <Parameter name="Time to wait for pose stabilization (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0.5" max="10" tooltip="Maximum time to wait NAO&apos;s pose stabilization. After this time is ellapsed,&#x0A;the current pose is sent to the output even though it is not stabilized." id="4" />
                                          </Box>
                                          <Box name="Get Robot Pose" id="2" localization="8" tooltip="Return NAO&apos;s current pose.&#x0A;&#x0A;Note: The box waits for the robot pose to be stabilized. You can set the maximum&#x0A;time to wait in parameters. After this time is ellapsed, the current pose is sent to the&#x0A;output anyway." x="828" y="626">
                                            <bitmap>media/images/box/sensors/inertial_unit.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.robotPoseProxy = ALProxy("ALRobotPosture")
        self.threadTime = 0.1 #seconds

    def onLoad(self):
        self.bIsRunning = False
        self.bMustStop = False

    def onUnload(self):
        self.bMustStop = True

    def onInput_onStart(self):
        if( self.bIsRunning ):
            return
        self.bIsRunning = True
        self.bMustStop = False
        beginTime = time.time()
        RobotPoseAndTime = ["Unknown", 0.]
        while( not self.bMustStop ):
            RobotPoseAndTime = self.robotPoseProxy.getActualPoseAndTime()
            # as soon as the robot is not moving anymore from its position, give its position
            if( RobotPoseAndTime[1] > 0.5 or time.time() - beginTime > self.getParameter("Time to wait for pose stabilization (s)") ):
                self.bMustStop = True
            if( not self.bMustStop ):
                time.sleep(self.threadTime)
        self.robotPose(RobotPoseAndTime[0])
        self.bIsRunning = False]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Output name="robotPose" type="3" type_size="1" nature="2" inner="0" tooltip='NAO&apos;s current pose. It can be:&#x0A;- &quot;Unknown&quot;&#x0A;- &quot;Stand&quot;&#x0A;- &quot;Sit&quot;&#x0A;- &quot;Crouch&quot;&#x0A;- &quot;Knee&quot;&#x0A;- &quot;Frog&quot;&#x0A;- &quot;Back&quot;&#x0A;- &quot;Belly&quot;&#x0A;- &quot;Left&quot;&#x0A;- &quot;Right&quot;&#x0A;- &quot;HeadBack&quot;' id="3" />
                                            <Parameter name="Time to wait for pose stabilization (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0.5" max="10" tooltip="Maximum time to wait NAO&apos;s pose stabilization. After this time is ellapsed,&#x0A;the current pose is sent to the output even though it is not stabilized." id="4" />
                                          </Box>
                                          <Link inputowner="0" indexofinput="4" outputowner="9" indexofoutput="3" />
                                          <Link inputowner="16" indexofinput="2" outputowner="9" indexofoutput="7" />
                                          <Link inputowner="16" indexofinput="2" outputowner="9" indexofoutput="8" />
                                          <Link inputowner="16" indexofinput="2" outputowner="9" indexofoutput="9" />
                                          <Link inputowner="5" indexofinput="2" outputowner="9" indexofoutput="6" />
                                          <Link inputowner="0" indexofinput="4" outputowner="5" indexofoutput="4" />
                                          <Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" />
                                          <Link inputowner="0" indexofinput="4" outputowner="16" indexofoutput="4" />
                                          <Link inputowner="5" indexofinput="2" outputowner="1" indexofoutput="4" />
                                          <Link inputowner="16" indexofinput="2" outputowner="1" indexofoutput="5" />
                                          <Link inputowner="16" indexofinput="2" outputowner="1" indexofoutput="6" />
                                          <Link inputowner="16" indexofinput="2" outputowner="1" indexofoutput="7" />
                                          <Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="3" />
                                          <Link inputowner="3" indexofinput="2" outputowner="9" indexofoutput="10" />
                                          <Link inputowner="4" indexofinput="2" outputowner="9" indexofoutput="4" />
                                          <Link inputowner="12" indexofinput="2" outputowner="9" indexofoutput="11" />
                                          <Link inputowner="4" indexofinput="2" outputowner="9" indexofoutput="5" />
                                          <Link inputowner="3" indexofinput="2" outputowner="7" indexofoutput="4" />
                                          <Link inputowner="0" indexofinput="4" outputowner="7" indexofoutput="3" />
                                          <Link inputowner="3" indexofinput="2" outputowner="7" indexofoutput="5" />
                                          <Link inputowner="8" indexofinput="2" outputowner="0" indexofoutput="2" />
                                          <Link inputowner="9" indexofinput="2" outputowner="8" indexofoutput="3" />
                                          <Link inputowner="10" indexofinput="2" outputowner="4" indexofoutput="4" />
                                          <Link inputowner="1" indexofinput="2" outputowner="10" indexofoutput="3" />
                                          <Link inputowner="2" indexofinput="2" outputowner="12" indexofoutput="4" />
                                          <Link inputowner="7" indexofinput="2" outputowner="2" indexofoutput="3" />
                                        </Diagram>
                                      </BehaviorKeyframe>
                                    </BehaviorLayer>
                                  </Timeline>
                                </Box>
                                <Box name="Only Once" id="4" localization="8" tooltip="This box&apos;s output is stimulated only the first time the onSignal input is." x="111" y="45">
                                  <bitmap>media/images/box/box-script.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.bFirstTime = True

    def onUnload(self):
        self.bFirstTime = True

    def onInput_onSignal(self):
        if( self.bFirstTime ):
            self.bFirstTime = False
            self.firstTime()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onSignal" type="1" type_size="1" nature="1" inner="0" tooltip="The signal that must pass only once." id="2" />
                                  <Output name="firstTime" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent first time the onSignal input is stimulated." id="3" />
                                </Box>
                                <Box name="Set Stiffness" id="2" localization="8" tooltip="Set motors stiffness." x="716" y="177">
                                  <bitmap>media/images/box/movement/stiffness.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def setStiffness(self, stiffness):
        self.bIsRunning = True
        duration = self.getParameter("Duration (s)")
        if(self.getParameter("Head")):
            ALMotion.post.stiffnessInterpolation("Head", stiffness, duration)
        if(self.getParameter("Left arm")):
            ALMotion.post.stiffnessInterpolation("LArm", stiffness, duration)
        if(self.getParameter("Right arm")):
            ALMotion.post.stiffnessInterpolation("RArm", stiffness, duration)
        if(self.getParameter("Left leg")):
            ALMotion.post.stiffnessInterpolation("LLeg", stiffness, duration)
        if(self.getParameter("Right leg")):
            ALMotion.post.stiffnessInterpolation("RLeg", stiffness, duration)
        time.sleep(duration)
        self.bIsRunning = False

    def onInput_onSet(self):
        if( self.bIsRunning ):
            return
        self.setStiffness(self.getParameter("Motors stiffness (%)")/100.)
        self.onReady() #~ activate output of the box]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onSet" type="1" type_size="1" nature="1" inner="0" tooltip="When this input is stimulated, the stiffness of the selected motors is set to&#x0A;the stiffness parameter value." id="2" />
                                  <Output name="onReady" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when stiffness has been set." id="3" />
                                  <Parameter name="Head" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Do we want to modify the head stiffness?" id="4" />
                                  <Parameter name="Left arm" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Do we want to modify the left arm stiffness?" id="5" />
                                  <Parameter name="Right arm" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Do we want to modify the right arm stiffness?" id="6" />
                                  <Parameter name="Left leg" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Do we want to modify the left leg stiffness?" id="7" />
                                  <Parameter name="Right leg" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Do we want to modify the right leg stiffness?" id="8" />
                                  <Parameter name="Motors stiffness (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Stiffness value the motors are set to." id="9" />
                                  <Parameter name="Duration (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0.02" max="10" tooltip="How much time to go to the max/min stiffness in seconds." id="10" />
                                </Box>
                                <Box name="Get Robot Pose" id="9" localization="8" tooltip="Return NAO&apos;s current pose.&#x0A;&#x0A;Note: The box waits for the robot pose to be stabilized. You can set the maximum&#x0A;time to wait in parameters. After this time is ellapsed, the current pose is sent to the&#x0A;output anyway." x="305" y="73">
                                  <bitmap>media/images/box/sensors/inertial_unit.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.robotPoseProxy = ALProxy("ALRobotPosture")
        self.threadTime = 0.1 #seconds

    def onLoad(self):
        self.bIsRunning = False
        self.bMustStop = False

    def onUnload(self):
        self.bMustStop = True

    def onInput_onStart(self):
        if( self.bIsRunning ):
            return
        self.bIsRunning = True
        self.bMustStop = False
        beginTime = time.time()
        RobotPoseAndTime = ["Unknown", 0.]
        while( not self.bMustStop ):
            RobotPoseAndTime = self.robotPoseProxy.getActualPoseAndTime()
            # as soon as the robot is not moving anymore from its position, give its position
            if( RobotPoseAndTime[1] > 0.5 or time.time() - beginTime > self.getParameter("Time to wait for pose stabilization (s)") ):
                self.bMustStop = True
            if( not self.bMustStop ):
                time.sleep(self.threadTime)
        self.robotPose(RobotPoseAndTime[0])
        self.bIsRunning = False]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Output name="robotPose" type="3" type_size="1" nature="2" inner="0" tooltip='NAO&apos;s current pose. It can be:&#x0A;- &quot;Unknown&quot;&#x0A;- &quot;Stand&quot;&#x0A;- &quot;Sit&quot;&#x0A;- &quot;Crouch&quot;&#x0A;- &quot;Knee&quot;&#x0A;- &quot;Frog&quot;&#x0A;- &quot;Back&quot;&#x0A;- &quot;Belly&quot;&#x0A;- &quot;Left&quot;&#x0A;- &quot;Right&quot;&#x0A;- &quot;HeadBack&quot;' id="3" />
                                  <Parameter name="Time to wait for pose stabilization (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0.5" max="10" tooltip="Maximum time to wait NAO&apos;s pose stabilization. After this time is ellapsed,&#x0A;the current pose is sent to the output even though it is not stabilized." id="4" />
                                </Box>
                                <Box name="Side" id="6" localization="8" tooltip='Stimulates the rightOutput or the leftOutput output depending on the side&#x0A;parameter. If it is set to &quot;Random&quot; then the side is chosen randomly.' x="416" y="404">
                                  <bitmap>media/images/box/movement/move_arm.png</bitmap>
                                  <bitmap>media/images/box/movement/move_leftarm.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import random

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        side = self.getParameter("Side")
        if( side == "Random" ):
            side = random.choice( ["Left", "Right"] )
        if( side == "Left" ):
            self.leftOutput()
        else:
            self.rightOutput()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip='When this input is stimulated the output corresponding to the side set in&#x0A;parameters is stimulated. If the side parameter is set to &quot;Random&quot; then the&#x0A;side is chosen randomly.' id="2" />
                                  <Output name="rightOutput" type="1" type_size="1" nature="2" inner="0" tooltip="The output corresponding to the right." id="3" />
                                  <Output name="leftOutput" type="1" type_size="1" nature="2" inner="0" tooltip="The output corresponding to the left." id="4" />
                                  <Parameter name="Side" inherits_from_parent="1" content_type="3" value="Random" default_value="Random" custom_choice="0" tooltip='Side chosen. If set to &quot;Random&quot; the side is chosen randomly.' id="5">
                                    <Choice value="Left" />
                                    <Choice value="Random" />
                                    <Choice value="Right" />
                                  </Parameter>
                                </Box>
                                <Box name="Left Stand Motion" id="1" localization="8" tooltip="The robot makes the right motion to stand up depending on its current position." x="562" y="451">
                                  <bitmap>media/images/box/movement/stand.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        self.count = 0
        pass

    def onInput_onStop(self):
        self.onUnload()
        pass]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent after a step to sit down is done." id="4" />
                                  <Timeline enable="0">
                                    <BehaviorLayer name="SitDownBehavior">
                                      <BehaviorKeyframe name="DetectRobotPose" index="1">
                                        <Diagram>
                                          <Box name="Switch Case" id="9" localization="8" tooltip="Test input value and stimulate the output matching to this value. If there is no&#x0A;output matching, the default output (onDefault) is stimulated.&#x0A;&#x0A;You can edit a case by left double-clicking on the line. You can add a&#x0A;case by right clicking on a line and selecting &apos;Insert a row&apos;. You can delete&#x0A;a case by right clicking on a line and selecting &apos;Remove a row&apos;." plugin="dispatcher_plugin" x="230" y="73">
                                            <bitmap>media/images/box/interaction/choice.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion("Left")):
			self.output_1(p)
		elif(p == self.typeConversion("Right")):
			self.output_2(p)
		elif(p == self.typeConversion("Back")):
			self.output_3(p)
		elif(p == self.typeConversion("Knee")):
			self.output_4(p)
		elif(p == self.typeConversion("Frog")):
			self.output_5(p)
		elif(p == self.typeConversion("Belly")):
			self.output_6(p)
		elif(p == self.typeConversion("Crouch")):
			self.output_7(p)
		elif(p == self.typeConversion("Sit")):
			self.output_8(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]>
                                              </content>
                                            </script>
                                            <pluginContent>
                                              <keywords>
                                                <keyword>&quot;Left&quot;</keyword>
                                                <keyword>&quot;Right&quot;</keyword>
                                                <keyword>&quot;Back&quot;</keyword>
                                                <keyword>&quot;Knee&quot;</keyword>
                                                <keyword>&quot;Frog&quot;</keyword>
                                                <keyword>&quot;Belly&quot;</keyword>
                                                <keyword>&quot;Crouch&quot;</keyword>
                                                <keyword>&quot;Sit&quot;</keyword>
                                                <keyword></keyword>
                                              </keywords>
                                            </pluginContent>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Value to test." id="2" />
                                            <Output name="onDefault" type="1" type_size="1" nature="1" inner="0" tooltip="If the input value does not match any value set on the box." id="3" />
                                            <Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="4" />
                                            <Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="5" />
                                            <Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="6" />
                                            <Output name="output_4" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="7" />
                                            <Output name="output_5" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="8" />
                                            <Output name="output_6" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="9" />
                                            <Output name="output_7" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="10" />
                                            <Output name="output_8" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="11" />
                                          </Box>
                                          <Box name="SitToCrouch" id="12" localization="8" tooltip="First motion to Stand up from a sitting position" x="689" y="627">
                                            <bitmap>media/images/box/movement/move.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #~ self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            <Timeline enable="1" fps="25" start_frame="1" end_frame="180" size="180" resources_acquisition="1">
                                              <ActuatorList model="nao">
                                                <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                                  <Key frame="15" value="0.0854875" />
                                                  <Key frame="28" value="-16" />
                                                  <Key frame="39" value="-19.9538" />
                                                  <Key frame="55" value="-27" />
                                                  <Key frame="75" value="-30" />
                                                  <Key frame="94" value="-16.4382" />
                                                  <Key frame="126" value="-0.538656" />
                                                  <Key frame="180" value="-0.538656" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                                  <Key frame="15" value="21.2674" />
                                                  <Key frame="28" value="21.1795" />
                                                  <Key frame="39" value="13" />
                                                  <Key frame="55" value="15.8" />
                                                  <Key frame="75" value="9" />
                                                  <Key frame="94" value="20.0369" />
                                                  <Key frame="126" value="21.707" />
                                                  <Key frame="180" value="21.707" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                                  <Key frame="15" value="32.4344" />
                                                  <Key frame="21" value="42" />
                                                  <Key frame="28" value="76.0287" />
                                                  <Key frame="39" value="112.68" />
                                                  <Key frame="55" value="119.496" />
                                                  <Key frame="75" value="118.48" />
                                                  <Key frame="85" value="119.496" />
                                                  <Key frame="94" value="116.195" />
                                                  <Key frame="109" value="92.4645" />
                                                  <Key frame="126" value="81.5659" />
                                                  <Key frame="180" value="69.7005" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                                  <Key frame="15" value="20.1296" />
                                                  <Key frame="28" value="38.6748" />
                                                  <Key frame="39" value="36.5654" />
                                                  <Key frame="48" value="36" />
                                                  <Key frame="55" value="0.5" />
                                                  <Key frame="75" value="29.1825" />
                                                  <Key frame="85" value="31.7313" />
                                                  <Key frame="94" value="32.3466" />
                                                  <Key frame="109" value="38.1474" />
                                                  <Key frame="126" value="33.0497" />
                                                  <Key frame="180" value="15.0319" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                                  <Key frame="15" value="-27.5077" />
                                                  <Key frame="28" value="-104.413" />
                                                  <Key frame="39" value="-117.685" />
                                                  <Key frame="55" value="5" />
                                                  <Key frame="75" value="4.66067" />
                                                  <Key frame="85" value="4.39699" />
                                                  <Key frame="94" value="3.78175" />
                                                  <Key frame="109" value="-18.1033" />
                                                  <Key frame="126" value="-96.239" />
                                                  <Key frame="180" value="-55.3694" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                                  <Key frame="15" value="-69.7005" />
                                                  <Key frame="28" value="-58.9778" />
                                                  <Key frame="39" value="-39.0263" />
                                                  <Key frame="48" value="-49" />
                                                  <Key frame="55" value="-0.5" />
                                                  <Key frame="75" value="-4.57277" />
                                                  <Key frame="85" value="-3.43018" />
                                                  <Key frame="94" value="-0.969213" />
                                                  <Key frame="109" value="-19.0749" />
                                                  <Key frame="126" value="-28.4793" />
                                                  <Key frame="180" value="-55.7258" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                                  <Key frame="15" value="-61.6097" />
                                                  <Key frame="28" value="-62.7523" />
                                                  <Key frame="39" value="-62.3128" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                                  <Key frame="15" value="0.0181527" />
                                                  <Key frame="28" value="0.126571" />
                                                  <Key frame="39" value="0.140026" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                                  <Key frame="15" value="28.4" />
                                                  <Key frame="28" value="32.9" />
                                                  <Key frame="39" value="35.9" />
                                                  <Key frame="55" value="58.094" />
                                                  <Key frame="64" value="37.3" />
                                                  <Key frame="75" value="43.0645" />
                                                  <Key frame="94" value="64.2" />
                                                  <Key frame="109" value="67.2" />
                                                  <Key frame="126" value="80.7" />
                                                  <Key frame="180" value="61.2" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                                  <Key frame="15" value="-13.9724" />
                                                  <Key frame="21" value="-28.3" />
                                                  <Key frame="28" value="-23.8163" />
                                                  <Key frame="39" value="-29.2" />
                                                  <Key frame="55" value="-43.2" />
                                                  <Key frame="64" value="-35" />
                                                  <Key frame="75" value="-29.2655" />
                                                  <Key frame="94" value="-4.39218" />
                                                  <Key frame="109" value="-8.87466" />
                                                  <Key frame="126" value="-39.461" />
                                                  <Key frame="180" value="-33.9238" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                                  <Key frame="15" value="31.204" />
                                                  <Key frame="28" value="40.7842" />
                                                  <Key frame="39" value="42.1904" />
                                                  <Key frame="55" value="46.8487" />
                                                  <Key frame="64" value="17.0534" />
                                                  <Key frame="75" value="9.31893" />
                                                  <Key frame="94" value="49.837" />
                                                  <Key frame="109" value="58.0988" />
                                                  <Key frame="126" value="52.7374" />
                                                  <Key frame="180" value="20.9206" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                                  <Key frame="15" value="60.9066" />
                                                  <Key frame="28" value="53.5237" />
                                                  <Key frame="39" value="45.4376" />
                                                  <Key frame="55" value="53.9631" />
                                                  <Key frame="64" value="61.1702" />
                                                  <Key frame="75" value="35.7695" />
                                                  <Key frame="94" value="51.0627" />
                                                  <Key frame="109" value="48.7775" />
                                                  <Key frame="126" value="70.8383" />
                                                  <Key frame="180" value="61.7855" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                                  <Key frame="15" value="42.542" />
                                                  <Key frame="28" value="44.2119" />
                                                  <Key frame="39" value="42.1904" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                                  <Key frame="15" value="0.0181527" />
                                                  <Key frame="28" value="0.0665718" />
                                                  <Key frame="39" value="0.0720262" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                                  <Key frame="15" value="-38.7578" />
                                                  <Key frame="28" value="-37.3412" />
                                                  <Key frame="39" value="-43.0541" />
                                                  <Key frame="75" value="-28.5959" />
                                                  <Key frame="82" value="-36.9896" />
                                                  <Key frame="94" value="-49.2155" />
                                                  <Key frame="126" value="-24.871" />
                                                  <Key frame="145" value="-16.1697" />
                                                  <Key frame="180" value="-9.92936" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                                  <Key frame="15" value="8.25942" />
                                                  <Key frame="28" value="7.64074" />
                                                  <Key frame="39" value="12.0353" />
                                                  <Key frame="55" value="31" />
                                                  <Key frame="75" value="31.9952" />
                                                  <Key frame="82" value="42.0943" />
                                                  <Key frame="94" value="35" />
                                                  <Key frame="126" value="14.5876" />
                                                  <Key frame="145" value="4.65586" />
                                                  <Key frame="180" value="4.30429" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                                  <Key frame="15" value="-88.9488" />
                                                  <Key frame="28" value="-90" />
                                                  <Key frame="39" value="-90" />
                                                  <Key frame="55" value="-90" />
                                                  <Key frame="75" value="-87.3668" />
                                                  <Key frame="82" value="-90" />
                                                  <Key frame="94" value="-89.3612" />
                                                  <Key frame="126" value="-48.6944" />
                                                  <Key frame="145" value="-38.8505" />
                                                  <Key frame="180" value="-37.1806" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                                  <Key frame="15" value="48.3429" />
                                                  <Key frame="28" value="54.6752" />
                                                  <Key frame="39" value="69.6168" />
                                                  <Key frame="55" value="96" />
                                                  <Key frame="75" value="70" />
                                                  <Key frame="82" value="72.9567" />
                                                  <Key frame="94" value="63" />
                                                  <Key frame="126" value="34.1044" />
                                                  <Key frame="145" value="82.5327" />
                                                  <Key frame="180" value="90.5309" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                                  <Key frame="15" value="45.003" />
                                                  <Key frame="28" value="43.5603" />
                                                  <Key frame="39" value="43.5603" />
                                                  <Key frame="55" value="38" />
                                                  <Key frame="75" value="45" />
                                                  <Key frame="82" value="38.3747" />
                                                  <Key frame="94" value="45" />
                                                  <Key frame="109" value="45" />
                                                  <Key frame="118" value="31" />
                                                  <Key frame="126" value="27.6004" />
                                                  <Key frame="145" value="-21.1795" />
                                                  <Key frame="180" value="-45.1739" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                                  <Key frame="15" value="-2.81494" />
                                                  <Key frame="28" value="-0.0417638" />
                                                  <Key frame="39" value="0.0461279" />
                                                  <Key frame="55" value="-10" />
                                                  <Key frame="75" value="-0.532261" />
                                                  <Key frame="82" value="-4.26057" />
                                                  <Key frame="88" value="9" />
                                                  <Key frame="94" value="6" />
                                                  <Key frame="109" value="-14" />
                                                  <Key frame="118" value="-20" />
                                                  <Key frame="126" value="-25.2273" />
                                                  <Key frame="145" value="-24.2605" />
                                                  <Key frame="180" value="-5.18802" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                                  <Key frame="15" value="-8.00055" />
                                                  <Key frame="28" value="-8.30857" />
                                                  <Key frame="39" value="-8.48435" />
                                                  <Key frame="55" value="-31" />
                                                  <Key frame="75" value="-8.87947" />
                                                  <Key frame="82" value="1.44741" />
                                                  <Key frame="94" value="10" />
                                                  <Key frame="126" value="-10.4615" />
                                                  <Key frame="145" value="-25.2273" />
                                                  <Key frame="180" value="-7.4732" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                                  <Key frame="15" value="-89.9987" />
                                                  <Key frame="28" value="-90" />
                                                  <Key frame="39" value="-90" />
                                                  <Key frame="55" value="-90" />
                                                  <Key frame="75" value="-49.1057" />
                                                  <Key frame="82" value="-34.1405" />
                                                  <Key frame="94" value="-3" />
                                                  <Key frame="109" value="-23" />
                                                  <Key frame="126" value="-39.5489" />
                                                  <Key frame="145" value="-43.2403" />
                                                  <Key frame="180" value="-41.8341" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                                  <Key frame="15" value="41.4825" />
                                                  <Key frame="28" value="54.9601" />
                                                  <Key frame="39" value="67.8801" />
                                                  <Key frame="55" value="96" />
                                                  <Key frame="75" value="121.04" />
                                                  <Key frame="82" value="121.04" />
                                                  <Key frame="94" value="121.04" />
                                                  <Key frame="126" value="114.696" />
                                                  <Key frame="145" value="121.039" />
                                                  <Key frame="180" value="92.7234" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                                  <Key frame="15" value="44.4708" />
                                                  <Key frame="28" value="43.2822" />
                                                  <Key frame="39" value="43.2822" />
                                                  <Key frame="55" value="38" />
                                                  <Key frame="75" value="-26" />
                                                  <Key frame="82" value="-39" />
                                                  <Key frame="94" value="-63" />
                                                  <Key frame="126" value="-68.15" />
                                                  <Key frame="145" value="-68.15" />
                                                  <Key frame="180" value="-42.1904" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                                  <Key frame="15" value="2.89802" />
                                                  <Key frame="28" value="0.315349" />
                                                  <Key frame="39" value="-1.53038" />
                                                  <Key frame="55" value="10" />
                                                  <Key frame="75" value="22.6737" />
                                                  <Key frame="82" value="4.97361" />
                                                  <Key frame="94" value="5.94664" />
                                                  <Key frame="126" value="-0.617646" />
                                                  <Key frame="145" value="0.964405" />
                                                  <Key frame="180" value="5.09532" />
                                                </ActuatorCurve>
                                              </ActuatorList>
                                            </Timeline>
                                          </Box>
                                          <Box name="CrouchToStand" id="3" localization="8" tooltip="From the old bad position" x="1206" y="505">
                                            <bitmap>media/images/box/movement/move.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		""

	def onInput_onStop(self):
		""]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="15">
                                              <ActuatorList model="nao">
                                                <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                                  <Key frame="15" value="3.86483" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                                  <Key frame="15" value="-2.37548" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                                  <Key frame="15" value="84.1148" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                                  <Key frame="15" value="8.44001" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                                  <Key frame="15" value="-52.1174" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                                  <Key frame="15" value="-21.2722" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                                  <Key frame="15" value="-60.4671" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                                  <Key frame="15" value="0.218207" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                                  <Key frame="15" value="90.8776" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                                  <Key frame="15" value="-12.8298" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                                  <Key frame="15" value="58.5383" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                                  <Key frame="15" value="37.791" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                                  <Key frame="15" value="43.0693" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                                  <Key frame="15" value="0.26148" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                                  <Key frame="15" value="-13.7087" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                                  <Key frame="15" value="3.33748" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                                  <Key frame="15" value="12.1267" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                                  <Key frame="15" value="-4.39218" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                                  <Key frame="15" value="4.57277" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                                  <Key frame="15" value="-3.43018" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                                  <Key frame="15" value="-8.5279" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                                  <Key frame="15" value="12.1315" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                                  <Key frame="15" value="-5.18802" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                                  <Key frame="15" value="4.65586" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                                  <Key frame="15" value="7.64418" />
                                                </ActuatorCurve>
                                              </ActuatorList>
                                            </Timeline>
                                          </Box>
                                          <Box name="BellyToStand" id="16" localization="8" tooltip="First motion to Stand up from the belly" x="1199" y="347">
                                            <bitmap>media/images/box/movement/move.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="100">
                                              <ActuatorList model="nao">
                                                <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                                  <Key frame="10" value="0" />
                                                  <Key frame="20" value="-13" />
                                                  <Key frame="34" value="16.4" />
                                                  <Key frame="45" value="17" />
                                                  <Key frame="58" value="-28.4" />
                                                  <Key frame="65" value="-17" />
                                                  <Key frame="76" value="3" />
                                                  <Key frame="89" value="-22.4" />
                                                  <Key frame="100" value="3.86483" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="-38.5" />
                                                  <Key frame="20" value="-31.3797" />
                                                  <Key frame="34" value="6.15002" />
                                                  <Key frame="45" value="29.5" />
                                                  <Key frame="58" value="21.8" />
                                                  <Key frame="65" value="21.2674" />
                                                  <Key frame="76" value="-6" />
                                                  <Key frame="89" value="-30.5887" />
                                                  <Key frame="100" value="7.3" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="4.83164" />
                                                  <Key frame="20" value="-86.6" />
                                                  <Key frame="34" value="-70.0473" />
                                                  <Key frame="45" value="-13.5329" />
                                                  <Key frame="58" value="12.483" />
                                                  <Key frame="65" value="25.7547" />
                                                  <Key frame="76" value="52.3859" />
                                                  <Key frame="89" value="55.0226" />
                                                  <Key frame="100" value="84.73" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="89.0319" />
                                                  <Key frame="20" value="11" />
                                                  <Key frame="34" value="4.74856" />
                                                  <Key frame="45" value="4.74856" />
                                                  <Key frame="58" value="13.0104" />
                                                  <Key frame="65" value="10.4615" />
                                                  <Key frame="76" value="0.498473" />
                                                  <Key frame="89" value="7.56109" />
                                                  <Key frame="100" value="8.5279" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                                  <Key frame="10" value="-119" />
                                                  <Key frame="20" value="-89.4714" />
                                                  <Key frame="34" value="-92.4597" />
                                                  <Key frame="45" value="-96.5906" />
                                                  <Key frame="58" value="-112.323" />
                                                  <Key frame="65" value="-111.796" />
                                                  <Key frame="76" value="-38.1426" />
                                                  <Key frame="89" value="-22.6737" />
                                                  <Key frame="100" value="-52.1174" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="-0.5" />
                                                  <Key frame="20" value="-21.8874" />
                                                  <Key frame="34" value="-36.3896" />
                                                  <Key frame="45" value="-89.2125" />
                                                  <Key frame="58" value="-0.498473" />
                                                  <Key frame="65" value="-0.498473" />
                                                  <Key frame="76" value="-24.2605" />
                                                  <Key frame="89" value="-37.2" />
                                                  <Key frame="100" value="-22.5027" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                                  <Key frame="10" value="-88.8609" />
                                                  <Key frame="20" value="-86.4831" />
                                                  <Key frame="34" value="-85.7799" />
                                                  <Key frame="45" value="-81.8248" />
                                                  <Key frame="58" value="-82.2643" />
                                                  <Key frame="65" value="-82.5279" />
                                                  <Key frame="76" value="-82.7037" />
                                                  <Key frame="89" value="-82.5279" />
                                                  <Key frame="100" value="-62.2249" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                                  <Key frame="10" value="0.0585718" />
                                                  <Key frame="20" value="0.0127537" />
                                                  <Key frame="34" value="0.0262082" />
                                                  <Key frame="45" value="0.0469355" />
                                                  <Key frame="58" value="0.0494809" />
                                                  <Key frame="65" value="0.04839" />
                                                  <Key frame="76" value="0.0472991" />
                                                  <Key frame="89" value="0.04839" />
                                                  <Key frame="100" value="0.217844" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="-1.57965" />
                                                  <Key frame="20" value="-86.6" />
                                                  <Key frame="34" value="-71.6342" />
                                                  <Key frame="45" value="4.12851" />
                                                  <Key frame="58" value="73" />
                                                  <Key frame="65" value="43.3" />
                                                  <Key frame="76" value="43" />
                                                  <Key frame="89" value="74" />
                                                  <Key frame="100" value="91.3171" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="-87.982" />
                                                  <Key frame="20" value="-0.964405" />
                                                  <Key frame="34" value="-4.39218" />
                                                  <Key frame="45" value="-4.04062" />
                                                  <Key frame="58" value="-8.96255" />
                                                  <Key frame="65" value="-53.8" />
                                                  <Key frame="76" value="-38.8" />
                                                  <Key frame="89" value="-48.5" />
                                                  <Key frame="100" value="-12.4782" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                                  <Key frame="10" value="119" />
                                                  <Key frame="20" value="90.5309" />
                                                  <Key frame="34" value="91.9371" />
                                                  <Key frame="45" value="102.396" />
                                                  <Key frame="58" value="76.0287" />
                                                  <Key frame="65" value="71.5" />
                                                  <Key frame="76" value="55.7258" />
                                                  <Key frame="89" value="55" />
                                                  <Key frame="100" value="58.3625" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="6" />
                                                  <Key frame="20" value="20.2127" />
                                                  <Key frame="34" value="36.5606" />
                                                  <Key frame="45" value="48.7775" />
                                                  <Key frame="58" value="88.8561" />
                                                  <Key frame="65" value="42" />
                                                  <Key frame="76" value="42.2" />
                                                  <Key frame="89" value="66.1801" />
                                                  <Key frame="100" value="39.0215" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                                  <Key frame="10" value="86.4831" />
                                                  <Key frame="20" value="88.8609" />
                                                  <Key frame="34" value="86.9273" />
                                                  <Key frame="45" value="82.9722" />
                                                  <Key frame="58" value="80.5112" />
                                                  <Key frame="65" value="80.687" />
                                                  <Key frame="76" value="80.687" />
                                                  <Key frame="89" value="31.2" />
                                                  <Key frame="100" value="40.6963" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                                  <Key frame="10" value="0.0185718" />
                                                  <Key frame="20" value="0.0196627" />
                                                  <Key frame="34" value="0.0407536" />
                                                  <Key frame="45" value="0.0545718" />
                                                  <Key frame="58" value="0.0574809" />
                                                  <Key frame="65" value="0.0574809" />
                                                  <Key frame="76" value="0.0549355" />
                                                  <Key frame="89" value="0.0574809" />
                                                  <Key frame="100" value="0.260753" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="1.3" />
                                                  <Key frame="20" value="2" />
                                                  <Key frame="34" value="-24.9588" />
                                                  <Key frame="45" value="-44.6466" />
                                                  <Key frame="58" value="-59.6761" />
                                                  <Key frame="65" value="-65.621" />
                                                  <Key frame="76" value="-65.621" />
                                                  <Key frame="89" value="-32.5175" />
                                                  <Key frame="100" value="-13.5329" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="0" />
                                                  <Key frame="20" value="-0.00240423" />
                                                  <Key frame="34" value="-0.090296" />
                                                  <Key frame="45" value="-17.8444" />
                                                  <Key frame="58" value="-14.5924" />
                                                  <Key frame="65" value="-18.3718" />
                                                  <Key frame="76" value="-13.0104" />
                                                  <Key frame="89" value="4.30429" />
                                                  <Key frame="100" value="3.42537" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="-46.1" />
                                                  <Key frame="20" value="-0.00240423" />
                                                  <Key frame="34" value="-90.3551" />
                                                  <Key frame="45" value="-95.1891" />
                                                  <Key frame="58" value="-68.7337" />
                                                  <Key frame="65" value="-91.5856" />
                                                  <Key frame="76" value="-18.4597" />
                                                  <Key frame="89" value="-40.6963" />
                                                  <Key frame="100" value="12.0388" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                                  <Key frame="10" value="-5.29" />
                                                  <Key frame="20" value="114" />
                                                  <Key frame="34" value="119.535" />
                                                  <Key frame="45" value="99.8474" />
                                                  <Key frame="58" value="121.478" />
                                                  <Key frame="65" value="121.478" />
                                                  <Key frame="76" value="121.478" />
                                                  <Key frame="89" value="121.478" />
                                                  <Key frame="100" value="-4.39218" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                                  <Key frame="10" value="36.9" />
                                                  <Key frame="20" value="-59" />
                                                  <Key frame="34" value="-65.2133" />
                                                  <Key frame="45" value="-67.9785" />
                                                  <Key frame="58" value="-67.9785" />
                                                  <Key frame="65" value="-33.748" />
                                                  <Key frame="76" value="-67.9785" />
                                                  <Key frame="89" value="-67.9785" />
                                                  <Key frame="100" value="4.92434" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="0" />
                                                  <Key frame="20" value="-0.00240423" />
                                                  <Key frame="34" value="-0.353971" />
                                                  <Key frame="45" value="0.261271" />
                                                  <Key frame="58" value="5.62267" />
                                                  <Key frame="65" value="0.788621" />
                                                  <Key frame="76" value="5.44688" />
                                                  <Key frame="89" value="-2.02391" />
                                                  <Key frame="100" value="-3.51807" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="0" />
                                                  <Key frame="20" value="-0.00240423" />
                                                  <Key frame="34" value="-0.090296" />
                                                  <Key frame="45" value="21.619" />
                                                  <Key frame="58" value="17.0486" />
                                                  <Key frame="65" value="17.0486" />
                                                  <Key frame="76" value="-11.1647" />
                                                  <Key frame="89" value="-7.29742" />
                                                  <Key frame="100" value="-8.5279" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="-46.1" />
                                                  <Key frame="20" value="0.00240423" />
                                                  <Key frame="34" value="-89.9108" />
                                                  <Key frame="45" value="-73.3872" />
                                                  <Key frame="58" value="-59.4124" />
                                                  <Key frame="65" value="-66.4437" />
                                                  <Key frame="76" value="-67.7621" />
                                                  <Key frame="89" value="-72.7719" />
                                                  <Key frame="100" value="12.2194" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                                  <Key frame="10" value="-5.29" />
                                                  <Key frame="20" value="114" />
                                                  <Key frame="34" value="121.039" />
                                                  <Key frame="45" value="16.1697" />
                                                  <Key frame="58" value="23.201" />
                                                  <Key frame="65" value="20.4764" />
                                                  <Key frame="76" value="41.2188" />
                                                  <Key frame="89" value="115.399" />
                                                  <Key frame="100" value="-5.18802" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                                  <Key frame="10" value="36.9" />
                                                  <Key frame="20" value="-59" />
                                                  <Key frame="34" value="-65.9212" />
                                                  <Key frame="45" value="12.3903" />
                                                  <Key frame="58" value="40.6915" />
                                                  <Key frame="65" value="52.8695" />
                                                  <Key frame="76" value="47.2833" />
                                                  <Key frame="89" value="-28.743" />
                                                  <Key frame="100" value="4.39218" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="0" />
                                                  <Key frame="20" value="-0.00240423" />
                                                  <Key frame="34" value="0.0854875" />
                                                  <Key frame="45" value="25.9257" />
                                                  <Key frame="58" value="17.2244" />
                                                  <Key frame="65" value="6.76526" />
                                                  <Key frame="76" value="2.37067" />
                                                  <Key frame="89" value="6.94104" />
                                                  <Key frame="100" value="7.73207" />
                                                </ActuatorCurve>
                                              </ActuatorList>
                                            </Timeline>
                                          </Box>
                                          <Box name="BackToStand" id="5" localization="8" tooltip="First motion to Stand up from the back" x="1194" y="231">
                                            <bitmap>media/images/box/movement/move.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="105" resources_acquisition="1">
                                              <BehaviorLayer name="behavior_layer1">
                                                <BehaviorKeyframe name="keyframe10" index="10">
                                                  <Diagram>
                                                    <Box name="Disable Anti-Collision" id="2" localization="8" tooltip="Disable the collision protection on some specific part of NAO&apos;s body.&#x0A;&#x0A;Note: When this box is unloaded, the collision protection state will be reset to&#x0A;its previous state (enabled or disabled)." x="134" y="41">
                                                      <bitmap>media/images/box/sensors/anti_collision.png</bitmap>
                                                      <script language="4">
                                                        <content>
                                                          <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.motion = ALProxy( "ALMotion" )

    def onLoad(self):
        self.collisionLArmState = self.motion.getCollisionProtectionEnabled("LArm")
        self.collisionRArmState = self.motion.getCollisionProtectionEnabled("RArm")

    def onUnload(self):
        self.motion.setCollisionProtectionEnabled("LArm", self.collisionLArmState)
        self.motion.setCollisionProtectionEnabled("RArm", self.collisionRArmState)

    def onInput_onSet(self):
        # enable/disable collision protection
        result = self.motion.setCollisionProtectionEnabled( self.getParameter("Body part"), False )
        if( result ):
            self.success()
        else:
            self.logger.warning( "Disabling collision protection failed. Deactivation succeeds only if the current state of the chain is not in collision. If you want to deactivate collision of both arms, they need to be off collision." )
            self.failure()]]>
                                                        </content>
                                                      </script>
                                                      <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                      <Input name="onSet" type="1" type_size="1" nature="1" inner="0" tooltip="The anti-collision feature is enabled or disabled when this input is stimulated." id="2" />
                                                      <Output name="success" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent if the collision protection has been successfully enabled or disabled.&#x0A;&#x0A;Note: The only case where there is a failure is when you try to disable the&#x0A;anti-collision while it is currently in collision with some part of his body." id="3" />
                                                      <Output name="failure" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent if the collision protection has failed to be enabled or disabled.&#x0A;&#x0A;Note: The only case where there is a failure is when you try to disable the&#x0A;anti-collision while it is currently in collision with some part of his body." id="4" />
                                                      <Parameter name="Body part" inherits_from_parent="0" content_type="3" value="Arms" default_value="Arms" custom_choice="0" tooltip="Body part which avoids the collision." id="5">
                                                        <Choice value="Arms" />
                                                        <Choice value="LArm" />
                                                        <Choice value="RArm" />
                                                      </Parameter>
                                                    </Box>
                                                    <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                  </Diagram>
                                                </BehaviorKeyframe>
                                              </BehaviorLayer>
                                              <ActuatorList model="nao">
                                                <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                                  <Key frame="10" value="-1.40867" />
                                                  <Key frame="20" value="-2.73208e-05" />
                                                  <Key frame="28" value="2.37067" />
                                                  <Key frame="36" value="3.86374e-05" />
                                                  <Key frame="43" value="1.93188e-05" />
                                                  <Key frame="48" value="1.93187e-05" />
                                                  <Key frame="56" value="-29.4461" />
                                                  <Key frame="65" value="-17.3171" />
                                                  <Key frame="74" value="15.1" />
                                                  <Key frame="80" value="6.9" />
                                                  <Key frame="86" value="-0.538656" />
                                                  <Key frame="105" value="3.77694" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="3.60116" />
                                                  <Key frame="20" value="0" />
                                                  <Key frame="28" value="29.5016" />
                                                  <Key frame="36" value="-38.5028" />
                                                  <Key frame="43" value="0" />
                                                  <Key frame="48" value="20" />
                                                  <Key frame="56" value="9.84147" />
                                                  <Key frame="65" value="19.7732" />
                                                  <Key frame="74" value="0.6" />
                                                  <Key frame="80" value="1.7" />
                                                  <Key frame="86" value="21.707" />
                                                  <Key frame="105" value="-2.28759" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="119.496" />
                                                  <Key frame="20" value="119.5" />
                                                  <Key frame="26" value="111.889" />
                                                  <Key frame="36" value="119.496" />
                                                  <Key frame="43" value="119.496" />
                                                  <Key frame="48" value="119.496" />
                                                  <Key frame="56" value="119.008" />
                                                  <Key frame="65" value="116.723" />
                                                  <Key frame="74" value="82.5327" />
                                                  <Key frame="80" value="51.0681" />
                                                  <Key frame="86" value="51.0681" />
                                                  <Key frame="105" value="84.2027" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="61.5266" />
                                                  <Key frame="20" value="21" />
                                                  <Key frame="26" value="20" />
                                                  <Key frame="36" value="20" />
                                                  <Key frame="43" value="21" />
                                                  <Key frame="48" value="0.498473" />
                                                  <Key frame="56" value="26.1941" />
                                                  <Key frame="65" value="32.3466" />
                                                  <Key frame="74" value="40.4326" />
                                                  <Key frame="80" value="50" />
                                                  <Key frame="86" value="39" />
                                                  <Key frame="105" value="8.61579" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                                  <Key frame="10" value="-43.8556" />
                                                  <Key frame="20" value="9" />
                                                  <Key frame="26" value="14.7682" />
                                                  <Key frame="36" value="5" />
                                                  <Key frame="43" value="5" />
                                                  <Key frame="48" value="5" />
                                                  <Key frame="56" value="4.66067" />
                                                  <Key frame="65" value="3.95753" />
                                                  <Key frame="74" value="1.49656" />
                                                  <Key frame="80" value="-0.0352695" />
                                                  <Key frame="86" value="-0.0352695" />
                                                  <Key frame="105" value="-52.2932" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="-40.6963" />
                                                  <Key frame="20" value="-2" />
                                                  <Key frame="26" value="-88.5" />
                                                  <Key frame="36" value="-89.5017" />
                                                  <Key frame="43" value="-40" />
                                                  <Key frame="48" value="-0.498473" />
                                                  <Key frame="56" value="-5.53958" />
                                                  <Key frame="65" value="-1.23289" />
                                                  <Key frame="74" value="-10.901" />
                                                  <Key frame="80" value="-26" />
                                                  <Key frame="86" value="-32.0829" />
                                                  <Key frame="105" value="-21.7996" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                                  <Key frame="10" value="-66.0043" />
                                                  <Key frame="26" value="-98.8758" />
                                                  <Key frame="56" value="-61.8734" />
                                                  <Key frame="65" value="-61.7855" />
                                                  <Key frame="74" value="-61.8734" />
                                                  <Key frame="105" value="-62.137" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                                  <Key frame="10" value="0" />
                                                  <Key frame="20" value="0" />
                                                  <Key frame="26" value="0.0182082" />
                                                  <Key frame="43" value="0" />
                                                  <Key frame="56" value="0.16439" />
                                                  <Key frame="65" value="0.171662" />
                                                  <Key frame="74" value="0.176753" />
                                                  <Key frame="105" value="0.215298" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="119.496" />
                                                  <Key frame="20" value="119.5" />
                                                  <Key frame="26" value="116.806" />
                                                  <Key frame="36" value="119.496" />
                                                  <Key frame="43" value="119.496" />
                                                  <Key frame="48" value="119.496" />
                                                  <Key frame="56" value="116.454" />
                                                  <Key frame="65" value="73.7388" />
                                                  <Key frame="74" value="54.842" />
                                                  <Key frame="80" value="42.0098" />
                                                  <Key frame="86" value="42.0098" />
                                                  <Key frame="105" value="91.2292" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="-56.1604" />
                                                  <Key frame="20" value="-21" />
                                                  <Key frame="26" value="-20" />
                                                  <Key frame="36" value="-20" />
                                                  <Key frame="43" value="-21" />
                                                  <Key frame="48" value="-0.498473" />
                                                  <Key frame="56" value="-17.1365" />
                                                  <Key frame="60" value="-25.4" />
                                                  <Key frame="65" value="-4.04062" />
                                                  <Key frame="74" value="-15.2908" />
                                                  <Key frame="80" value="-28.5624" />
                                                  <Key frame="86" value="-28.5624" />
                                                  <Key frame="105" value="-12.5661" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                                  <Key frame="10" value="43.5967" />
                                                  <Key frame="20" value="-9" />
                                                  <Key frame="26" value="-7.02893" />
                                                  <Key frame="36" value="-5" />
                                                  <Key frame="43" value="-5" />
                                                  <Key frame="48" value="-5" />
                                                  <Key frame="56" value="112.328" />
                                                  <Key frame="65" value="48.9581" />
                                                  <Key frame="74" value="14.3288" />
                                                  <Key frame="80" value="-4.75993" />
                                                  <Key frame="86" value="-4.75993" />
                                                  <Key frame="105" value="59.0656" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="35.7695" />
                                                  <Key frame="20" value="2" />
                                                  <Key frame="26" value="88.5" />
                                                  <Key frame="36" value="89.5017" />
                                                  <Key frame="43" value="40" />
                                                  <Key frame="48" value="0.498473" />
                                                  <Key frame="52" value="11" />
                                                  <Key frame="56" value="59.9398" />
                                                  <Key frame="65" value="50.008" />
                                                  <Key frame="74" value="47.547" />
                                                  <Key frame="80" value="46.1434" />
                                                  <Key frame="86" value="46.1434" />
                                                  <Key frame="105" value="39.0215" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                                  <Key frame="10" value="40.4326" />
                                                  <Key frame="26" value="102.484" />
                                                  <Key frame="56" value="41.5752" />
                                                  <Key frame="65" value="41.2236" />
                                                  <Key frame="74" value="41.3994" />
                                                  <Key frame="105" value="40.7842" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                                  <Key frame="10" value="0.0502082" />
                                                  <Key frame="26" value="0.0763898" />
                                                  <Key frame="56" value="0.125481" />
                                                  <Key frame="65" value="0.154208" />
                                                  <Key frame="74" value="0.166208" />
                                                  <Key frame="105" value="0.258207" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="-26.9804" />
                                                  <Key frame="20" value="0" />
                                                  <Key frame="32" value="0.441863" />
                                                  <Key frame="36" value="-2.73208e-05" />
                                                  <Key frame="43" value="-37.5274" />
                                                  <Key frame="56" value="-28.5624" />
                                                  <Key frame="65" value="-49.217" />
                                                  <Key frame="74" value="-39.9" />
                                                  <Key frame="80" value="-23.0475" />
                                                  <Key frame="86" value="-23.0475" />
                                                  <Key frame="105" value="-13.1814" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="8.52309" />
                                                  <Key frame="20" value="0" />
                                                  <Key frame="32" value="1.31597" />
                                                  <Key frame="36" value="0" />
                                                  <Key frame="43" value="-3.54635" />
                                                  <Key frame="48" value="31" />
                                                  <Key frame="56" value="31.9902" />
                                                  <Key frame="65" value="34.9785" />
                                                  <Key frame="74" value="35.9" />
                                                  <Key frame="80" value="17" />
                                                  <Key frame="86" value="1" />
                                                  <Key frame="105" value="3.60116" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="10.6325" />
                                                  <Key frame="20" value="-10" />
                                                  <Key frame="32" value="16.1697" />
                                                  <Key frame="36" value="-10" />
                                                  <Key frame="43" value="-66.7243" />
                                                  <Key frame="48" value="-90" />
                                                  <Key frame="56" value="-87.3668" />
                                                  <Key frame="65" value="-89.3883" />
                                                  <Key frame="74" value="-59" />
                                                  <Key frame="80" value="-51.9" />
                                                  <Key frame="86" value="-51.9" />
                                                  <Key frame="105" value="11.9509" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                                  <Key frame="10" value="10.9889" />
                                                  <Key frame="20" value="96" />
                                                  <Key frame="32" value="116.107" />
                                                  <Key frame="36" value="96" />
                                                  <Key frame="43" value="62.6734" />
                                                  <Key frame="48" value="96" />
                                                  <Key frame="56" value="69.9642" />
                                                  <Key frame="65" value="63.0208" />
                                                  <Key frame="74" value="62.1" />
                                                  <Key frame="80" value="50.2" />
                                                  <Key frame="86" value="101" />
                                                  <Key frame="105" value="-4.39218" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                                  <Key frame="10" value="26.7215" />
                                                  <Key frame="20" value="14" />
                                                  <Key frame="32" value="-21.4432" />
                                                  <Key frame="36" value="14" />
                                                  <Key frame="43" value="41.102" />
                                                  <Key frame="48" value="38" />
                                                  <Key frame="56" value="45.003" />
                                                  <Key frame="65" value="44.9151" />
                                                  <Key frame="74" value="25.3" />
                                                  <Key frame="80" value="23.1" />
                                                  <Key frame="86" value="-33.2" />
                                                  <Key frame="105" value="4.66067" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="-9.5826" />
                                                  <Key frame="20" value="-4.94951e-06" />
                                                  <Key frame="32" value="2.28278" />
                                                  <Key frame="36" value="-4.94951e-06" />
                                                  <Key frame="43" value="9.21535" />
                                                  <Key frame="48" value="-6" />
                                                  <Key frame="56" value="-0.529755" />
                                                  <Key frame="65" value="5.62267" />
                                                  <Key frame="74" value="-25.4" />
                                                  <Key frame="80" value="-38.9384" />
                                                  <Key frame="86" value="-15.9" />
                                                  <Key frame="105" value="-3.60596" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="-2.55126" />
                                                  <Key frame="20" value="-8.991e-06" />
                                                  <Key frame="32" value="-3.34229" />
                                                  <Key frame="36" value="-8.991e-06" />
                                                  <Key frame="43" value="3.71174" />
                                                  <Key frame="48" value="-31" />
                                                  <Key frame="56" value="-8.87947" />
                                                  <Key frame="65" value="10.0173" />
                                                  <Key frame="74" value="-0.529755" />
                                                  <Key frame="80" value="-11" />
                                                  <Key frame="86" value="-10" />
                                                  <Key frame="105" value="-8.70368" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="14.3288" />
                                                  <Key frame="20" value="-10" />
                                                  <Key frame="32" value="21.448" />
                                                  <Key frame="36" value="-10" />
                                                  <Key frame="43" value="-67.4992" />
                                                  <Key frame="48" value="-90" />
                                                  <Key frame="56" value="-49.1291" />
                                                  <Key frame="65" value="-3.24959" />
                                                  <Key frame="74" value="-26.1014" />
                                                  <Key frame="80" value="-49" />
                                                  <Key frame="86" value="-47.8986" />
                                                  <Key frame="105" value="12.2194" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                                  <Key frame="10" value="5.2711" />
                                                  <Key frame="20" value="96" />
                                                  <Key frame="32" value="115.751" />
                                                  <Key frame="36" value="96" />
                                                  <Key frame="43" value="61.7515" />
                                                  <Key frame="48" value="96" />
                                                  <Key frame="56" value="120.937" />
                                                  <Key frame="65" value="121.024" />
                                                  <Key frame="74" value="121.039" />
                                                  <Key frame="80" value="121.039" />
                                                  <Key frame="86" value="121.039" />
                                                  <Key frame="105" value="-5.10012" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                                  <Key frame="10" value="47.2833" />
                                                  <Key frame="20" value="14" />
                                                  <Key frame="32" value="-26.0184" />
                                                  <Key frame="36" value="14" />
                                                  <Key frame="43" value="38.8165" />
                                                  <Key frame="48" value="38" />
                                                  <Key frame="56" value="-26.1062" />
                                                  <Key frame="65" value="-63.1087" />
                                                  <Key frame="74" value="-68.1542" />
                                                  <Key frame="80" value="-68.1542" />
                                                  <Key frame="86" value="-68.1542" />
                                                  <Key frame="105" value="4.65586" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="1.93121" />
                                                  <Key frame="20" value="0" />
                                                  <Key frame="32" value="1.93121" />
                                                  <Key frame="36" value="0" />
                                                  <Key frame="43" value="-9.80246" />
                                                  <Key frame="48" value="6" />
                                                  <Key frame="56" value="22.6737" />
                                                  <Key frame="65" value="5.71056" />
                                                  <Key frame="74" value="-2.46337" />
                                                  <Key frame="80" value="-6.76691" />
                                                  <Key frame="86" value="-5" />
                                                  <Key frame="105" value="7.81996" />
                                                </ActuatorCurve>
                                              </ActuatorList>
                                            </Timeline>
                                          </Box>
                                          <Box name="SideToBelly" id="4" localization="8" tooltip="Lie down on the back or the belly from an other lie down position (on the side)." x="656" y="93">
                                            <bitmap>media/images/box/movement/move.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		""

	def onInput_onStop(self):
		""]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="10">
                                              <ActuatorList model="nao">
                                                <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                                  <Key frame="5" value="41.3067" />
                                                  <Key frame="10" value="41.3067" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                                  <Key frame="5" value="8.52309" />
                                                  <Key frame="10" value="8.52309" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                                  <Key frame="5" value="113.383" />
                                                  <Key frame="10" value="113.383" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                                  <Key frame="5" value="44.6514" />
                                                  <Key frame="10" value="44.6514" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                                  <Key frame="5" value="-52.9084" />
                                                  <Key frame="10" value="-52.9084" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                                  <Key frame="5" value="-19.5144" />
                                                  <Key frame="10" value="-19.5144" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                                  <Key frame="5" value="-37" />
                                                  <Key frame="10" value="-37" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                                  <Key frame="5" value="0.146571" />
                                                  <Key frame="10" value="0.146571" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                                  <Key frame="5" value="108.72" />
                                                  <Key frame="10" value="108.72" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                                  <Key frame="5" value="-45.965" />
                                                  <Key frame="10" value="-45.965" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                                  <Key frame="5" value="56.8684" />
                                                  <Key frame="10" value="56.8684" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                                  <Key frame="5" value="26.8046" />
                                                  <Key frame="10" value="26.8046" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                                  <Key frame="5" value="38.8505" />
                                                  <Key frame="10" value="38.8505" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                                  <Key frame="5" value="0.200389" />
                                                  <Key frame="10" value="0.200389" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                                  <Key frame="5" value="-65.5648" />
                                                  <Key frame="10" value="-65.5648" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                                  <Key frame="5" value="1.75543" />
                                                  <Key frame="10" value="1.75543" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                                  <Key frame="5" value="23.8163" />
                                                  <Key frame="10" value="23.8163" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                                  <Key frame="5" value="-5.2711" />
                                                  <Key frame="10" value="-5.2711" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                                  <Key frame="5" value="29.9735" />
                                                  <Key frame="10" value="29.9735" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                                  <Key frame="5" value="3.86483" />
                                                  <Key frame="10" value="3.86483" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                                  <Key frame="5" value="-14.4166" />
                                                  <Key frame="10" value="-14.4166" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                                  <Key frame="5" value="2.02391" />
                                                  <Key frame="10" value="2.02391" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                                  <Key frame="5" value="-5.27591" />
                                                  <Key frame="10" value="-5.27591" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                                  <Key frame="5" value="20.3885" />
                                                  <Key frame="10" value="20.3885" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                                  <Key frame="5" value="-19.6902" />
                                                  <Key frame="10" value="-19.6902" />
                                                </ActuatorCurve>
                                              </ActuatorList>
                                            </Timeline>
                                          </Box>
                                          <Box name="Switch Case" id="1" localization="8" tooltip="Test input value and stimulate the output matching to this value. If there is no&#x0A;output matching, the default output (onDefault) is stimulated.&#x0A;&#x0A;You can edit a case by left double-clicking on the line. You can add a&#x0A;case by right clicking on a line and selecting &apos;Insert a row&apos;. You can delete&#x0A;a case by right clicking on a line and selecting &apos;Remove a row&apos;." plugin="dispatcher_plugin" x="923" y="96">
                                            <bitmap>media/images/box/interaction/choice.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion("Back")):
			self.output_1(p)
		elif(p == self.typeConversion("Knee")):
			self.output_2(p)
		elif(p == self.typeConversion("Frog")):
			self.output_3(p)
		elif(p == self.typeConversion("Belly")):
			self.output_4(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]>
                                              </content>
                                            </script>
                                            <pluginContent>
                                              <keywords>
                                                <keyword>&quot;Back&quot;</keyword>
                                                <keyword>&quot;Knee&quot;</keyword>
                                                <keyword>&quot;Frog&quot;</keyword>
                                                <keyword>&quot;Belly&quot;</keyword>
                                                <keyword></keyword>
                                              </keywords>
                                            </pluginContent>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Value to test." id="2" />
                                            <Output name="onDefault" type="1" type_size="1" nature="1" inner="0" tooltip="If the input value does not match any value set on the box." id="3" />
                                            <Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="4" />
                                            <Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="5" />
                                            <Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="6" />
                                            <Output name="output_4" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="7" />
                                          </Box>
                                          <Box name="Switch Case" id="7" localization="8" tooltip="Test input value and stimulate the output matching to this value. If there is no&#x0A;output matching, the default output (onDefault) is stimulated.&#x0A;&#x0A;You can edit a case by left double-clicking on the line. You can add a&#x0A;case by right clicking on a line and selecting &apos;Insert a row&apos;. You can delete&#x0A;a case by right clicking on a line and selecting &apos;Remove a row&apos;." plugin="dispatcher_plugin" x="955" y="621">
                                            <bitmap>media/images/box/interaction/choice.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion("Crouch")):
			self.output_1(p)
		elif(p == self.typeConversion("Stand")):
			self.output_2(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]>
                                              </content>
                                            </script>
                                            <pluginContent>
                                              <keywords>
                                                <keyword>&quot;Crouch&quot;</keyword>
                                                <keyword>&quot;Stand&quot;</keyword>
                                                <keyword></keyword>
                                              </keywords>
                                            </pluginContent>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Value to test." id="2" />
                                            <Output name="onDefault" type="1" type_size="1" nature="1" inner="0" tooltip="If the input value does not match any value set on the box." id="3" />
                                            <Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="4" />
                                            <Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="5" />
                                          </Box>
                                          <Box name="Get Robot Pose" id="8" localization="8" tooltip="Return NAO&apos;s current pose.&#x0A;&#x0A;Note: The box waits for the robot pose to be stabilized. You can set the maximum&#x0A;time to wait in parameters. After this time is ellapsed, the current pose is sent to the&#x0A;output anyway." x="89" y="41">
                                            <bitmap>media/images/box/sensors/inertial_unit.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.robotPoseProxy = ALProxy("ALRobotPosture")
        self.threadTime = 0.1 #seconds

    def onLoad(self):
        self.bIsRunning = False
        self.bMustStop = False

    def onUnload(self):
        self.bMustStop = True

    def onInput_onStart(self):
        if( self.bIsRunning ):
            return
        self.bIsRunning = True
        self.bMustStop = False
        beginTime = time.time()
        RobotPoseAndTime = ["Unknown", 0.]
        while( not self.bMustStop ):
            RobotPoseAndTime = self.robotPoseProxy.getActualPoseAndTime()
            # as soon as the robot is not moving anymore from its position, give its position
            if( RobotPoseAndTime[1] > 0.5 or time.time() - beginTime > self.getParameter("Time to wait for pose stabilization (s)") ):
                self.bMustStop = True
            if( not self.bMustStop ):
                time.sleep(self.threadTime)
        self.robotPose(RobotPoseAndTime[0])
        self.bIsRunning = False]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Output name="robotPose" type="3" type_size="1" nature="2" inner="0" tooltip='NAO&apos;s current pose. It can be:&#x0A;- &quot;Unknown&quot;&#x0A;- &quot;Stand&quot;&#x0A;- &quot;Sit&quot;&#x0A;- &quot;Crouch&quot;&#x0A;- &quot;Knee&quot;&#x0A;- &quot;Frog&quot;&#x0A;- &quot;Back&quot;&#x0A;- &quot;Belly&quot;&#x0A;- &quot;Left&quot;&#x0A;- &quot;Right&quot;&#x0A;- &quot;HeadBack&quot;' id="3" />
                                            <Parameter name="Time to wait for pose stabilization (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0.5" max="10" tooltip="Maximum time to wait NAO&apos;s pose stabilization. After this time is ellapsed,&#x0A;the current pose is sent to the output even though it is not stabilized." id="4" />
                                          </Box>
                                          <Box name="Get Robot Pose" id="10" localization="8" tooltip="Return NAO&apos;s current pose.&#x0A;&#x0A;Note: The box waits for the robot pose to be stabilized. You can set the maximum&#x0A;time to wait in parameters. After this time is ellapsed, the current pose is sent to the&#x0A;output anyway." x="794" y="96">
                                            <bitmap>media/images/box/sensors/inertial_unit.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.robotPoseProxy = ALProxy("ALRobotPosture")
        self.threadTime = 0.1 #seconds

    def onLoad(self):
        self.bIsRunning = False
        self.bMustStop = False

    def onUnload(self):
        self.bMustStop = True

    def onInput_onStart(self):
        if( self.bIsRunning ):
            return
        self.bIsRunning = True
        self.bMustStop = False
        beginTime = time.time()
        RobotPoseAndTime = ["Unknown", 0.]
        while( not self.bMustStop ):
            RobotPoseAndTime = self.robotPoseProxy.getActualPoseAndTime()
            # as soon as the robot is not moving anymore from its position, give its position
            if( RobotPoseAndTime[1] > 0.5 or time.time() - beginTime > self.getParameter("Time to wait for pose stabilization (s)") ):
                self.bMustStop = True
            if( not self.bMustStop ):
                time.sleep(self.threadTime)
        self.robotPose(RobotPoseAndTime[0])
        self.bIsRunning = False]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Output name="robotPose" type="3" type_size="1" nature="2" inner="0" tooltip='NAO&apos;s current pose. It can be:&#x0A;- &quot;Unknown&quot;&#x0A;- &quot;Stand&quot;&#x0A;- &quot;Sit&quot;&#x0A;- &quot;Crouch&quot;&#x0A;- &quot;Knee&quot;&#x0A;- &quot;Frog&quot;&#x0A;- &quot;Back&quot;&#x0A;- &quot;Belly&quot;&#x0A;- &quot;Left&quot;&#x0A;- &quot;Right&quot;&#x0A;- &quot;HeadBack&quot;' id="3" />
                                            <Parameter name="Time to wait for pose stabilization (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0.5" max="10" tooltip="Maximum time to wait NAO&apos;s pose stabilization. After this time is ellapsed,&#x0A;the current pose is sent to the output even though it is not stabilized." id="4" />
                                          </Box>
                                          <Box name="Get Robot Pose" id="2" localization="8" tooltip="Return NAO&apos;s current pose.&#x0A;&#x0A;Note: The box waits for the robot pose to be stabilized. You can set the maximum&#x0A;time to wait in parameters. After this time is ellapsed, the current pose is sent to the&#x0A;output anyway." x="828" y="626">
                                            <bitmap>media/images/box/sensors/inertial_unit.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.robotPoseProxy = ALProxy("ALRobotPosture")
        self.threadTime = 0.1 #seconds

    def onLoad(self):
        self.bIsRunning = False
        self.bMustStop = False

    def onUnload(self):
        self.bMustStop = True

    def onInput_onStart(self):
        if( self.bIsRunning ):
            return
        self.bIsRunning = True
        self.bMustStop = False
        beginTime = time.time()
        RobotPoseAndTime = ["Unknown", 0.]
        while( not self.bMustStop ):
            RobotPoseAndTime = self.robotPoseProxy.getActualPoseAndTime()
            # as soon as the robot is not moving anymore from its position, give its position
            if( RobotPoseAndTime[1] > 0.5 or time.time() - beginTime > self.getParameter("Time to wait for pose stabilization (s)") ):
                self.bMustStop = True
            if( not self.bMustStop ):
                time.sleep(self.threadTime)
        self.robotPose(RobotPoseAndTime[0])
        self.bIsRunning = False]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Output name="robotPose" type="3" type_size="1" nature="2" inner="0" tooltip='NAO&apos;s current pose. It can be:&#x0A;- &quot;Unknown&quot;&#x0A;- &quot;Stand&quot;&#x0A;- &quot;Sit&quot;&#x0A;- &quot;Crouch&quot;&#x0A;- &quot;Knee&quot;&#x0A;- &quot;Frog&quot;&#x0A;- &quot;Back&quot;&#x0A;- &quot;Belly&quot;&#x0A;- &quot;Left&quot;&#x0A;- &quot;Right&quot;&#x0A;- &quot;HeadBack&quot;' id="3" />
                                            <Parameter name="Time to wait for pose stabilization (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0.5" max="10" tooltip="Maximum time to wait NAO&apos;s pose stabilization. After this time is ellapsed,&#x0A;the current pose is sent to the output even though it is not stabilized." id="4" />
                                          </Box>
                                          <Link inputowner="0" indexofinput="4" outputowner="9" indexofoutput="3" />
                                          <Link inputowner="16" indexofinput="2" outputowner="9" indexofoutput="7" />
                                          <Link inputowner="16" indexofinput="2" outputowner="9" indexofoutput="8" />
                                          <Link inputowner="16" indexofinput="2" outputowner="9" indexofoutput="9" />
                                          <Link inputowner="5" indexofinput="2" outputowner="9" indexofoutput="6" />
                                          <Link inputowner="0" indexofinput="4" outputowner="5" indexofoutput="4" />
                                          <Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" />
                                          <Link inputowner="0" indexofinput="4" outputowner="16" indexofoutput="4" />
                                          <Link inputowner="5" indexofinput="2" outputowner="1" indexofoutput="4" />
                                          <Link inputowner="16" indexofinput="2" outputowner="1" indexofoutput="5" />
                                          <Link inputowner="16" indexofinput="2" outputowner="1" indexofoutput="6" />
                                          <Link inputowner="16" indexofinput="2" outputowner="1" indexofoutput="7" />
                                          <Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="3" />
                                          <Link inputowner="3" indexofinput="2" outputowner="9" indexofoutput="10" />
                                          <Link inputowner="4" indexofinput="2" outputowner="9" indexofoutput="4" />
                                          <Link inputowner="12" indexofinput="2" outputowner="9" indexofoutput="11" />
                                          <Link inputowner="4" indexofinput="2" outputowner="9" indexofoutput="5" />
                                          <Link inputowner="3" indexofinput="2" outputowner="7" indexofoutput="4" />
                                          <Link inputowner="0" indexofinput="4" outputowner="7" indexofoutput="3" />
                                          <Link inputowner="3" indexofinput="2" outputowner="7" indexofoutput="5" />
                                          <Link inputowner="8" indexofinput="2" outputowner="0" indexofoutput="2" />
                                          <Link inputowner="9" indexofinput="2" outputowner="8" indexofoutput="3" />
                                          <Link inputowner="10" indexofinput="2" outputowner="4" indexofoutput="4" />
                                          <Link inputowner="1" indexofinput="2" outputowner="10" indexofoutput="3" />
                                          <Link inputowner="2" indexofinput="2" outputowner="12" indexofoutput="4" />
                                          <Link inputowner="7" indexofinput="2" outputowner="2" indexofoutput="3" />
                                        </Diagram>
                                      </BehaviorKeyframe>
                                    </BehaviorLayer>
                                  </Timeline>
                                </Box>
                                <Link inputowner="0" indexofinput="4" outputowner="10" indexofoutput="4" />
                                <Link inputowner="0" indexofinput="5" outputowner="7" indexofoutput="3" />
                                <Link inputowner="0" indexofinput="5" outputowner="10" indexofoutput="5" />
                                <Link inputowner="0" indexofinput="5" outputowner="10" indexofoutput="6" />
                                <Link inputowner="4" indexofinput="2" outputowner="0" indexofoutput="2" />
                                <Link inputowner="2" indexofinput="2" outputowner="10" indexofoutput="3" />
                                <Link inputowner="7" indexofinput="2" outputowner="2" indexofoutput="3" />
                                <Link inputowner="9" indexofinput="2" outputowner="4" indexofoutput="3" />
                                <Link inputowner="10" indexofinput="2" outputowner="9" indexofoutput="3" />
                                <Link inputowner="9" indexofinput="2" outputowner="20" indexofoutput="4" />
                                <Link inputowner="20" indexofinput="2" outputowner="6" indexofoutput="3" />
                                <Link inputowner="6" indexofinput="2" outputowner="7" indexofoutput="4" />
                                <Link inputowner="9" indexofinput="2" outputowner="1" indexofoutput="4" />
                                <Link inputowner="1" indexofinput="2" outputowner="6" indexofoutput="4" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                        <Resource name="All motors" type="Lock" timeout="0" />
                      </Box>
                      <Box name="Sit Down" id="31" localization="8" tooltip="NAO tries to sit down from any position for a number of tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." x="588" y="11">
                        <bitmap>media/images/box/movement/sit_ground.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated when NAO succeed in sitting down." id="4" />
                        <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot failed to sit down after n tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." id="5" />
                        <Parameter name="Maximum of tries" inherits_from_parent="0" content_type="1" value="3" default_value="3" min="1" max="10" tooltip="The maximum number that the robot tries to sit down and fails before the failure&#x0A;output is stimulated." id="6" />
                        <Parameter name="Side" inherits_from_parent="0" content_type="3" value="Random" default_value="Random" custom_choice="0" tooltip='Side of the arm used to sit down. If it is set to &quot;Random&quot; the side is chosen randomly.' id="7">
                          <Choice value="Left" />
                          <Choice value="Random" />
                          <Choice value="Right" />
                        </Parameter>
                        <Timeline enable="0">
                          <BehaviorLayer name="SitDownBehavior">
                            <BehaviorKeyframe name="DetectRobotPose" index="1">
                              <Diagram>
                                <Box name="Check Count" id="9" localization="8" tooltip="Check number of tries. If the current try number is higher than the maximum&#x0A;number of tries set in parent box parameters, then the failed output is&#x0A;stimulated, else the tryAgain output is stimulated." x="850" y="221">
                                  <bitmap>media/images/box/box-script.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.nTries = 0

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        self.nTries += 1
        if (self.nTries > self.getParameter("Maximum of tries")):
            self.failed()
        else:
            self.tryAgain()

    def onInput_onStop(self):
        self.onUnload()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Output name="failed" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent if the current try number is higher than the maximum number of tries&#x0A;set in parent box parameters." id="3" />
                                  <Output name="tryAgain" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent if the current try number is smaller than or equal to the maximum&#x0A;number of tries set in parent box parameters." id="4" />
                                </Box>
                                <Box name="Right Sit Motion" id="13" localization="8" tooltip="The robot makes the right motion to sit down depending on its current position." x="596" y="407">
                                  <bitmap>media/images/box/movement/sit_ground.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        self.count = 0
        pass

    def onInput_onStop(self):
        self.onUnload()
        pass]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent after a step to sit down is done." id="4" />
                                  <Timeline enable="0">
                                    <BehaviorLayer name="SitDownBehavior">
                                      <BehaviorKeyframe name="DetectRobotPose" index="1">
                                        <Diagram>
                                          <Box name="CrouchToSitDown" id="11" localization="8" tooltip="Sit down from crouch or stand position." x="941" y="228">
                                            <bitmap>media/images/box/movement/move.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="72">
                                              <ActuatorList model="nao">
                                                <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                                  <Key frame="13" value="-18.1081" />
                                                  <Key frame="24" value="-25.2273" />
                                                  <Key frame="34" value="-36.3017" />
                                                  <Key frame="43" value="-35.9501" />
                                                  <Key frame="52" value="-23.4695" />
                                                  <Key frame="59" value="-10.5494" />
                                                  <Key frame="66" value="-0.00240423" />
                                                  <Key frame="72" value="-1.23289" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                                  <Key frame="13" value="21.2674" />
                                                  <Key frame="24" value="21.5311" />
                                                  <Key frame="34" value="21.0916" />
                                                  <Key frame="43" value="20.4764" />
                                                  <Key frame="52" value="21.0916" />
                                                  <Key frame="59" value="21.0037" />
                                                  <Key frame="66" value="21.7069" />
                                                  <Key frame="72" value="-1.93602" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                                  <Key frame="13" value="59.8" />
                                                  <Key frame="24" value="41.8" />
                                                  <Key frame="29" value="41.8" />
                                                  <Key frame="34" value="57.9182" />
                                                  <Key frame="43" value="86.2194" />
                                                  <Key frame="52" value="116.542" />
                                                  <Key frame="59" value="88.1" />
                                                  <Key frame="66" value="38.8" />
                                                  <Key frame="72" value="52.2932" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                                  <Key frame="13" value="19.2459" />
                                                  <Key frame="24" value="30.6718" />
                                                  <Key frame="34" value="27.6" />
                                                  <Key frame="43" value="48" />
                                                  <Key frame="52" value="25.4" />
                                                  <Key frame="59" value="89.2" />
                                                  <Key frame="66" value="32.6054" />
                                                  <Key frame="72" value="12.5661" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                                  <Key frame="13" value="-32.2587" />
                                                  <Key frame="24" value="-4.9" />
                                                  <Key frame="34" value="6.06212" />
                                                  <Key frame="43" value="-89" />
                                                  <Key frame="52" value="-18.8991" />
                                                  <Key frame="59" value="-69.2" />
                                                  <Key frame="66" value="-43.5967" />
                                                  <Key frame="72" value="-25.0515" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                                  <Key frame="13" value="-54.9299" />
                                                  <Key frame="24" value="-68.9" />
                                                  <Key frame="34" value="-40" />
                                                  <Key frame="43" value="-51.7" />
                                                  <Key frame="47" value="-27.9" />
                                                  <Key frame="52" value="-39.3" />
                                                  <Key frame="59" value="-55" />
                                                  <Key frame="66" value="-75.7603" />
                                                  <Key frame="72" value="-73.3872" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                                  <Key frame="13" value="5.00742" />
                                                  <Key frame="24" value="-41.0478" />
                                                  <Key frame="34" value="-41.0478" />
                                                  <Key frame="43" value="-41.0478" />
                                                  <Key frame="52" value="-41.751" />
                                                  <Key frame="59" value="-41.8389" />
                                                  <Key frame="66" value="-41.3994" />
                                                  <Key frame="72" value="3.42537" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                                  <Key frame="13" value="0.231662" />
                                                  <Key frame="24" value="0.0669354" />
                                                  <Key frame="34" value="0.0665718" />
                                                  <Key frame="43" value="0.0665718" />
                                                  <Key frame="52" value="0.0731171" />
                                                  <Key frame="59" value="0.0694809" />
                                                  <Key frame="66" value="0.0607536" />
                                                  <Key frame="72" value="0.3004" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                                  <Key frame="13" value="46.3" />
                                                  <Key frame="24" value="34" />
                                                  <Key frame="34" value="99.9353" />
                                                  <Key frame="39" value="119" />
                                                  <Key frame="52" value="119.496" />
                                                  <Key frame="59" value="108.197" />
                                                  <Key frame="66" value="44.8" />
                                                  <Key frame="72" value="53.3527" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                                  <Key frame="13" value="-32.5223" />
                                                  <Key frame="24" value="-53.3" />
                                                  <Key frame="29" value="-43.7" />
                                                  <Key frame="34" value="-31.7" />
                                                  <Key frame="39" value="-30.1" />
                                                  <Key frame="52" value="-31.7" />
                                                  <Key frame="59" value="-89.2" />
                                                  <Key frame="66" value="-31.4676" />
                                                  <Key frame="72" value="-15.1198" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                                  <Key frame="13" value="8" />
                                                  <Key frame="24" value="0.261271" />
                                                  <Key frame="34" value="-3.95753" />
                                                  <Key frame="39" value="-8.44001" />
                                                  <Key frame="52" value="6.7" />
                                                  <Key frame="59" value="100.37" />
                                                  <Key frame="66" value="64.598" />
                                                  <Key frame="72" value="29.705" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                                  <Key frame="13" value="48" />
                                                  <Key frame="24" value="27.4246" />
                                                  <Key frame="34" value="4.48488" />
                                                  <Key frame="39" value="5.80326" />
                                                  <Key frame="52" value="33.9" />
                                                  <Key frame="59" value="59.5051" />
                                                  <Key frame="66" value="74.0951" />
                                                  <Key frame="72" value="73.4799" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                                  <Key frame="13" value="10.8083" />
                                                  <Key frame="24" value="60.4671" />
                                                  <Key frame="34" value="60.2913" />
                                                  <Key frame="39" value="59.764" />
                                                  <Key frame="52" value="59.764" />
                                                  <Key frame="59" value="60.0276" />
                                                  <Key frame="66" value="60.8187" />
                                                  <Key frame="72" value="-3.43018" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                                  <Key frame="13" value="0.406207" />
                                                  <Key frame="24" value="0.0854807" />
                                                  <Key frame="34" value="0.0883898" />
                                                  <Key frame="39" value="0.103299" />
                                                  <Key frame="52" value="0.117844" />
                                                  <Key frame="59" value="0.114935" />
                                                  <Key frame="66" value="0.121117" />
                                                  <Key frame="72" value="0.2996" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                                  <Key frame="13" value="-22.7616" />
                                                  <Key frame="24" value="-24.2557" />
                                                  <Key frame="34" value="-52.0295" />
                                                  <Key frame="43" value="-33.5722" />
                                                  <Key frame="52" value="-30.9355" />
                                                  <Key frame="59" value="-45.4376" />
                                                  <Key frame="66" value="-44.5587" />
                                                  <Key frame="72" value="-35.1543" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                                  <Key frame="13" value="10.4615" />
                                                  <Key frame="24" value="18" />
                                                  <Key frame="34" value="-15.0271" />
                                                  <Key frame="43" value="16.7897" />
                                                  <Key frame="52" value="30.325" />
                                                  <Key frame="59" value="13.3619" />
                                                  <Key frame="66" value="20.4812" />
                                                  <Key frame="72" value="15.9987" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                                  <Key frame="13" value="-33.8359" />
                                                  <Key frame="24" value="-49.8322" />
                                                  <Key frame="34" value="-0.524946" />
                                                  <Key frame="43" value="-35.5937" />
                                                  <Key frame="52" value="-89.0319" />
                                                  <Key frame="59" value="-91.3171" />
                                                  <Key frame="66" value="-83.9342" />
                                                  <Key frame="72" value="-90.5261" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                                  <Key frame="13" value="121.039" />
                                                  <Key frame="24" value="121.039" />
                                                  <Key frame="34" value="104.149" />
                                                  <Key frame="43" value="113.554" />
                                                  <Key frame="52" value="61.7" />
                                                  <Key frame="59" value="66.3558" />
                                                  <Key frame="66" value="62.3128" />
                                                  <Key frame="72" value="80.067" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                                  <Key frame="13" value="-68.1542" />
                                                  <Key frame="24" value="-68.1542" />
                                                  <Key frame="34" value="-68.1542" />
                                                  <Key frame="43" value="-29.9735" />
                                                  <Key frame="52" value="42.3614" />
                                                  <Key frame="59" value="52.8695" />
                                                  <Key frame="66" value="52.8205" />
                                                  <Key frame="72" value="47.8986" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                                  <Key frame="13" value="2.46337" />
                                                  <Key frame="24" value="4.57277" />
                                                  <Key frame="34" value="2.37548" />
                                                  <Key frame="43" value="-26.0135" />
                                                  <Key frame="52" value="-10.3688" />
                                                  <Key frame="59" value="-2.72224" />
                                                  <Key frame="66" value="-2.89802" />
                                                  <Key frame="72" value="-0.524946" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                                  <Key frame="13" value="-7.90785" />
                                                  <Key frame="24" value="-14.6755" />
                                                  <Key frame="34" value="-21.7947" />
                                                  <Key frame="43" value="-32.957" />
                                                  <Key frame="52" value="-30.6718" />
                                                  <Key frame="59" value="-12.3024" />
                                                  <Key frame="66" value="-18.4549" />
                                                  <Key frame="72" value="-15.3786" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                                  <Key frame="13" value="-43.8604" />
                                                  <Key frame="24" value="-49.2218" />
                                                  <Key frame="34" value="-78.226" />
                                                  <Key frame="43" value="-94.5739" />
                                                  <Key frame="52" value="-88.3336" />
                                                  <Key frame="59" value="-92.2008" />
                                                  <Key frame="66" value="-81.2144" />
                                                  <Key frame="72" value="-90.8824" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                                  <Key frame="13" value="108.461" />
                                                  <Key frame="24" value="44.3877" />
                                                  <Key frame="34" value="65.4817" />
                                                  <Key frame="43" value="65.6575" />
                                                  <Key frame="52" value="59.5" />
                                                  <Key frame="59" value="68.6458" />
                                                  <Key frame="66" value="56.1652" />
                                                  <Key frame="72" value="80.5991" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                                  <Key frame="13" value="-41.8341" />
                                                  <Key frame="24" value="19.1628" />
                                                  <Key frame="34" value="26.1941" />
                                                  <Key frame="43" value="44.2119" />
                                                  <Key frame="52" value="40.8721" />
                                                  <Key frame="59" value="53.4029" />
                                                  <Key frame="66" value="53.4029" />
                                                  <Key frame="72" value="48.6944" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                                  <Key frame="13" value="12.0436" />
                                                  <Key frame="24" value="29.0067" />
                                                  <Key frame="34" value="3.34229" />
                                                  <Key frame="43" value="-3.1617" />
                                                  <Key frame="52" value="10.8131" />
                                                  <Key frame="59" value="2.02391" />
                                                  <Key frame="66" value="2.72705" />
                                                  <Key frame="72" value="1.0571" />
                                                </ActuatorCurve>
                                              </ActuatorList>
                                            </Timeline>
                                          </Box>
                                          <Box name="BellyToCrouch" id="12" localization="8" tooltip="Crouch from lie down position (on the belly)." x="707" y="382">
                                            <bitmap>media/images/box/movement/move.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="100">
                                              <ActuatorList model="nao">
                                                <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                                  <Key frame="10" value="10" />
                                                  <Key frame="20" value="-13" />
                                                  <Key frame="34" value="16.4" />
                                                  <Key frame="45" value="17" />
                                                  <Key frame="58" value="-28.4" />
                                                  <Key frame="65" value="-17" />
                                                  <Key frame="76" value="3" />
                                                  <Key frame="89" value="-22.4" />
                                                  <Key frame="100" value="-1" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="-33.0497" />
                                                  <Key frame="20" value="-31.3797" />
                                                  <Key frame="34" value="6.15002" />
                                                  <Key frame="45" value="29.5" />
                                                  <Key frame="58" value="21.8" />
                                                  <Key frame="65" value="21.2674" />
                                                  <Key frame="76" value="-6" />
                                                  <Key frame="89" value="-30.5887" />
                                                  <Key frame="100" value="0.4" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="4.83164" />
                                                  <Key frame="20" value="-86.6" />
                                                  <Key frame="34" value="-71.6342" />
                                                  <Key frame="45" value="4.12851" />
                                                  <Key frame="58" value="73" />
                                                  <Key frame="65" value="43.3" />
                                                  <Key frame="76" value="43" />
                                                  <Key frame="89" value="74" />
                                                  <Key frame="100" value="86.9225" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="89.0319" />
                                                  <Key frame="20" value="0.964405" />
                                                  <Key frame="34" value="4.39218" />
                                                  <Key frame="45" value="4.04062" />
                                                  <Key frame="58" value="8.96255" />
                                                  <Key frame="65" value="53.8" />
                                                  <Key frame="76" value="38.8" />
                                                  <Key frame="89" value="48.5" />
                                                  <Key frame="100" value="4.83164" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                                  <Key frame="10" value="-119" />
                                                  <Key frame="20" value="-90.5309" />
                                                  <Key frame="34" value="-91.9371" />
                                                  <Key frame="45" value="-102.396" />
                                                  <Key frame="58" value="-76.0287" />
                                                  <Key frame="65" value="-71.5" />
                                                  <Key frame="76" value="-55.7258" />
                                                  <Key frame="89" value="-55" />
                                                  <Key frame="100" value="-51.6827" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="-0.5" />
                                                  <Key frame="20" value="-20.2127" />
                                                  <Key frame="34" value="-36.5606" />
                                                  <Key frame="45" value="-48.7775" />
                                                  <Key frame="58" value="-88.8561" />
                                                  <Key frame="65" value="-42" />
                                                  <Key frame="76" value="-42.2" />
                                                  <Key frame="89" value="-66.1801" />
                                                  <Key frame="100" value="-63.016" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                                  <Key frame="10" value="-88.8609" />
                                                  <Key frame="20" value="-88.8609" />
                                                  <Key frame="34" value="-86.9273" />
                                                  <Key frame="45" value="-82.9722" />
                                                  <Key frame="58" value="-80.5112" />
                                                  <Key frame="65" value="-80.687" />
                                                  <Key frame="76" value="-80.687" />
                                                  <Key frame="89" value="-31.2" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                                  <Key frame="10" value="0.0585718" />
                                                  <Key frame="20" value="0.0196627" />
                                                  <Key frame="34" value="0.0407536" />
                                                  <Key frame="45" value="0.0545718" />
                                                  <Key frame="58" value="0.0574809" />
                                                  <Key frame="65" value="0.0574809" />
                                                  <Key frame="76" value="0.0549355" />
                                                  <Key frame="89" value="0.0574809" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="-1.57965" />
                                                  <Key frame="20" value="-86.6" />
                                                  <Key frame="34" value="-70.0473" />
                                                  <Key frame="45" value="-13.5329" />
                                                  <Key frame="58" value="12.483" />
                                                  <Key frame="65" value="25.7547" />
                                                  <Key frame="76" value="52.3859" />
                                                  <Key frame="89" value="55.0226" />
                                                  <Key frame="100" value="77.5229" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="-87.982" />
                                                  <Key frame="20" value="-11" />
                                                  <Key frame="34" value="-4.74856" />
                                                  <Key frame="45" value="-4.74856" />
                                                  <Key frame="58" value="-13.0104" />
                                                  <Key frame="65" value="-10.4615" />
                                                  <Key frame="76" value="-0.498473" />
                                                  <Key frame="89" value="-7.56109" />
                                                  <Key frame="100" value="-0.79343" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                                  <Key frame="10" value="119" />
                                                  <Key frame="20" value="89.4714" />
                                                  <Key frame="34" value="92.4597" />
                                                  <Key frame="45" value="96.5906" />
                                                  <Key frame="58" value="112.323" />
                                                  <Key frame="65" value="111.796" />
                                                  <Key frame="76" value="38.1426" />
                                                  <Key frame="89" value="22.6737" />
                                                  <Key frame="100" value="49.6564" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="6" />
                                                  <Key frame="20" value="21.8874" />
                                                  <Key frame="34" value="36.3896" />
                                                  <Key frame="45" value="89.2125" />
                                                  <Key frame="58" value="0.498473" />
                                                  <Key frame="65" value="0.498473" />
                                                  <Key frame="76" value="24.2605" />
                                                  <Key frame="89" value="37.2" />
                                                  <Key frame="100" value="47.8155" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                                  <Key frame="10" value="86.4831" />
                                                  <Key frame="20" value="86.4831" />
                                                  <Key frame="34" value="85.7799" />
                                                  <Key frame="45" value="81.8248" />
                                                  <Key frame="58" value="82.2643" />
                                                  <Key frame="65" value="82.5279" />
                                                  <Key frame="76" value="82.7037" />
                                                  <Key frame="89" value="82.5279" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                                  <Key frame="10" value="0.0185718" />
                                                  <Key frame="20" value="0.0127537" />
                                                  <Key frame="34" value="0.0262082" />
                                                  <Key frame="45" value="0.0469355" />
                                                  <Key frame="58" value="0.0494809" />
                                                  <Key frame="65" value="0.04839" />
                                                  <Key frame="76" value="0.0472991" />
                                                  <Key frame="89" value="0.04839" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="-1.93121" />
                                                  <Key frame="20" value="2" />
                                                  <Key frame="34" value="-24.9588" />
                                                  <Key frame="45" value="-44.6466" />
                                                  <Key frame="58" value="-59.6761" />
                                                  <Key frame="65" value="-65.621" />
                                                  <Key frame="76" value="-65.621" />
                                                  <Key frame="89" value="-32.5175" />
                                                  <Key frame="100" value="0" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="3.60596" />
                                                  <Key frame="20" value="0.00240423" />
                                                  <Key frame="34" value="0.090296" />
                                                  <Key frame="45" value="-21.619" />
                                                  <Key frame="58" value="-17.0486" />
                                                  <Key frame="65" value="-17.0486" />
                                                  <Key frame="76" value="11.1647" />
                                                  <Key frame="89" value="7.29742" />
                                                  <Key frame="100" value="-0.6" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="3.51807" />
                                                  <Key frame="20" value="0.00240423" />
                                                  <Key frame="34" value="-89.9108" />
                                                  <Key frame="45" value="-73.3872" />
                                                  <Key frame="58" value="-59.4124" />
                                                  <Key frame="65" value="-66.4437" />
                                                  <Key frame="76" value="-67.7621" />
                                                  <Key frame="89" value="-72.7719" />
                                                  <Key frame="100" value="-60" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                                  <Key frame="10" value="6.9" />
                                                  <Key frame="20" value="114" />
                                                  <Key frame="34" value="121.039" />
                                                  <Key frame="45" value="16.1697" />
                                                  <Key frame="58" value="23.201" />
                                                  <Key frame="65" value="20.4764" />
                                                  <Key frame="76" value="41.2188" />
                                                  <Key frame="89" value="115.399" />
                                                  <Key frame="100" value="120" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                                  <Key frame="10" value="52.8205" />
                                                  <Key frame="20" value="-59" />
                                                  <Key frame="34" value="-65.9212" />
                                                  <Key frame="45" value="12.3903" />
                                                  <Key frame="58" value="40.6915" />
                                                  <Key frame="65" value="52.8695" />
                                                  <Key frame="76" value="47.2833" />
                                                  <Key frame="89" value="-28.743" />
                                                  <Key frame="100" value="-60" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="-0.0854875" />
                                                  <Key frame="20" value="0.00240423" />
                                                  <Key frame="34" value="-0.0854875" />
                                                  <Key frame="45" value="-25.9257" />
                                                  <Key frame="58" value="-17.2244" />
                                                  <Key frame="65" value="-6.76526" />
                                                  <Key frame="76" value="-2.37067" />
                                                  <Key frame="89" value="-6.94104" />
                                                  <Key frame="100" value="0" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="1.8" />
                                                  <Key frame="20" value="0.00240423" />
                                                  <Key frame="34" value="0.090296" />
                                                  <Key frame="45" value="17.8444" />
                                                  <Key frame="58" value="14.5924" />
                                                  <Key frame="65" value="18.3718" />
                                                  <Key frame="76" value="13.0104" />
                                                  <Key frame="89" value="-4.30429" />
                                                  <Key frame="100" value="0.6" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="4.39218" />
                                                  <Key frame="20" value="-0.00240423" />
                                                  <Key frame="34" value="-90.3551" />
                                                  <Key frame="45" value="-95.1891" />
                                                  <Key frame="58" value="-68.7337" />
                                                  <Key frame="65" value="-91.5856" />
                                                  <Key frame="76" value="-18.4597" />
                                                  <Key frame="89" value="-40.6963" />
                                                  <Key frame="100" value="-60" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                                  <Key frame="10" value="-4.48007" />
                                                  <Key frame="20" value="114" />
                                                  <Key frame="34" value="119.535" />
                                                  <Key frame="45" value="99.8474" />
                                                  <Key frame="58" value="121.478" />
                                                  <Key frame="65" value="121.478" />
                                                  <Key frame="76" value="121.478" />
                                                  <Key frame="89" value="121.478" />
                                                  <Key frame="100" value="120" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                                  <Key frame="10" value="53.2648" />
                                                  <Key frame="20" value="-59" />
                                                  <Key frame="34" value="-65.2133" />
                                                  <Key frame="45" value="-67.9785" />
                                                  <Key frame="58" value="-67.9785" />
                                                  <Key frame="65" value="-33.748" />
                                                  <Key frame="76" value="-67.9785" />
                                                  <Key frame="89" value="-67.9785" />
                                                  <Key frame="100" value="-60" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="10.8" />
                                                  <Key frame="20" value="0.00240423" />
                                                  <Key frame="34" value="0.353971" />
                                                  <Key frame="45" value="-0.261271" />
                                                  <Key frame="58" value="-5.62267" />
                                                  <Key frame="65" value="-0.788621" />
                                                  <Key frame="76" value="-5.44688" />
                                                  <Key frame="89" value="2.02391" />
                                                  <Key frame="100" value="0" />
                                                </ActuatorCurve>
                                              </ActuatorList>
                                            </Timeline>
                                          </Box>
                                          <Box name="BackToSitDown" id="14" localization="8" tooltip="Sit down from lie down position (on the back)." x="923" y="91">
                                            <bitmap>media/images/box/movement/move.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="62" resources_acquisition="1">
                                              <BehaviorLayer name="behavior_layer1">
                                                <BehaviorKeyframe name="keyframe10" index="10">
                                                  <Diagram>
                                                    <Box name="Disable Anti-Collision" id="2" localization="8" tooltip="Disable the collision protection on some specific part of NAO&apos;s body.&#x0A;&#x0A;Note: When this box is unloaded, the collision protection state will be reset to&#x0A;its previous state (enabled or disabled)." x="126" y="44">
                                                      <bitmap>media/images/box/sensors/anti_collision.png</bitmap>
                                                      <script language="4">
                                                        <content>
                                                          <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.motion = ALProxy( "ALMotion" )

    def onLoad(self):
        self.collisionLArmState = self.motion.getCollisionProtectionEnabled("LArm")
        self.collisionRArmState = self.motion.getCollisionProtectionEnabled("RArm")

    def onUnload(self):
        self.motion.setCollisionProtectionEnabled("LArm", self.collisionLArmState)
        self.motion.setCollisionProtectionEnabled("RArm", self.collisionRArmState)

    def onInput_onSet(self):
        # enable/disable collision protection
        result = self.motion.setCollisionProtectionEnabled( self.getParameter("Body part"), False )
        if( result ):
            self.success()
        else:
            self.logger.warning( "Disabling collision protection failed. Deactivation succeeds only if the current state of the chain is not in collision. If you want to deactivate collision of both arms, they need to be off collision." )
            self.failure()]]>
                                                        </content>
                                                      </script>
                                                      <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                      <Input name="onSet" type="1" type_size="1" nature="1" inner="0" tooltip="The anti-collision feature is enabled or disabled when this input is stimulated." id="2" />
                                                      <Output name="success" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent if the collision protection has been successfully enabled or disabled.&#x0A;&#x0A;Note: The only case where there is a failure is when you try to disable the&#x0A;anti-collision while it is currently in collision with some part of his body." id="3" />
                                                      <Output name="failure" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent if the collision protection has failed to be enabled or disabled.&#x0A;&#x0A;Note: The only case where there is a failure is when you try to disable the&#x0A;anti-collision while it is currently in collision with some part of his body." id="4" />
                                                      <Parameter name="Body part" inherits_from_parent="0" content_type="3" value="Arms" default_value="Arms" custom_choice="0" tooltip="Body part which avoids the collision." id="5">
                                                        <Choice value="Arms" />
                                                        <Choice value="LArm" />
                                                        <Choice value="RArm" />
                                                      </Parameter>
                                                    </Box>
                                                    <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                  </Diagram>
                                                </BehaviorKeyframe>
                                              </BehaviorLayer>
                                              <ActuatorList model="nao">
                                                <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                                  <Key frame="10" value="-1.40867" />
                                                  <Key frame="20" value="-2.73208e-05" />
                                                  <Key frame="28" value="2.37067" />
                                                  <Key frame="36" value="3.86374e-05" />
                                                  <Key frame="44" value="-0.353971" />
                                                  <Key frame="50" value="0.788621" />
                                                  <Key frame="56" value="1.40386" />
                                                  <Key frame="62" value="-1.32078" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="3.60116" />
                                                  <Key frame="20" value="0" />
                                                  <Key frame="28" value="29.5016" />
                                                  <Key frame="36" value="-38.5028" />
                                                  <Key frame="44" value="-1.23289" />
                                                  <Key frame="50" value="11.1598" />
                                                  <Key frame="56" value="4.2164" />
                                                  <Key frame="62" value="-2.02391" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="119.496" />
                                                  <Key frame="20" value="120" />
                                                  <Key frame="26" value="116.806" />
                                                  <Key frame="36" value="119.496" />
                                                  <Key frame="44" value="119.5" />
                                                  <Key frame="50" value="74.9692" />
                                                  <Key frame="56" value="51.7658" />
                                                  <Key frame="59" value="40.3" />
                                                  <Key frame="62" value="51.6779" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="56.1604" />
                                                  <Key frame="20" value="21" />
                                                  <Key frame="26" value="20" />
                                                  <Key frame="36" value="20" />
                                                  <Key frame="44" value="23" />
                                                  <Key frame="50" value="67.1469" />
                                                  <Key frame="56" value="22.7616" />
                                                  <Key frame="62" value="12.3903" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                                  <Key frame="10" value="-43.5967" />
                                                  <Key frame="20" value="9" />
                                                  <Key frame="26" value="7.02893" />
                                                  <Key frame="36" value="5" />
                                                  <Key frame="44" value="3.42537" />
                                                  <Key frame="50" value="-54.6711" />
                                                  <Key frame="56" value="-55.1984" />
                                                  <Key frame="62" value="-25.1394" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="-35.7695" />
                                                  <Key frame="20" value="0" />
                                                  <Key frame="26" value="-88.5" />
                                                  <Key frame="36" value="-89.5017" />
                                                  <Key frame="44" value="-50.1" />
                                                  <Key frame="46" value="-59.3" />
                                                  <Key frame="50" value="-38.9336" />
                                                  <Key frame="56" value="-64.3343" />
                                                  <Key frame="62" value="-70.7504" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                                  <Key frame="10" value="-40.4326" />
                                                  <Key frame="26" value="-102.484" />
                                                  <Key frame="44" value="-41.2236" />
                                                  <Key frame="50" value="-2.72705" />
                                                  <Key frame="62" value="3.42537" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                                  <Key frame="10" value="0.0502082" />
                                                  <Key frame="26" value="0.0763898" />
                                                  <Key frame="44" value="0.0905716" />
                                                  <Key frame="50" value="0.0127537" />
                                                  <Key frame="62" value="0.3004" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="119.496" />
                                                  <Key frame="20" value="120" />
                                                  <Key frame="26" value="111.889" />
                                                  <Key frame="36" value="119.496" />
                                                  <Key frame="44" value="119.5" />
                                                  <Key frame="50" value="109.955" />
                                                  <Key frame="56" value="59.4172" />
                                                  <Key frame="59" value="41.8" />
                                                  <Key frame="62" value="53.0011" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="-61.5266" />
                                                  <Key frame="20" value="-21" />
                                                  <Key frame="26" value="-20" />
                                                  <Key frame="36" value="-20" />
                                                  <Key frame="44" value="-23.5" />
                                                  <Key frame="50" value="-51.507" />
                                                  <Key frame="56" value="-42.4541" />
                                                  <Key frame="62" value="-13.8893" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                                  <Key frame="10" value="43.8556" />
                                                  <Key frame="20" value="-9" />
                                                  <Key frame="26" value="-14.7682" />
                                                  <Key frame="36" value="-5" />
                                                  <Key frame="44" value="-3.78175" />
                                                  <Key frame="50" value="90.3503" />
                                                  <Key frame="56" value="61.1702" />
                                                  <Key frame="62" value="30.0566" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="40.6963" />
                                                  <Key frame="20" value="0" />
                                                  <Key frame="26" value="88.5" />
                                                  <Key frame="36" value="89.5017" />
                                                  <Key frame="44" value="40.9" />
                                                  <Key frame="46" value="60.4" />
                                                  <Key frame="50" value="54.8468" />
                                                  <Key frame="56" value="65.6575" />
                                                  <Key frame="62" value="72.7768" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                                  <Key frame="10" value="66.0043" />
                                                  <Key frame="26" value="98.8758" />
                                                  <Key frame="44" value="63.6312" />
                                                  <Key frame="50" value="14.1482" />
                                                  <Key frame="62" value="-3.2544" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                                  <Key frame="10" value="0" />
                                                  <Key frame="20" value="0" />
                                                  <Key frame="26" value="0.0182082" />
                                                  <Key frame="44" value="0.00293558" />
                                                  <Key frame="50" value="0.126571" />
                                                  <Key frame="62" value="0.2996" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="-26.9804" />
                                                  <Key frame="20" value="0" />
                                                  <Key frame="31" value="0.441863" />
                                                  <Key frame="36" value="-2.73208e-05" />
                                                  <Key frame="44" value="-37.5274" />
                                                  <Key frame="50" value="-40.34" />
                                                  <Key frame="62" value="-35.418" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="2.55126" />
                                                  <Key frame="20" value="8.991e-06" />
                                                  <Key frame="31" value="3.34229" />
                                                  <Key frame="36" value="8.991e-06" />
                                                  <Key frame="44" value="-3.68905" />
                                                  <Key frame="50" value="8.06912" />
                                                  <Key frame="62" value="15.9987" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="14.3288" />
                                                  <Key frame="20" value="-10" />
                                                  <Key frame="31" value="21.448" />
                                                  <Key frame="36" value="-10" />
                                                  <Key frame="44" value="-67.4984" />
                                                  <Key frame="50" value="-90" />
                                                  <Key frame="62" value="-90.5261" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                                  <Key frame="10" value="5.2711" />
                                                  <Key frame="20" value="96" />
                                                  <Key frame="31" value="115.751" />
                                                  <Key frame="36" value="96" />
                                                  <Key frame="44" value="61.6976" />
                                                  <Key frame="50" value="80.3062" />
                                                  <Key frame="62" value="79.9791" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                                  <Key frame="10" value="47.2833" />
                                                  <Key frame="20" value="14" />
                                                  <Key frame="31" value="-26.0184" />
                                                  <Key frame="36" value="14" />
                                                  <Key frame="44" value="38.8457" />
                                                  <Key frame="50" value="44.4668" />
                                                  <Key frame="62" value="47.8986" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="-1.93121" />
                                                  <Key frame="20" value="0" />
                                                  <Key frame="31" value="-1.93121" />
                                                  <Key frame="36" value="0" />
                                                  <Key frame="44" value="9.75839" />
                                                  <Key frame="50" value="5.20441" />
                                                  <Key frame="62" value="-0.524946" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="-8.52309" />
                                                  <Key frame="20" value="0" />
                                                  <Key frame="31" value="-1.31597" />
                                                  <Key frame="36" value="0" />
                                                  <Key frame="44" value="3.51807" />
                                                  <Key frame="50" value="-6.98985" />
                                                  <Key frame="62" value="-15.3786" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="10.6325" />
                                                  <Key frame="20" value="-10" />
                                                  <Key frame="31" value="16.1697" />
                                                  <Key frame="36" value="-10" />
                                                  <Key frame="44" value="-66.7122" />
                                                  <Key frame="50" value="-90" />
                                                  <Key frame="62" value="-91.234" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                                  <Key frame="10" value="10.9889" />
                                                  <Key frame="20" value="96" />
                                                  <Key frame="31" value="116.107" />
                                                  <Key frame="36" value="96" />
                                                  <Key frame="44" value="62.7571" />
                                                  <Key frame="50" value="78.8859" />
                                                  <Key frame="62" value="80.687" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                                  <Key frame="10" value="26.7215" />
                                                  <Key frame="20" value="14" />
                                                  <Key frame="31" value="-21.4432" />
                                                  <Key frame="36" value="14" />
                                                  <Key frame="44" value="41.1357" />
                                                  <Key frame="50" value="44.1094" />
                                                  <Key frame="62" value="48.6944" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="9.5826" />
                                                  <Key frame="20" value="4.94951e-06" />
                                                  <Key frame="31" value="-2.28278" />
                                                  <Key frame="36" value="4.94951e-06" />
                                                  <Key frame="44" value="-8.25942" />
                                                  <Key frame="50" value="-6.87076" />
                                                  <Key frame="62" value="1.0571" />
                                                </ActuatorCurve>
                                              </ActuatorList>
                                            </Timeline>
                                          </Box>
                                          <Box name="SideToBelly" id="6" localization="8" tooltip="Lie down on the back or the belly from an other lie down position (on the side)." x="513" y="538">
                                            <bitmap>media/images/box/movement/move.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		""

	def onInput_onStop(self):
		""]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="10">
                                              <ActuatorList model="nao">
                                                <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                                  <Key frame="5" value="41.3067" />
                                                  <Key frame="10" value="41.3067" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                                  <Key frame="5" value="8.52309" />
                                                  <Key frame="10" value="8.52309" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                                  <Key frame="5" value="108.72" />
                                                  <Key frame="10" value="108.72" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                                  <Key frame="5" value="45.965" />
                                                  <Key frame="10" value="45.965" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                                  <Key frame="5" value="-56.8684" />
                                                  <Key frame="10" value="-56.8684" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                                  <Key frame="5" value="-26.8046" />
                                                  <Key frame="10" value="-26.8046" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                                  <Key frame="5" value="-38.8505" />
                                                  <Key frame="10" value="-38.8505" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                                  <Key frame="5" value="0.200389" />
                                                  <Key frame="10" value="0.200389" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                                  <Key frame="5" value="113.383" />
                                                  <Key frame="10" value="113.383" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                                  <Key frame="5" value="-44.6514" />
                                                  <Key frame="10" value="-44.6514" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                                  <Key frame="5" value="52.9084" />
                                                  <Key frame="10" value="52.9084" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                                  <Key frame="5" value="19.5144" />
                                                  <Key frame="10" value="19.5144" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                                  <Key frame="5" value="37" />
                                                  <Key frame="10" value="37" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                                  <Key frame="5" value="0.146571" />
                                                  <Key frame="10" value="0.146571" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                                  <Key frame="5" value="-65.5648" />
                                                  <Key frame="10" value="-65.5648" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                                  <Key frame="5" value="14.4166" />
                                                  <Key frame="10" value="14.4166" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                                  <Key frame="5" value="2.02391" />
                                                  <Key frame="10" value="2.02391" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                                  <Key frame="5" value="-5.27591" />
                                                  <Key frame="10" value="-5.27591" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                                  <Key frame="5" value="20.3885" />
                                                  <Key frame="10" value="20.3885" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                                  <Key frame="5" value="19.6902" />
                                                  <Key frame="10" value="19.6902" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                                  <Key frame="5" value="-1.75543" />
                                                  <Key frame="10" value="-1.75543" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                                  <Key frame="5" value="23.8163" />
                                                  <Key frame="10" value="23.8163" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                                  <Key frame="5" value="-5.2711" />
                                                  <Key frame="10" value="-5.2711" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                                  <Key frame="5" value="29.9735" />
                                                  <Key frame="10" value="29.9735" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                                  <Key frame="5" value="-3.86483" />
                                                  <Key frame="10" value="-3.86483" />
                                                </ActuatorCurve>
                                              </ActuatorList>
                                            </Timeline>
                                          </Box>
                                          <Box name="Switch Case" id="9" localization="8" tooltip="Test input value and stimulate the output matching to this value. If there is no&#x0A;output matching, the default output (onDefault) is stimulated.&#x0A;&#x0A;You can edit a case by left double-clicking on the line. You can add a&#x0A;case by right clicking on a line and selecting &apos;Insert a row&apos;. You can delete&#x0A;a case by right clicking on a line and selecting &apos;Remove a row&apos;." plugin="dispatcher_plugin" x="261" y="101">
                                            <bitmap>media/images/box/interaction/choice.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion("Back")):
			self.output_1(p)
		elif(p == self.typeConversion("Stand")):
			self.output_2(p)
		elif(p == self.typeConversion("Crouch")):
			self.output_3(p)
		elif(p == self.typeConversion("Knee")):
			self.output_4(p)
		elif(p == self.typeConversion("Frog")):
			self.output_5(p)
		elif(p == self.typeConversion("Belly")):
			self.output_6(p)
		elif(p == self.typeConversion("Left")):
			self.output_7(p)
		elif(p == self.typeConversion("Right")):
			self.output_8(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]>
                                              </content>
                                            </script>
                                            <pluginContent>
                                              <keywords>
                                                <keyword>&quot;Back&quot;</keyword>
                                                <keyword>&quot;Stand&quot;</keyword>
                                                <keyword>&quot;Crouch&quot;</keyword>
                                                <keyword>&quot;Knee&quot;</keyword>
                                                <keyword>&quot;Frog&quot;</keyword>
                                                <keyword>&quot;Belly&quot;</keyword>
                                                <keyword>&quot;Left&quot;</keyword>
                                                <keyword>&quot;Right&quot;</keyword>
                                                <keyword></keyword>
                                              </keywords>
                                            </pluginContent>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Value to test." id="2" />
                                            <Output name="onDefault" type="1" type_size="1" nature="1" inner="0" tooltip="If the input value does not match any value set on the box." id="3" />
                                            <Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="4" />
                                            <Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="5" />
                                            <Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="6" />
                                            <Output name="output_4" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="7" />
                                            <Output name="output_5" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="8" />
                                            <Output name="output_6" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="9" />
                                            <Output name="output_7" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="10" />
                                            <Output name="output_8" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="11" />
                                          </Box>
                                          <Box name="Switch Case" id="1" localization="8" tooltip="Test input value and stimulate the output matching to this value. If there is no&#x0A;output matching, the default output (onDefault) is stimulated.&#x0A;&#x0A;You can edit a case by left double-clicking on the line. You can add a&#x0A;case by right clicking on a line and selecting &apos;Insert a row&apos;. You can delete&#x0A;a case by right clicking on a line and selecting &apos;Remove a row&apos;." plugin="dispatcher_plugin" x="795" y="538">
                                            <bitmap>media/images/box/interaction/choice.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion("Belly")):
			self.output_1(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]>
                                              </content>
                                            </script>
                                            <pluginContent>
                                              <keywords>
                                                <keyword>&quot;Belly&quot;</keyword>
                                                <keyword></keyword>
                                              </keywords>
                                            </pluginContent>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Value to test." id="2" />
                                            <Output name="onDefault" type="1" type_size="1" nature="1" inner="0" tooltip="If the input value does not match any value set on the box." id="3" />
                                            <Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="4" />
                                          </Box>
                                          <Box name="Switch Case" id="4" localization="8" tooltip="Test input value and stimulate the output matching to this value. If there is no&#x0A;output matching, the default output (onDefault) is stimulated.&#x0A;&#x0A;You can edit a case by left double-clicking on the line. You can add a&#x0A;case by right clicking on a line and selecting &apos;Insert a row&apos;. You can delete&#x0A;a case by right clicking on a line and selecting &apos;Remove a row&apos;." plugin="dispatcher_plugin" x="977" y="378">
                                            <bitmap>media/images/box/interaction/choice.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion("Crouch")):
			self.output_1(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]>
                                              </content>
                                            </script>
                                            <pluginContent>
                                              <keywords>
                                                <keyword>&quot;Crouch&quot;</keyword>
                                                <keyword></keyword>
                                              </keywords>
                                            </pluginContent>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Value to test." id="2" />
                                            <Output name="onDefault" type="1" type_size="1" nature="1" inner="0" tooltip="If the input value does not match any value set on the box." id="3" />
                                            <Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="4" />
                                          </Box>
                                          <Box name="Get Robot Pose" id="5" localization="8" tooltip="Return NAO&apos;s current pose.&#x0A;&#x0A;Note: The box waits for the robot pose to be stabilized. You can set the maximum&#x0A;time to wait in parameters. After this time is ellapsed, the current pose is sent to the&#x0A;output anyway." x="656" y="542">
                                            <bitmap>media/images/box/sensors/inertial_unit.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.robotPoseProxy = ALProxy("ALRobotPosture")
        self.threadTime = 0.1 #seconds

    def onLoad(self):
        self.bIsRunning = False
        self.bMustStop = False

    def onUnload(self):
        self.bMustStop = True

    def onInput_onStart(self):
        if( self.bIsRunning ):
            return
        self.bIsRunning = True
        self.bMustStop = False
        beginTime = time.time()
        RobotPoseAndTime = ["Unknown", 0.]
        while( not self.bMustStop ):
            RobotPoseAndTime = self.robotPoseProxy.getActualPoseAndTime()
            # as soon as the robot is not moving anymore from its position, give its position
            if( RobotPoseAndTime[1] > 0.5 or time.time() - beginTime > self.getParameter("Time to wait for pose stabilization (s)") ):
                self.bMustStop = True
            if( not self.bMustStop ):
                time.sleep(self.threadTime)
        self.robotPose(RobotPoseAndTime[0])
        self.bIsRunning = False]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Output name="robotPose" type="3" type_size="1" nature="2" inner="0" tooltip='NAO&apos;s current pose. It can be:&#x0A;- &quot;Unknown&quot;&#x0A;- &quot;Stand&quot;&#x0A;- &quot;Sit&quot;&#x0A;- &quot;Crouch&quot;&#x0A;- &quot;Knee&quot;&#x0A;- &quot;Frog&quot;&#x0A;- &quot;Back&quot;&#x0A;- &quot;Belly&quot;&#x0A;- &quot;Left&quot;&#x0A;- &quot;Right&quot;&#x0A;- &quot;HeadBack&quot;' id="3" />
                                            <Parameter name="Time to wait for pose stabilization (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0.5" max="10" tooltip="Maximum time to wait NAO&apos;s pose stabilization. After this time is ellapsed,&#x0A;the current pose is sent to the output even though it is not stabilized." id="4" />
                                          </Box>
                                          <Box name="Get Robot Pose" id="2" localization="8" tooltip="Return NAO&apos;s current pose.&#x0A;&#x0A;Note: The box waits for the robot pose to be stabilized. You can set the maximum&#x0A;time to wait in parameters. After this time is ellapsed, the current pose is sent to the&#x0A;output anyway." x="845" y="378">
                                            <bitmap>media/images/box/sensors/inertial_unit.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.robotPoseProxy = ALProxy("ALRobotPosture")
        self.threadTime = 0.1 #seconds

    def onLoad(self):
        self.bIsRunning = False
        self.bMustStop = False

    def onUnload(self):
        self.bMustStop = True

    def onInput_onStart(self):
        if( self.bIsRunning ):
            return
        self.bIsRunning = True
        self.bMustStop = False
        beginTime = time.time()
        RobotPoseAndTime = ["Unknown", 0.]
        while( not self.bMustStop ):
            RobotPoseAndTime = self.robotPoseProxy.getActualPoseAndTime()
            # as soon as the robot is not moving anymore from its position, give its position
            if( RobotPoseAndTime[1] > 0.5 or time.time() - beginTime > self.getParameter("Time to wait for pose stabilization (s)") ):
                self.bMustStop = True
            if( not self.bMustStop ):
                time.sleep(self.threadTime)
        self.robotPose(RobotPoseAndTime[0])
        self.bIsRunning = False]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Output name="robotPose" type="3" type_size="1" nature="2" inner="0" tooltip='NAO&apos;s current pose. It can be:&#x0A;- &quot;Unknown&quot;&#x0A;- &quot;Stand&quot;&#x0A;- &quot;Sit&quot;&#x0A;- &quot;Crouch&quot;&#x0A;- &quot;Knee&quot;&#x0A;- &quot;Frog&quot;&#x0A;- &quot;Back&quot;&#x0A;- &quot;Belly&quot;&#x0A;- &quot;Left&quot;&#x0A;- &quot;Right&quot;&#x0A;- &quot;HeadBack&quot;' id="3" />
                                            <Parameter name="Time to wait for pose stabilization (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0.5" max="10" tooltip="Maximum time to wait NAO&apos;s pose stabilization. After this time is ellapsed,&#x0A;the current pose is sent to the output even though it is not stabilized." id="4" />
                                          </Box>
                                          <Box name="Get Robot Pose" id="3" localization="8" tooltip="Return NAO&apos;s current pose.&#x0A;&#x0A;Note: The box waits for the robot pose to be stabilized. You can set the maximum&#x0A;time to wait in parameters. After this time is ellapsed, the current pose is sent to the&#x0A;output anyway." x="89" y="38">
                                            <bitmap>media/images/box/sensors/inertial_unit.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.robotPoseProxy = ALProxy("ALRobotPosture")
        self.threadTime = 0.1 #seconds

    def onLoad(self):
        self.bIsRunning = False
        self.bMustStop = False

    def onUnload(self):
        self.bMustStop = True

    def onInput_onStart(self):
        if( self.bIsRunning ):
            return
        self.bIsRunning = True
        self.bMustStop = False
        beginTime = time.time()
        RobotPoseAndTime = ["Unknown", 0.]
        while( not self.bMustStop ):
            RobotPoseAndTime = self.robotPoseProxy.getActualPoseAndTime()
            # as soon as the robot is not moving anymore from its position, give its position
            if( RobotPoseAndTime[1] > 0.5 or time.time() - beginTime > self.getParameter("Time to wait for pose stabilization (s)") ):
                self.bMustStop = True
            if( not self.bMustStop ):
                time.sleep(self.threadTime)
        self.robotPose(RobotPoseAndTime[0])
        self.bIsRunning = False]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Output name="robotPose" type="3" type_size="1" nature="2" inner="0" tooltip='NAO&apos;s current pose. It can be:&#x0A;- &quot;Unknown&quot;&#x0A;- &quot;Stand&quot;&#x0A;- &quot;Sit&quot;&#x0A;- &quot;Crouch&quot;&#x0A;- &quot;Knee&quot;&#x0A;- &quot;Frog&quot;&#x0A;- &quot;Back&quot;&#x0A;- &quot;Belly&quot;&#x0A;- &quot;Left&quot;&#x0A;- &quot;Right&quot;&#x0A;- &quot;HeadBack&quot;' id="3" />
                                            <Parameter name="Time to wait for pose stabilization (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0.5" max="10" tooltip="Maximum time to wait NAO&apos;s pose stabilization. After this time is ellapsed,&#x0A;the current pose is sent to the output even though it is not stabilized." id="4" />
                                          </Box>
                                          <Box name="Relax Motors" id="7" localization="8" tooltip="Relax motors for a while for a better electric current consumption.&#x0A;&#x0A;!!Warning!! This box must be applied only after a Sit Down. In other positions NAO&#x0A;could fall." x="1087" y="131">
                                            <bitmap>media/images/box/movement/stiffness.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        # WARNING: This should only be called when sitting and its
        # behavior may change in future version. The aim of the method
        # is to reduce battery usage when motors are stiff while sitting.
        try:
            ALMotion._relaxMotorsWhenSitting()
        except:
            pass
        self.onStopped()]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                          </Box>
                                          <Link inputowner="11" indexofinput="2" outputowner="9" indexofoutput="6" />
                                          <Link inputowner="12" indexofinput="2" outputowner="9" indexofoutput="8" />
                                          <Link inputowner="12" indexofinput="2" outputowner="9" indexofoutput="9" />
                                          <Link inputowner="6" indexofinput="2" outputowner="9" indexofoutput="11" />
                                          <Link inputowner="14" indexofinput="2" outputowner="9" indexofoutput="4" />
                                          <Link inputowner="11" indexofinput="2" outputowner="9" indexofoutput="5" />
                                          <Link inputowner="12" indexofinput="2" outputowner="9" indexofoutput="7" />
                                          <Link inputowner="6" indexofinput="2" outputowner="9" indexofoutput="10" />
                                          <Link inputowner="0" indexofinput="4" outputowner="9" indexofoutput="3" />
                                          <Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="3" />
                                          <Link inputowner="12" indexofinput="2" outputowner="1" indexofoutput="4" />
                                          <Link inputowner="11" indexofinput="2" outputowner="4" indexofoutput="4" />
                                          <Link inputowner="0" indexofinput="4" outputowner="4" indexofoutput="3" />
                                          <Link inputowner="5" indexofinput="2" outputowner="6" indexofoutput="4" />
                                          <Link inputowner="1" indexofinput="2" outputowner="5" indexofoutput="3" />
                                          <Link inputowner="2" indexofinput="2" outputowner="12" indexofoutput="4" />
                                          <Link inputowner="4" indexofinput="2" outputowner="2" indexofoutput="3" />
                                          <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="2" />
                                          <Link inputowner="9" indexofinput="2" outputowner="3" indexofoutput="3" />
                                          <Link inputowner="7" indexofinput="2" outputowner="14" indexofoutput="4" />
                                          <Link inputowner="7" indexofinput="2" outputowner="11" indexofoutput="4" />
                                          <Link inputowner="0" indexofinput="4" outputowner="7" indexofoutput="3" />
                                        </Diagram>
                                      </BehaviorKeyframe>
                                    </BehaviorLayer>
                                  </Timeline>
                                </Box>
                                <Box name="Switch Case" id="1" localization="8" tooltip="Test input value and stimulate the output matching to this value. If there is no&#x0A;output matching, the default output (onDefault) is stimulated.&#x0A;&#x0A;You can edit a case by left double-clicking on the line. You can add a&#x0A;case by right clicking on a line and selecting &apos;Insert a row&apos;. You can delete&#x0A;a case by right clicking on a line and selecting &apos;Remove a row&apos;." plugin="dispatcher_plugin" x="431" y="128">
                                  <bitmap>media/images/box/interaction/choice.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion("Sit")):
			self.output_1(p)
		elif(p == self.typeConversion("Unknown")):
			self.output_2(p)
		elif(p == self.typeConversion("HeadBack")):
			self.output_3(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]>
                                    </content>
                                  </script>
                                  <pluginContent>
                                    <keywords>
                                      <keyword>&quot;Sit&quot;</keyword>
                                      <keyword>&quot;Unknown&quot;</keyword>
                                      <keyword>&quot;HeadBack&quot;</keyword>
                                      <keyword></keyword>
                                    </keywords>
                                  </pluginContent>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Value to test." id="2" />
                                  <Output name="onDefault" type="1" type_size="1" nature="1" inner="0" tooltip="If the input value does not match any value set on the box." id="3" />
                                  <Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="4" />
                                  <Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="5" />
                                  <Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="6" />
                                </Box>
                                <Box name="Only Once" id="4" localization="8" tooltip="This box&apos;s output is stimulated only the first time the onSignal input is." x="104" y="62">
                                  <bitmap>media/images/box/box-script.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.bFirstTime = True

    def onUnload(self):
        self.bFirstTime = True

    def onInput_onSignal(self):
        if( self.bFirstTime ):
            self.bFirstTime = False
            self.firstTime()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onSignal" type="1" type_size="1" nature="1" inner="0" tooltip="The signal that must pass only once." id="2" />
                                  <Output name="firstTime" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent first time the onSignal input is stimulated." id="3" />
                                </Box>
                                <Box name="Set Stiffness" id="7" localization="8" tooltip="Set motors stiffness." x="707" y="221">
                                  <bitmap>media/images/box/movement/stiffness.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def setStiffness(self, stiffness):
        self.bIsRunning = True
        duration = self.getParameter("Duration (s)")
        if(self.getParameter("Head")):
            ALMotion.post.stiffnessInterpolation("Head", stiffness, duration)
        if(self.getParameter("Left arm")):
            ALMotion.post.stiffnessInterpolation("LArm", stiffness, duration)
        if(self.getParameter("Right arm")):
            ALMotion.post.stiffnessInterpolation("RArm", stiffness, duration)
        if(self.getParameter("Left leg")):
            ALMotion.post.stiffnessInterpolation("LLeg", stiffness, duration)
        if(self.getParameter("Right leg")):
            ALMotion.post.stiffnessInterpolation("RLeg", stiffness, duration)
        time.sleep(duration)
        self.bIsRunning = False

    def onInput_onSet(self):
        if( self.bIsRunning ):
            return
        self.setStiffness(self.getParameter("Motors stiffness (%)")/100.)
        self.onReady() #~ activate output of the box]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onSet" type="1" type_size="1" nature="1" inner="0" tooltip="When this input is stimulated, the stiffness of the selected motors is set to&#x0A;the stiffness parameter value." id="2" />
                                  <Output name="onReady" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when stiffness has been set." id="3" />
                                  <Parameter name="Head" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Do we want to modify the head stiffness?" id="4" />
                                  <Parameter name="Left arm" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Do we want to modify the left arm stiffness?" id="5" />
                                  <Parameter name="Right arm" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Do we want to modify the right arm stiffness?" id="6" />
                                  <Parameter name="Left leg" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Do we want to modify the left leg stiffness?" id="7" />
                                  <Parameter name="Right leg" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Do we want to modify the right leg stiffness?" id="8" />
                                  <Parameter name="Motors stiffness (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Stiffness value the motors are set to." id="9" />
                                  <Parameter name="Duration (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0.02" max="10" tooltip="How much time to go to the max/min stiffness in seconds." id="10" />
                                </Box>
                                <Box name="Get Robot Pose" id="2" localization="8" tooltip="Return NAO&apos;s current pose.&#x0A;&#x0A;Note: The box waits for the robot pose to be stabilized. You can set the maximum&#x0A;time to wait in parameters. After this time is ellapsed, the current pose is sent to the&#x0A;output anyway." x="272" y="115">
                                  <bitmap>media/images/box/sensors/inertial_unit.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.robotPoseProxy = ALProxy("ALRobotPosture")
        self.threadTime = 0.1 #seconds

    def onLoad(self):
        self.bIsRunning = False
        self.bMustStop = False

    def onUnload(self):
        self.bMustStop = True

    def onInput_onStart(self):
        if( self.bIsRunning ):
            return
        self.bIsRunning = True
        self.bMustStop = False
        beginTime = time.time()
        RobotPoseAndTime = ["Unknown", 0.]
        while( not self.bMustStop ):
            RobotPoseAndTime = self.robotPoseProxy.getActualPoseAndTime()
            # as soon as the robot is not moving anymore from its position, give its position
            if( RobotPoseAndTime[1] > 0.5 or time.time() - beginTime > self.getParameter("Time to wait for pose stabilization (s)") ):
                self.bMustStop = True
            if( not self.bMustStop ):
                time.sleep(self.threadTime)
        self.robotPose(RobotPoseAndTime[0])
        self.bIsRunning = False]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Output name="robotPose" type="3" type_size="1" nature="2" inner="0" tooltip='NAO&apos;s current pose. It can be:&#x0A;- &quot;Unknown&quot;&#x0A;- &quot;Stand&quot;&#x0A;- &quot;Sit&quot;&#x0A;- &quot;Crouch&quot;&#x0A;- &quot;Knee&quot;&#x0A;- &quot;Frog&quot;&#x0A;- &quot;Back&quot;&#x0A;- &quot;Belly&quot;&#x0A;- &quot;Left&quot;&#x0A;- &quot;Right&quot;&#x0A;- &quot;HeadBack&quot;' id="3" />
                                  <Parameter name="Time to wait for pose stabilization (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0.5" max="10" tooltip="Maximum time to wait NAO&apos;s pose stabilization. After this time is ellapsed,&#x0A;the current pose is sent to the output even though it is not stabilized." id="4" />
                                </Box>
                                <Box name="Left Sit Motion" id="3" localization="8" tooltip="The robot makes the right motion to sit down depending on its current position." x="597" y="514">
                                  <bitmap>media/images/box/movement/sit_ground.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        self.count = 0
        pass

    def onInput_onStop(self):
        self.onUnload()
        pass]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent after a step to sit down is done." id="4" />
                                  <Timeline enable="0">
                                    <BehaviorLayer name="SitDownBehavior">
                                      <BehaviorKeyframe name="DetectRobotPose" index="1">
                                        <Diagram>
                                          <Box name="CrouchToSitDown" id="11" localization="8" tooltip="Sit down from crouch or stand position." x="941" y="228">
                                            <bitmap>media/images/box/movement/move.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="72">
                                              <ActuatorList model="nao">
                                                <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                                  <Key frame="13" value="-18.1081" />
                                                  <Key frame="24" value="-25.2273" />
                                                  <Key frame="34" value="-36.3017" />
                                                  <Key frame="43" value="-35.9501" />
                                                  <Key frame="52" value="-23.4695" />
                                                  <Key frame="59" value="-10.5494" />
                                                  <Key frame="66" value="-0.00240423" />
                                                  <Key frame="72" value="-1.23289" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                                  <Key frame="13" value="21.2674" />
                                                  <Key frame="24" value="21.5311" />
                                                  <Key frame="34" value="21.0916" />
                                                  <Key frame="43" value="20.4764" />
                                                  <Key frame="52" value="21.0916" />
                                                  <Key frame="59" value="21.0037" />
                                                  <Key frame="66" value="21.7069" />
                                                  <Key frame="72" value="-1.93602" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                                  <Key frame="13" value="46.3" />
                                                  <Key frame="24" value="34" />
                                                  <Key frame="34" value="99.9353" />
                                                  <Key frame="39" value="119" />
                                                  <Key frame="52" value="119.496" />
                                                  <Key frame="59" value="108.197" />
                                                  <Key frame="66" value="44.8" />
                                                  <Key frame="72" value="53.3527" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                                  <Key frame="13" value="32.5223" />
                                                  <Key frame="24" value="53.3" />
                                                  <Key frame="29" value="43.7" />
                                                  <Key frame="34" value="31.7" />
                                                  <Key frame="39" value="30.1" />
                                                  <Key frame="52" value="31.7" />
                                                  <Key frame="59" value="89.2" />
                                                  <Key frame="66" value="31.4676" />
                                                  <Key frame="72" value="15.1198" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                                  <Key frame="13" value="-8" />
                                                  <Key frame="24" value="-0.261271" />
                                                  <Key frame="34" value="3.95753" />
                                                  <Key frame="39" value="8.44001" />
                                                  <Key frame="52" value="-6.7" />
                                                  <Key frame="59" value="-100.37" />
                                                  <Key frame="66" value="-64.598" />
                                                  <Key frame="72" value="-29.705" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                                  <Key frame="13" value="-48" />
                                                  <Key frame="24" value="-27.4246" />
                                                  <Key frame="34" value="-4.48488" />
                                                  <Key frame="39" value="-5.80326" />
                                                  <Key frame="52" value="-33.9" />
                                                  <Key frame="59" value="-59.5051" />
                                                  <Key frame="66" value="-74.0951" />
                                                  <Key frame="72" value="-73.4799" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                                  <Key frame="13" value="-10.8083" />
                                                  <Key frame="24" value="-60.4671" />
                                                  <Key frame="34" value="-60.2913" />
                                                  <Key frame="39" value="-59.764" />
                                                  <Key frame="52" value="-59.764" />
                                                  <Key frame="59" value="-60.0276" />
                                                  <Key frame="66" value="-60.8187" />
                                                  <Key frame="72" value="3.43018" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                                  <Key frame="13" value="0.406207" />
                                                  <Key frame="24" value="0.0854807" />
                                                  <Key frame="34" value="0.0883898" />
                                                  <Key frame="39" value="0.103299" />
                                                  <Key frame="52" value="0.117844" />
                                                  <Key frame="59" value="0.114935" />
                                                  <Key frame="66" value="0.121117" />
                                                  <Key frame="72" value="0.2996" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                                  <Key frame="13" value="59.8" />
                                                  <Key frame="24" value="41.8" />
                                                  <Key frame="29" value="41.8" />
                                                  <Key frame="34" value="57.9182" />
                                                  <Key frame="43" value="86.2194" />
                                                  <Key frame="52" value="116.542" />
                                                  <Key frame="59" value="88.1" />
                                                  <Key frame="66" value="38.8" />
                                                  <Key frame="72" value="52.2932" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                                  <Key frame="13" value="-19.2459" />
                                                  <Key frame="24" value="-30.6718" />
                                                  <Key frame="34" value="-27.6" />
                                                  <Key frame="43" value="-48" />
                                                  <Key frame="52" value="-25.4" />
                                                  <Key frame="59" value="-89.2" />
                                                  <Key frame="66" value="-32.6054" />
                                                  <Key frame="72" value="-12.5661" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                                  <Key frame="13" value="32.2587" />
                                                  <Key frame="24" value="4.9" />
                                                  <Key frame="34" value="-6.06212" />
                                                  <Key frame="43" value="89" />
                                                  <Key frame="52" value="18.8991" />
                                                  <Key frame="59" value="69.2" />
                                                  <Key frame="66" value="43.5967" />
                                                  <Key frame="72" value="25.0515" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                                  <Key frame="13" value="54.9299" />
                                                  <Key frame="24" value="68.9" />
                                                  <Key frame="34" value="40" />
                                                  <Key frame="43" value="51.7" />
                                                  <Key frame="47" value="27.9" />
                                                  <Key frame="52" value="39.3" />
                                                  <Key frame="59" value="55" />
                                                  <Key frame="66" value="75.7603" />
                                                  <Key frame="72" value="73.3872" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                                  <Key frame="13" value="-5.00742" />
                                                  <Key frame="24" value="41.0478" />
                                                  <Key frame="34" value="41.0478" />
                                                  <Key frame="43" value="41.0478" />
                                                  <Key frame="52" value="41.751" />
                                                  <Key frame="59" value="41.8389" />
                                                  <Key frame="66" value="41.3994" />
                                                  <Key frame="72" value="-3.42537" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                                  <Key frame="13" value="0.231662" />
                                                  <Key frame="24" value="0.0669354" />
                                                  <Key frame="34" value="0.0665718" />
                                                  <Key frame="43" value="0.0665718" />
                                                  <Key frame="52" value="0.0731171" />
                                                  <Key frame="59" value="0.0694809" />
                                                  <Key frame="66" value="0.0607536" />
                                                  <Key frame="72" value="0.3004" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                                  <Key frame="13" value="-22.7616" />
                                                  <Key frame="24" value="-24.2557" />
                                                  <Key frame="34" value="-52.0295" />
                                                  <Key frame="43" value="-33.5722" />
                                                  <Key frame="52" value="-30.9355" />
                                                  <Key frame="59" value="-45.4376" />
                                                  <Key frame="66" value="-44.5587" />
                                                  <Key frame="72" value="-35.1543" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                                  <Key frame="13" value="7.90785" />
                                                  <Key frame="24" value="14.6755" />
                                                  <Key frame="34" value="21.7947" />
                                                  <Key frame="43" value="32.957" />
                                                  <Key frame="52" value="30.6718" />
                                                  <Key frame="59" value="12.3024" />
                                                  <Key frame="66" value="18.4549" />
                                                  <Key frame="72" value="15.3786" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                                  <Key frame="13" value="-43.8604" />
                                                  <Key frame="24" value="-49.2218" />
                                                  <Key frame="34" value="-78.226" />
                                                  <Key frame="43" value="-94.5739" />
                                                  <Key frame="52" value="-88.3336" />
                                                  <Key frame="59" value="-92.2008" />
                                                  <Key frame="66" value="-81.2144" />
                                                  <Key frame="72" value="-90.8824" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                                  <Key frame="13" value="108.461" />
                                                  <Key frame="24" value="44.3877" />
                                                  <Key frame="34" value="65.4817" />
                                                  <Key frame="43" value="65.6575" />
                                                  <Key frame="52" value="59.5" />
                                                  <Key frame="59" value="68.6458" />
                                                  <Key frame="66" value="56.1652" />
                                                  <Key frame="72" value="80.5991" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                                  <Key frame="13" value="-41.8341" />
                                                  <Key frame="24" value="19.1628" />
                                                  <Key frame="34" value="26.1941" />
                                                  <Key frame="43" value="44.2119" />
                                                  <Key frame="52" value="40.8721" />
                                                  <Key frame="59" value="53.4029" />
                                                  <Key frame="66" value="53.4029" />
                                                  <Key frame="72" value="48.6944" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                                  <Key frame="13" value="-12.0436" />
                                                  <Key frame="24" value="-29.0067" />
                                                  <Key frame="34" value="-3.34229" />
                                                  <Key frame="43" value="3.1617" />
                                                  <Key frame="52" value="-10.8131" />
                                                  <Key frame="59" value="-2.02391" />
                                                  <Key frame="66" value="-2.72705" />
                                                  <Key frame="72" value="-1.0571" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                                  <Key frame="13" value="-10.4615" />
                                                  <Key frame="24" value="-18" />
                                                  <Key frame="34" value="15.0271" />
                                                  <Key frame="43" value="-16.7897" />
                                                  <Key frame="52" value="-30.325" />
                                                  <Key frame="59" value="-13.3619" />
                                                  <Key frame="66" value="-20.4812" />
                                                  <Key frame="72" value="-15.9987" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                                  <Key frame="13" value="-33.8359" />
                                                  <Key frame="24" value="-49.8322" />
                                                  <Key frame="34" value="-0.524946" />
                                                  <Key frame="43" value="-35.5937" />
                                                  <Key frame="52" value="-89.0319" />
                                                  <Key frame="59" value="-91.3171" />
                                                  <Key frame="66" value="-83.9342" />
                                                  <Key frame="72" value="-90.5261" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                                  <Key frame="13" value="121.039" />
                                                  <Key frame="24" value="121.039" />
                                                  <Key frame="34" value="104.149" />
                                                  <Key frame="43" value="113.554" />
                                                  <Key frame="52" value="61.7" />
                                                  <Key frame="59" value="66.3558" />
                                                  <Key frame="66" value="62.3128" />
                                                  <Key frame="72" value="80.067" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                                  <Key frame="13" value="-68.1542" />
                                                  <Key frame="24" value="-68.1542" />
                                                  <Key frame="34" value="-68.1542" />
                                                  <Key frame="43" value="-29.9735" />
                                                  <Key frame="52" value="42.3614" />
                                                  <Key frame="59" value="52.8695" />
                                                  <Key frame="66" value="52.8205" />
                                                  <Key frame="72" value="47.8986" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                                  <Key frame="13" value="-2.46337" />
                                                  <Key frame="24" value="-4.57277" />
                                                  <Key frame="34" value="-2.37548" />
                                                  <Key frame="43" value="26.0135" />
                                                  <Key frame="52" value="10.3688" />
                                                  <Key frame="59" value="2.72224" />
                                                  <Key frame="66" value="2.89802" />
                                                  <Key frame="72" value="0.524946" />
                                                </ActuatorCurve>
                                              </ActuatorList>
                                            </Timeline>
                                          </Box>
                                          <Box name="BellyToCrouch" id="12" localization="8" tooltip="Crouch from lie down position (on the belly)." x="707" y="382">
                                            <bitmap>media/images/box/movement/move.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="100">
                                              <ActuatorList model="nao">
                                                <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                                  <Key frame="10" value="10" />
                                                  <Key frame="20" value="-13" />
                                                  <Key frame="34" value="16.4" />
                                                  <Key frame="45" value="17" />
                                                  <Key frame="58" value="-28.4" />
                                                  <Key frame="65" value="-17" />
                                                  <Key frame="76" value="3" />
                                                  <Key frame="89" value="-22.4" />
                                                  <Key frame="100" value="-1" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="-33.0497" />
                                                  <Key frame="20" value="-31.3797" />
                                                  <Key frame="34" value="6.15002" />
                                                  <Key frame="45" value="29.5" />
                                                  <Key frame="58" value="21.8" />
                                                  <Key frame="65" value="21.2674" />
                                                  <Key frame="76" value="-6" />
                                                  <Key frame="89" value="-30.5887" />
                                                  <Key frame="100" value="0.4" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="-1.57965" />
                                                  <Key frame="20" value="-86.6" />
                                                  <Key frame="34" value="-70.0473" />
                                                  <Key frame="45" value="-13.5329" />
                                                  <Key frame="58" value="12.483" />
                                                  <Key frame="65" value="25.7547" />
                                                  <Key frame="76" value="52.3859" />
                                                  <Key frame="89" value="55.0226" />
                                                  <Key frame="100" value="77.5229" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="87.982" />
                                                  <Key frame="20" value="11" />
                                                  <Key frame="34" value="4.74856" />
                                                  <Key frame="45" value="4.74856" />
                                                  <Key frame="58" value="13.0104" />
                                                  <Key frame="65" value="10.4615" />
                                                  <Key frame="76" value="0.498473" />
                                                  <Key frame="89" value="7.56109" />
                                                  <Key frame="100" value="0.79343" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                                  <Key frame="10" value="-119" />
                                                  <Key frame="20" value="-89.4714" />
                                                  <Key frame="34" value="-92.4597" />
                                                  <Key frame="45" value="-96.5906" />
                                                  <Key frame="58" value="-112.323" />
                                                  <Key frame="65" value="-111.796" />
                                                  <Key frame="76" value="-38.1426" />
                                                  <Key frame="89" value="-22.6737" />
                                                  <Key frame="100" value="-49.6564" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="-6" />
                                                  <Key frame="20" value="-21.8874" />
                                                  <Key frame="34" value="-36.3896" />
                                                  <Key frame="45" value="-89.2125" />
                                                  <Key frame="58" value="-0.498473" />
                                                  <Key frame="65" value="-0.498473" />
                                                  <Key frame="76" value="-24.2605" />
                                                  <Key frame="89" value="-37.2" />
                                                  <Key frame="100" value="-47.8155" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                                  <Key frame="10" value="-86.4831" />
                                                  <Key frame="20" value="-86.4831" />
                                                  <Key frame="34" value="-85.7799" />
                                                  <Key frame="45" value="-81.8248" />
                                                  <Key frame="58" value="-82.2643" />
                                                  <Key frame="65" value="-82.5279" />
                                                  <Key frame="76" value="-82.7037" />
                                                  <Key frame="89" value="-82.5279" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                                  <Key frame="10" value="0.0185718" />
                                                  <Key frame="20" value="0.0127537" />
                                                  <Key frame="34" value="0.0262082" />
                                                  <Key frame="45" value="0.0469355" />
                                                  <Key frame="58" value="0.0494809" />
                                                  <Key frame="65" value="0.04839" />
                                                  <Key frame="76" value="0.0472991" />
                                                  <Key frame="89" value="0.04839" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="4.83164" />
                                                  <Key frame="20" value="-86.6" />
                                                  <Key frame="34" value="-71.6342" />
                                                  <Key frame="45" value="4.12851" />
                                                  <Key frame="58" value="73" />
                                                  <Key frame="65" value="43.3" />
                                                  <Key frame="76" value="43" />
                                                  <Key frame="89" value="74" />
                                                  <Key frame="100" value="86.9225" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="-89.0319" />
                                                  <Key frame="20" value="-0.964405" />
                                                  <Key frame="34" value="-4.39218" />
                                                  <Key frame="45" value="-4.04062" />
                                                  <Key frame="58" value="-8.96255" />
                                                  <Key frame="65" value="-53.8" />
                                                  <Key frame="76" value="-38.8" />
                                                  <Key frame="89" value="-48.5" />
                                                  <Key frame="100" value="-4.83164" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                                  <Key frame="10" value="119" />
                                                  <Key frame="20" value="90.5309" />
                                                  <Key frame="34" value="91.9371" />
                                                  <Key frame="45" value="102.396" />
                                                  <Key frame="58" value="76.0287" />
                                                  <Key frame="65" value="71.5" />
                                                  <Key frame="76" value="55.7258" />
                                                  <Key frame="89" value="55" />
                                                  <Key frame="100" value="51.6827" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="0.5" />
                                                  <Key frame="20" value="20.2127" />
                                                  <Key frame="34" value="36.5606" />
                                                  <Key frame="45" value="48.7775" />
                                                  <Key frame="58" value="88.8561" />
                                                  <Key frame="65" value="42" />
                                                  <Key frame="76" value="42.2" />
                                                  <Key frame="89" value="66.1801" />
                                                  <Key frame="100" value="63.016" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                                  <Key frame="10" value="88.8609" />
                                                  <Key frame="20" value="88.8609" />
                                                  <Key frame="34" value="86.9273" />
                                                  <Key frame="45" value="82.9722" />
                                                  <Key frame="58" value="80.5112" />
                                                  <Key frame="65" value="80.687" />
                                                  <Key frame="76" value="80.687" />
                                                  <Key frame="89" value="31.2" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                                  <Key frame="10" value="0.0585718" />
                                                  <Key frame="20" value="0.0196627" />
                                                  <Key frame="34" value="0.0407536" />
                                                  <Key frame="45" value="0.0545718" />
                                                  <Key frame="58" value="0.0574809" />
                                                  <Key frame="65" value="0.0574809" />
                                                  <Key frame="76" value="0.0549355" />
                                                  <Key frame="89" value="0.0574809" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="-1.93121" />
                                                  <Key frame="20" value="2" />
                                                  <Key frame="34" value="-24.9588" />
                                                  <Key frame="45" value="-44.6466" />
                                                  <Key frame="58" value="-59.6761" />
                                                  <Key frame="65" value="-65.621" />
                                                  <Key frame="76" value="-65.621" />
                                                  <Key frame="89" value="-32.5175" />
                                                  <Key frame="100" value="0" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="-1.8" />
                                                  <Key frame="20" value="-0.00240423" />
                                                  <Key frame="34" value="-0.090296" />
                                                  <Key frame="45" value="-17.8444" />
                                                  <Key frame="58" value="-14.5924" />
                                                  <Key frame="65" value="-18.3718" />
                                                  <Key frame="76" value="-13.0104" />
                                                  <Key frame="89" value="4.30429" />
                                                  <Key frame="100" value="-0.6" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="4.39218" />
                                                  <Key frame="20" value="-0.00240423" />
                                                  <Key frame="34" value="-90.3551" />
                                                  <Key frame="45" value="-95.1891" />
                                                  <Key frame="58" value="-68.7337" />
                                                  <Key frame="65" value="-91.5856" />
                                                  <Key frame="76" value="-18.4597" />
                                                  <Key frame="89" value="-40.6963" />
                                                  <Key frame="100" value="-60" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                                  <Key frame="10" value="-4.48007" />
                                                  <Key frame="20" value="114" />
                                                  <Key frame="34" value="119.535" />
                                                  <Key frame="45" value="99.8474" />
                                                  <Key frame="58" value="121.478" />
                                                  <Key frame="65" value="121.478" />
                                                  <Key frame="76" value="121.478" />
                                                  <Key frame="89" value="121.478" />
                                                  <Key frame="100" value="120" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                                  <Key frame="10" value="53.2648" />
                                                  <Key frame="20" value="-59" />
                                                  <Key frame="34" value="-65.2133" />
                                                  <Key frame="45" value="-67.9785" />
                                                  <Key frame="58" value="-67.9785" />
                                                  <Key frame="65" value="-33.748" />
                                                  <Key frame="76" value="-67.9785" />
                                                  <Key frame="89" value="-67.9785" />
                                                  <Key frame="100" value="-60" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="-10.8" />
                                                  <Key frame="20" value="-0.00240423" />
                                                  <Key frame="34" value="-0.353971" />
                                                  <Key frame="45" value="0.261271" />
                                                  <Key frame="58" value="5.62267" />
                                                  <Key frame="65" value="0.788621" />
                                                  <Key frame="76" value="5.44688" />
                                                  <Key frame="89" value="-2.02391" />
                                                  <Key frame="100" value="0" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="-3.60596" />
                                                  <Key frame="20" value="-0.00240423" />
                                                  <Key frame="34" value="-0.090296" />
                                                  <Key frame="45" value="21.619" />
                                                  <Key frame="58" value="17.0486" />
                                                  <Key frame="65" value="17.0486" />
                                                  <Key frame="76" value="-11.1647" />
                                                  <Key frame="89" value="-7.29742" />
                                                  <Key frame="100" value="0.6" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="3.51807" />
                                                  <Key frame="20" value="0.00240423" />
                                                  <Key frame="34" value="-89.9108" />
                                                  <Key frame="45" value="-73.3872" />
                                                  <Key frame="58" value="-59.4124" />
                                                  <Key frame="65" value="-66.4437" />
                                                  <Key frame="76" value="-67.7621" />
                                                  <Key frame="89" value="-72.7719" />
                                                  <Key frame="100" value="-60" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                                  <Key frame="10" value="6.9" />
                                                  <Key frame="20" value="114" />
                                                  <Key frame="34" value="121.039" />
                                                  <Key frame="45" value="16.1697" />
                                                  <Key frame="58" value="23.201" />
                                                  <Key frame="65" value="20.4764" />
                                                  <Key frame="76" value="41.2188" />
                                                  <Key frame="89" value="115.399" />
                                                  <Key frame="100" value="120" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                                  <Key frame="10" value="52.8205" />
                                                  <Key frame="20" value="-59" />
                                                  <Key frame="34" value="-65.9212" />
                                                  <Key frame="45" value="12.3903" />
                                                  <Key frame="58" value="40.6915" />
                                                  <Key frame="65" value="52.8695" />
                                                  <Key frame="76" value="47.2833" />
                                                  <Key frame="89" value="-28.743" />
                                                  <Key frame="100" value="-60" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="0.0854875" />
                                                  <Key frame="20" value="-0.00240423" />
                                                  <Key frame="34" value="0.0854875" />
                                                  <Key frame="45" value="25.9257" />
                                                  <Key frame="58" value="17.2244" />
                                                  <Key frame="65" value="6.76526" />
                                                  <Key frame="76" value="2.37067" />
                                                  <Key frame="89" value="6.94104" />
                                                  <Key frame="100" value="0" />
                                                </ActuatorCurve>
                                              </ActuatorList>
                                            </Timeline>
                                          </Box>
                                          <Box name="BackToSitDown" id="14" localization="8" tooltip="Sit down from lie down position (on the back)." x="923" y="91">
                                            <bitmap>media/images/box/movement/move.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="62" resources_acquisition="1">
                                              <BehaviorLayer name="behavior_layer1">
                                                <BehaviorKeyframe name="keyframe10" index="10">
                                                  <Diagram>
                                                    <Box name="Disable Anti-Collision" id="2" localization="8" tooltip="Disable the collision protection on some specific part of NAO&apos;s body.&#x0A;&#x0A;Note: When this box is unloaded, the collision protection state will be reset to&#x0A;its previous state (enabled or disabled)." x="129" y="64">
                                                      <bitmap>media/images/box/sensors/anti_collision.png</bitmap>
                                                      <script language="4">
                                                        <content>
                                                          <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.motion = ALProxy( "ALMotion" )

    def onLoad(self):
        self.collisionLArmState = self.motion.getCollisionProtectionEnabled("LArm")
        self.collisionRArmState = self.motion.getCollisionProtectionEnabled("RArm")

    def onUnload(self):
        self.motion.setCollisionProtectionEnabled("LArm", self.collisionLArmState)
        self.motion.setCollisionProtectionEnabled("RArm", self.collisionRArmState)

    def onInput_onSet(self):
        # enable/disable collision protection
        result = self.motion.setCollisionProtectionEnabled( self.getParameter("Body part"), False )
        if( result ):
            self.success()
        else:
            self.logger.warning( "Disabling collision protection failed. Deactivation succeeds only if the current state of the chain is not in collision. If you want to deactivate collision of both arms, they need to be off collision." )
            self.failure()]]>
                                                        </content>
                                                      </script>
                                                      <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                      <Input name="onSet" type="1" type_size="1" nature="1" inner="0" tooltip="The anti-collision feature is enabled or disabled when this input is stimulated." id="2" />
                                                      <Output name="success" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent if the collision protection has been successfully enabled or disabled.&#x0A;&#x0A;Note: The only case where there is a failure is when you try to disable the&#x0A;anti-collision while it is currently in collision with some part of his body." id="3" />
                                                      <Output name="failure" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent if the collision protection has failed to be enabled or disabled.&#x0A;&#x0A;Note: The only case where there is a failure is when you try to disable the&#x0A;anti-collision while it is currently in collision with some part of his body." id="4" />
                                                      <Parameter name="Body part" inherits_from_parent="0" content_type="3" value="Arms" default_value="Arms" custom_choice="0" tooltip="Body part which avoids the collision." id="5">
                                                        <Choice value="Arms" />
                                                        <Choice value="LArm" />
                                                        <Choice value="RArm" />
                                                      </Parameter>
                                                    </Box>
                                                    <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                  </Diagram>
                                                </BehaviorKeyframe>
                                              </BehaviorLayer>
                                              <ActuatorList model="nao">
                                                <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                                  <Key frame="10" value="-1.40867" />
                                                  <Key frame="20" value="-2.73208e-05" />
                                                  <Key frame="28" value="2.37067" />
                                                  <Key frame="36" value="3.86374e-05" />
                                                  <Key frame="44" value="-0.353971" />
                                                  <Key frame="50" value="0.788621" />
                                                  <Key frame="56" value="1.40386" />
                                                  <Key frame="62" value="-1.32078" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="3.60116" />
                                                  <Key frame="20" value="0" />
                                                  <Key frame="28" value="29.5016" />
                                                  <Key frame="36" value="-38.5028" />
                                                  <Key frame="44" value="-1.23289" />
                                                  <Key frame="50" value="11.1598" />
                                                  <Key frame="56" value="4.2164" />
                                                  <Key frame="62" value="-2.02391" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="119.496" />
                                                  <Key frame="20" value="120" />
                                                  <Key frame="26" value="111.889" />
                                                  <Key frame="36" value="119.496" />
                                                  <Key frame="44" value="119.5" />
                                                  <Key frame="50" value="109.955" />
                                                  <Key frame="56" value="59.4172" />
                                                  <Key frame="59" value="41.8" />
                                                  <Key frame="62" value="53.0011" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="61.5266" />
                                                  <Key frame="20" value="21" />
                                                  <Key frame="26" value="20" />
                                                  <Key frame="36" value="20" />
                                                  <Key frame="44" value="23.5" />
                                                  <Key frame="50" value="51.507" />
                                                  <Key frame="56" value="42.4541" />
                                                  <Key frame="62" value="13.8893" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                                  <Key frame="10" value="-43.8556" />
                                                  <Key frame="20" value="9" />
                                                  <Key frame="26" value="14.7682" />
                                                  <Key frame="36" value="5" />
                                                  <Key frame="44" value="3.78175" />
                                                  <Key frame="50" value="-90.3503" />
                                                  <Key frame="56" value="-61.1702" />
                                                  <Key frame="62" value="-30.0566" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="-40.6963" />
                                                  <Key frame="20" value="0" />
                                                  <Key frame="26" value="-88.5" />
                                                  <Key frame="36" value="-89.5017" />
                                                  <Key frame="44" value="-40.9" />
                                                  <Key frame="46" value="-60.4" />
                                                  <Key frame="50" value="-54.8468" />
                                                  <Key frame="56" value="-65.6575" />
                                                  <Key frame="62" value="-72.7768" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                                  <Key frame="10" value="-66.0043" />
                                                  <Key frame="26" value="-98.8758" />
                                                  <Key frame="44" value="-63.6312" />
                                                  <Key frame="50" value="-14.1482" />
                                                  <Key frame="62" value="3.2544" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                                  <Key frame="10" value="0" />
                                                  <Key frame="20" value="0" />
                                                  <Key frame="26" value="0.0182082" />
                                                  <Key frame="44" value="0.00293558" />
                                                  <Key frame="50" value="0.126571" />
                                                  <Key frame="62" value="0.2996" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="119.496" />
                                                  <Key frame="20" value="120" />
                                                  <Key frame="26" value="116.806" />
                                                  <Key frame="36" value="119.496" />
                                                  <Key frame="44" value="119.5" />
                                                  <Key frame="50" value="74.9692" />
                                                  <Key frame="56" value="51.7658" />
                                                  <Key frame="59" value="40.3" />
                                                  <Key frame="62" value="51.6779" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="-56.1604" />
                                                  <Key frame="20" value="-21" />
                                                  <Key frame="26" value="-20" />
                                                  <Key frame="36" value="-20" />
                                                  <Key frame="44" value="-23" />
                                                  <Key frame="50" value="-67.1469" />
                                                  <Key frame="56" value="-22.7616" />
                                                  <Key frame="62" value="-12.3903" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                                  <Key frame="10" value="43.5967" />
                                                  <Key frame="20" value="-9" />
                                                  <Key frame="26" value="-7.02893" />
                                                  <Key frame="36" value="-5" />
                                                  <Key frame="44" value="-3.42537" />
                                                  <Key frame="50" value="54.6711" />
                                                  <Key frame="56" value="55.1984" />
                                                  <Key frame="62" value="25.1394" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="35.7695" />
                                                  <Key frame="20" value="0" />
                                                  <Key frame="26" value="88.5" />
                                                  <Key frame="36" value="89.5017" />
                                                  <Key frame="44" value="50.1" />
                                                  <Key frame="46" value="59.3" />
                                                  <Key frame="50" value="38.9336" />
                                                  <Key frame="56" value="64.3343" />
                                                  <Key frame="62" value="70.7504" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                                  <Key frame="10" value="40.4326" />
                                                  <Key frame="26" value="102.484" />
                                                  <Key frame="44" value="41.2236" />
                                                  <Key frame="50" value="2.72705" />
                                                  <Key frame="62" value="-3.42537" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                                  <Key frame="10" value="0.0502082" />
                                                  <Key frame="26" value="0.0763898" />
                                                  <Key frame="44" value="0.0905716" />
                                                  <Key frame="50" value="0.0127537" />
                                                  <Key frame="62" value="0.3004" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="-26.9804" />
                                                  <Key frame="20" value="0" />
                                                  <Key frame="31" value="0.441863" />
                                                  <Key frame="36" value="-2.73208e-05" />
                                                  <Key frame="44" value="-37.5274" />
                                                  <Key frame="50" value="-40.34" />
                                                  <Key frame="62" value="-35.418" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="8.52309" />
                                                  <Key frame="20" value="0" />
                                                  <Key frame="31" value="1.31597" />
                                                  <Key frame="36" value="0" />
                                                  <Key frame="44" value="-3.51807" />
                                                  <Key frame="50" value="6.98985" />
                                                  <Key frame="62" value="15.3786" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="10.6325" />
                                                  <Key frame="20" value="-10" />
                                                  <Key frame="31" value="16.1697" />
                                                  <Key frame="36" value="-10" />
                                                  <Key frame="44" value="-66.7122" />
                                                  <Key frame="50" value="-90" />
                                                  <Key frame="62" value="-91.234" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                                  <Key frame="10" value="10.9889" />
                                                  <Key frame="20" value="96" />
                                                  <Key frame="31" value="116.107" />
                                                  <Key frame="36" value="96" />
                                                  <Key frame="44" value="62.7571" />
                                                  <Key frame="50" value="78.8859" />
                                                  <Key frame="62" value="80.687" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                                  <Key frame="10" value="26.7215" />
                                                  <Key frame="20" value="14" />
                                                  <Key frame="31" value="-21.4432" />
                                                  <Key frame="36" value="14" />
                                                  <Key frame="44" value="41.1357" />
                                                  <Key frame="50" value="44.1094" />
                                                  <Key frame="62" value="48.6944" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="-9.5826" />
                                                  <Key frame="20" value="-4.94951e-06" />
                                                  <Key frame="31" value="2.28278" />
                                                  <Key frame="36" value="-4.94951e-06" />
                                                  <Key frame="44" value="8.25942" />
                                                  <Key frame="50" value="6.87076" />
                                                  <Key frame="62" value="-1.0571" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="-2.55126" />
                                                  <Key frame="20" value="-8.991e-06" />
                                                  <Key frame="31" value="-3.34229" />
                                                  <Key frame="36" value="-8.991e-06" />
                                                  <Key frame="44" value="3.68905" />
                                                  <Key frame="50" value="-8.06912" />
                                                  <Key frame="62" value="-15.9987" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                                  <Key frame="10" value="14.3288" />
                                                  <Key frame="20" value="-10" />
                                                  <Key frame="31" value="21.448" />
                                                  <Key frame="36" value="-10" />
                                                  <Key frame="44" value="-67.4984" />
                                                  <Key frame="50" value="-90" />
                                                  <Key frame="62" value="-90.5261" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                                  <Key frame="10" value="5.2711" />
                                                  <Key frame="20" value="96" />
                                                  <Key frame="31" value="115.751" />
                                                  <Key frame="36" value="96" />
                                                  <Key frame="44" value="61.6976" />
                                                  <Key frame="50" value="80.3062" />
                                                  <Key frame="62" value="79.9791" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                                  <Key frame="10" value="47.2833" />
                                                  <Key frame="20" value="14" />
                                                  <Key frame="31" value="-26.0184" />
                                                  <Key frame="36" value="14" />
                                                  <Key frame="44" value="38.8457" />
                                                  <Key frame="50" value="44.4668" />
                                                  <Key frame="62" value="47.8986" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                                  <Key frame="10" value="1.93121" />
                                                  <Key frame="20" value="0" />
                                                  <Key frame="31" value="1.93121" />
                                                  <Key frame="36" value="0" />
                                                  <Key frame="44" value="-9.75839" />
                                                  <Key frame="50" value="-5.20441" />
                                                  <Key frame="62" value="0.524946" />
                                                </ActuatorCurve>
                                              </ActuatorList>
                                            </Timeline>
                                          </Box>
                                          <Box name="SideToBelly" id="6" localization="8" tooltip="Lie down on the back or the belly from an other lie down position (on the side)." x="513" y="538">
                                            <bitmap>media/images/box/movement/move.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		""

	def onInput_onStop(self):
		""]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="10">
                                              <ActuatorList model="nao">
                                                <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                                  <Key frame="5" value="41.3067" />
                                                  <Key frame="10" value="41.3067" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                                  <Key frame="5" value="8.52309" />
                                                  <Key frame="10" value="8.52309" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                                  <Key frame="5" value="113.383" />
                                                  <Key frame="10" value="113.383" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                                  <Key frame="5" value="44.6514" />
                                                  <Key frame="10" value="44.6514" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                                  <Key frame="5" value="-52.9084" />
                                                  <Key frame="10" value="-52.9084" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                                  <Key frame="5" value="-19.5144" />
                                                  <Key frame="10" value="-19.5144" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                                  <Key frame="5" value="-37" />
                                                  <Key frame="10" value="-37" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                                  <Key frame="5" value="0.146571" />
                                                  <Key frame="10" value="0.146571" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                                  <Key frame="5" value="108.72" />
                                                  <Key frame="10" value="108.72" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                                  <Key frame="5" value="-45.965" />
                                                  <Key frame="10" value="-45.965" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                                  <Key frame="5" value="56.8684" />
                                                  <Key frame="10" value="56.8684" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                                  <Key frame="5" value="26.8046" />
                                                  <Key frame="10" value="26.8046" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                                  <Key frame="5" value="38.8505" />
                                                  <Key frame="10" value="38.8505" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                                  <Key frame="5" value="0.200389" />
                                                  <Key frame="10" value="0.200389" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                                  <Key frame="5" value="-65.5648" />
                                                  <Key frame="10" value="-65.5648" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                                  <Key frame="5" value="1.75543" />
                                                  <Key frame="10" value="1.75543" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                                  <Key frame="5" value="23.8163" />
                                                  <Key frame="10" value="23.8163" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                                  <Key frame="5" value="-5.2711" />
                                                  <Key frame="10" value="-5.2711" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                                  <Key frame="5" value="29.9735" />
                                                  <Key frame="10" value="29.9735" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                                  <Key frame="5" value="3.86483" />
                                                  <Key frame="10" value="3.86483" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                                  <Key frame="5" value="-14.4166" />
                                                  <Key frame="10" value="-14.4166" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                                  <Key frame="5" value="2.02391" />
                                                  <Key frame="10" value="2.02391" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                                  <Key frame="5" value="-5.27591" />
                                                  <Key frame="10" value="-5.27591" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                                  <Key frame="5" value="20.3885" />
                                                  <Key frame="10" value="20.3885" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                                  <Key frame="5" value="-19.6902" />
                                                  <Key frame="10" value="-19.6902" />
                                                </ActuatorCurve>
                                              </ActuatorList>
                                            </Timeline>
                                          </Box>
                                          <Box name="Switch Case" id="9" localization="8" tooltip="Test input value and stimulate the output matching to this value. If there is no&#x0A;output matching, the default output (onDefault) is stimulated.&#x0A;&#x0A;You can edit a case by left double-clicking on the line. You can add a&#x0A;case by right clicking on a line and selecting &apos;Insert a row&apos;. You can delete&#x0A;a case by right clicking on a line and selecting &apos;Remove a row&apos;." plugin="dispatcher_plugin" x="261" y="101">
                                            <bitmap>media/images/box/interaction/choice.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion("Back")):
			self.output_1(p)
		elif(p == self.typeConversion("Stand")):
			self.output_2(p)
		elif(p == self.typeConversion("Crouch")):
			self.output_3(p)
		elif(p == self.typeConversion("Knee")):
			self.output_4(p)
		elif(p == self.typeConversion("Frog")):
			self.output_5(p)
		elif(p == self.typeConversion("Belly")):
			self.output_6(p)
		elif(p == self.typeConversion("Left")):
			self.output_7(p)
		elif(p == self.typeConversion("Right")):
			self.output_8(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]>
                                              </content>
                                            </script>
                                            <pluginContent>
                                              <keywords>
                                                <keyword>&quot;Back&quot;</keyword>
                                                <keyword>&quot;Stand&quot;</keyword>
                                                <keyword>&quot;Crouch&quot;</keyword>
                                                <keyword>&quot;Knee&quot;</keyword>
                                                <keyword>&quot;Frog&quot;</keyword>
                                                <keyword>&quot;Belly&quot;</keyword>
                                                <keyword>&quot;Left&quot;</keyword>
                                                <keyword>&quot;Right&quot;</keyword>
                                                <keyword></keyword>
                                              </keywords>
                                            </pluginContent>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Value to test." id="2" />
                                            <Output name="onDefault" type="1" type_size="1" nature="1" inner="0" tooltip="If the input value does not match any value set on the box." id="3" />
                                            <Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="4" />
                                            <Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="5" />
                                            <Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="6" />
                                            <Output name="output_4" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="7" />
                                            <Output name="output_5" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="8" />
                                            <Output name="output_6" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="9" />
                                            <Output name="output_7" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="10" />
                                            <Output name="output_8" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="11" />
                                          </Box>
                                          <Box name="Switch Case" id="1" localization="8" tooltip="Test input value and stimulate the output matching to this value. If there is no&#x0A;output matching, the default output (onDefault) is stimulated.&#x0A;&#x0A;You can edit a case by left double-clicking on the line. You can add a&#x0A;case by right clicking on a line and selecting &apos;Insert a row&apos;. You can delete&#x0A;a case by right clicking on a line and selecting &apos;Remove a row&apos;." plugin="dispatcher_plugin" x="795" y="538">
                                            <bitmap>media/images/box/interaction/choice.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion("Belly")):
			self.output_1(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]>
                                              </content>
                                            </script>
                                            <pluginContent>
                                              <keywords>
                                                <keyword>&quot;Belly&quot;</keyword>
                                                <keyword></keyword>
                                              </keywords>
                                            </pluginContent>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Value to test." id="2" />
                                            <Output name="onDefault" type="1" type_size="1" nature="1" inner="0" tooltip="If the input value does not match any value set on the box." id="3" />
                                            <Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="4" />
                                          </Box>
                                          <Box name="Switch Case" id="4" localization="8" tooltip="Test input value and stimulate the output matching to this value. If there is no&#x0A;output matching, the default output (onDefault) is stimulated.&#x0A;&#x0A;You can edit a case by left double-clicking on the line. You can add a&#x0A;case by right clicking on a line and selecting &apos;Insert a row&apos;. You can delete&#x0A;a case by right clicking on a line and selecting &apos;Remove a row&apos;." plugin="dispatcher_plugin" x="977" y="378">
                                            <bitmap>media/images/box/interaction/choice.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion("Crouch")):
			self.output_1(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]>
                                              </content>
                                            </script>
                                            <pluginContent>
                                              <keywords>
                                                <keyword>&quot;Crouch&quot;</keyword>
                                                <keyword></keyword>
                                              </keywords>
                                            </pluginContent>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Value to test." id="2" />
                                            <Output name="onDefault" type="1" type_size="1" nature="1" inner="0" tooltip="If the input value does not match any value set on the box." id="3" />
                                            <Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="4" />
                                          </Box>
                                          <Box name="Get Robot Pose" id="5" localization="8" tooltip="Return NAO&apos;s current pose.&#x0A;&#x0A;Note: The box waits for the robot pose to be stabilized. You can set the maximum&#x0A;time to wait in parameters. After this time is ellapsed, the current pose is sent to the&#x0A;output anyway." x="656" y="542">
                                            <bitmap>media/images/box/sensors/inertial_unit.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.robotPoseProxy = ALProxy("ALRobotPosture")
        self.threadTime = 0.1 #seconds

    def onLoad(self):
        self.bIsRunning = False
        self.bMustStop = False

    def onUnload(self):
        self.bMustStop = True

    def onInput_onStart(self):
        if( self.bIsRunning ):
            return
        self.bIsRunning = True
        self.bMustStop = False
        beginTime = time.time()
        RobotPoseAndTime = ["Unknown", 0.]
        while( not self.bMustStop ):
            RobotPoseAndTime = self.robotPoseProxy.getActualPoseAndTime()
            # as soon as the robot is not moving anymore from its position, give its position
            if( RobotPoseAndTime[1] > 0.5 or time.time() - beginTime > self.getParameter("Time to wait for pose stabilization (s)") ):
                self.bMustStop = True
            if( not self.bMustStop ):
                time.sleep(self.threadTime)
        self.robotPose(RobotPoseAndTime[0])
        self.bIsRunning = False]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Output name="robotPose" type="3" type_size="1" nature="2" inner="0" tooltip='NAO&apos;s current pose. It can be:&#x0A;- &quot;Unknown&quot;&#x0A;- &quot;Stand&quot;&#x0A;- &quot;Sit&quot;&#x0A;- &quot;Crouch&quot;&#x0A;- &quot;Knee&quot;&#x0A;- &quot;Frog&quot;&#x0A;- &quot;Back&quot;&#x0A;- &quot;Belly&quot;&#x0A;- &quot;Left&quot;&#x0A;- &quot;Right&quot;&#x0A;- &quot;HeadBack&quot;' id="3" />
                                            <Parameter name="Time to wait for pose stabilization (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0.5" max="10" tooltip="Maximum time to wait NAO&apos;s pose stabilization. After this time is ellapsed,&#x0A;the current pose is sent to the output even though it is not stabilized." id="4" />
                                          </Box>
                                          <Box name="Get Robot Pose" id="2" localization="8" tooltip="Return NAO&apos;s current pose.&#x0A;&#x0A;Note: The box waits for the robot pose to be stabilized. You can set the maximum&#x0A;time to wait in parameters. After this time is ellapsed, the current pose is sent to the&#x0A;output anyway." x="845" y="378">
                                            <bitmap>media/images/box/sensors/inertial_unit.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.robotPoseProxy = ALProxy("ALRobotPosture")
        self.threadTime = 0.1 #seconds

    def onLoad(self):
        self.bIsRunning = False
        self.bMustStop = False

    def onUnload(self):
        self.bMustStop = True

    def onInput_onStart(self):
        if( self.bIsRunning ):
            return
        self.bIsRunning = True
        self.bMustStop = False
        beginTime = time.time()
        RobotPoseAndTime = ["Unknown", 0.]
        while( not self.bMustStop ):
            RobotPoseAndTime = self.robotPoseProxy.getActualPoseAndTime()
            # as soon as the robot is not moving anymore from its position, give its position
            if( RobotPoseAndTime[1] > 0.5 or time.time() - beginTime > self.getParameter("Time to wait for pose stabilization (s)") ):
                self.bMustStop = True
            if( not self.bMustStop ):
                time.sleep(self.threadTime)
        self.robotPose(RobotPoseAndTime[0])
        self.bIsRunning = False]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Output name="robotPose" type="3" type_size="1" nature="2" inner="0" tooltip='NAO&apos;s current pose. It can be:&#x0A;- &quot;Unknown&quot;&#x0A;- &quot;Stand&quot;&#x0A;- &quot;Sit&quot;&#x0A;- &quot;Crouch&quot;&#x0A;- &quot;Knee&quot;&#x0A;- &quot;Frog&quot;&#x0A;- &quot;Back&quot;&#x0A;- &quot;Belly&quot;&#x0A;- &quot;Left&quot;&#x0A;- &quot;Right&quot;&#x0A;- &quot;HeadBack&quot;' id="3" />
                                            <Parameter name="Time to wait for pose stabilization (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0.5" max="10" tooltip="Maximum time to wait NAO&apos;s pose stabilization. After this time is ellapsed,&#x0A;the current pose is sent to the output even though it is not stabilized." id="4" />
                                          </Box>
                                          <Box name="Get Robot Pose" id="3" localization="8" tooltip="Return NAO&apos;s current pose.&#x0A;&#x0A;Note: The box waits for the robot pose to be stabilized. You can set the maximum&#x0A;time to wait in parameters. After this time is ellapsed, the current pose is sent to the&#x0A;output anyway." x="104" y="49">
                                            <bitmap>media/images/box/sensors/inertial_unit.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.robotPoseProxy = ALProxy("ALRobotPosture")
        self.threadTime = 0.1 #seconds

    def onLoad(self):
        self.bIsRunning = False
        self.bMustStop = False

    def onUnload(self):
        self.bMustStop = True

    def onInput_onStart(self):
        if( self.bIsRunning ):
            return
        self.bIsRunning = True
        self.bMustStop = False
        beginTime = time.time()
        RobotPoseAndTime = ["Unknown", 0.]
        while( not self.bMustStop ):
            RobotPoseAndTime = self.robotPoseProxy.getActualPoseAndTime()
            # as soon as the robot is not moving anymore from its position, give its position
            if( RobotPoseAndTime[1] > 0.5 or time.time() - beginTime > self.getParameter("Time to wait for pose stabilization (s)") ):
                self.bMustStop = True
            if( not self.bMustStop ):
                time.sleep(self.threadTime)
        self.robotPose(RobotPoseAndTime[0])
        self.bIsRunning = False]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Output name="robotPose" type="3" type_size="1" nature="2" inner="0" tooltip='NAO&apos;s current pose. It can be:&#x0A;- &quot;Unknown&quot;&#x0A;- &quot;Stand&quot;&#x0A;- &quot;Sit&quot;&#x0A;- &quot;Crouch&quot;&#x0A;- &quot;Knee&quot;&#x0A;- &quot;Frog&quot;&#x0A;- &quot;Back&quot;&#x0A;- &quot;Belly&quot;&#x0A;- &quot;Left&quot;&#x0A;- &quot;Right&quot;&#x0A;- &quot;HeadBack&quot;' id="3" />
                                            <Parameter name="Time to wait for pose stabilization (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0.5" max="10" tooltip="Maximum time to wait NAO&apos;s pose stabilization. After this time is ellapsed,&#x0A;the current pose is sent to the output even though it is not stabilized." id="4" />
                                          </Box>
                                          <Box name="Relax Motors" id="7" localization="8" tooltip="Relax motors for a while for a better electric current consumption.&#x0A;&#x0A;!!Warning!! This box must be applied only after a Sit Down. In other positions NAO&#x0A;could fall." x="1087" y="131">
                                            <bitmap>media/images/box/movement/stiffness.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        # WARNING: This should only be called when sitting and its
        # behavior may change in future version. The aim of the method
        # is to reduce battery usage when motors are stiff while sitting.
        try:
            ALMotion._relaxMotorsWhenSitting()
        except:
            pass
        self.onStopped()]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                          </Box>
                                          <Link inputowner="11" indexofinput="2" outputowner="9" indexofoutput="6" />
                                          <Link inputowner="12" indexofinput="2" outputowner="9" indexofoutput="8" />
                                          <Link inputowner="12" indexofinput="2" outputowner="9" indexofoutput="9" />
                                          <Link inputowner="6" indexofinput="2" outputowner="9" indexofoutput="11" />
                                          <Link inputowner="14" indexofinput="2" outputowner="9" indexofoutput="4" />
                                          <Link inputowner="11" indexofinput="2" outputowner="9" indexofoutput="5" />
                                          <Link inputowner="12" indexofinput="2" outputowner="9" indexofoutput="7" />
                                          <Link inputowner="6" indexofinput="2" outputowner="9" indexofoutput="10" />
                                          <Link inputowner="0" indexofinput="4" outputowner="9" indexofoutput="3" />
                                          <Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="3" />
                                          <Link inputowner="12" indexofinput="2" outputowner="1" indexofoutput="4" />
                                          <Link inputowner="11" indexofinput="2" outputowner="4" indexofoutput="4" />
                                          <Link inputowner="0" indexofinput="4" outputowner="4" indexofoutput="3" />
                                          <Link inputowner="5" indexofinput="2" outputowner="6" indexofoutput="4" />
                                          <Link inputowner="1" indexofinput="2" outputowner="5" indexofoutput="3" />
                                          <Link inputowner="2" indexofinput="2" outputowner="12" indexofoutput="4" />
                                          <Link inputowner="4" indexofinput="2" outputowner="2" indexofoutput="3" />
                                          <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="2" />
                                          <Link inputowner="9" indexofinput="2" outputowner="3" indexofoutput="3" />
                                          <Link inputowner="7" indexofinput="2" outputowner="14" indexofoutput="4" />
                                          <Link inputowner="7" indexofinput="2" outputowner="11" indexofoutput="4" />
                                          <Link inputowner="0" indexofinput="4" outputowner="7" indexofoutput="3" />
                                        </Diagram>
                                      </BehaviorKeyframe>
                                    </BehaviorLayer>
                                  </Timeline>
                                </Box>
                                <Box name="Side" id="6" localization="8" tooltip='Stimulates the rightOutput or the leftOutput output depending on the side&#x0A;parameter. If it is set to &quot;Random&quot; then the side is chosen randomly.' x="451" y="468">
                                  <bitmap>media/images/box/movement/move_arm.png</bitmap>
                                  <bitmap>media/images/box/movement/move_leftarm.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import random

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        side = self.getParameter("Side")
        if( side == "Random" ):
            side = random.choice( ["Left", "Right"] )
        if( side == "Left" ):
            self.leftOutput()
        else:
            self.rightOutput()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip='When this input is stimulated the output corresponding to the side set in&#x0A;parameters is stimulated. If the side parameter is set to &quot;Random&quot; then the&#x0A;side is chosen randomly.' id="2" />
                                  <Output name="rightOutput" type="1" type_size="1" nature="2" inner="0" tooltip="The output corresponding to the right." id="3" />
                                  <Output name="leftOutput" type="1" type_size="1" nature="2" inner="0" tooltip="The output corresponding to the left." id="4" />
                                  <Parameter name="Side" inherits_from_parent="1" content_type="3" value="Random" default_value="Random" custom_choice="0" tooltip='Side chosen. If set to &quot;Random&quot; the side is chosen randomly.' id="5">
                                    <Choice value="Left" />
                                    <Choice value="Random" />
                                    <Choice value="Right" />
                                  </Parameter>
                                </Box>
                                <Link inputowner="0" indexofinput="5" outputowner="9" indexofoutput="3" />
                                <Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="4" />
                                <Link inputowner="0" indexofinput="5" outputowner="1" indexofoutput="5" />
                                <Link inputowner="0" indexofinput="5" outputowner="1" indexofoutput="6" />
                                <Link inputowner="4" indexofinput="2" outputowner="0" indexofoutput="2" />
                                <Link inputowner="7" indexofinput="2" outputowner="1" indexofoutput="3" />
                                <Link inputowner="9" indexofinput="2" outputowner="7" indexofoutput="3" />
                                <Link inputowner="2" indexofinput="2" outputowner="4" indexofoutput="3" />
                                <Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="3" />
                                <Link inputowner="2" indexofinput="2" outputowner="13" indexofoutput="4" />
                                <Link inputowner="13" indexofinput="2" outputowner="6" indexofoutput="3" />
                                <Link inputowner="2" indexofinput="2" outputowner="3" indexofoutput="4" />
                                <Link inputowner="3" indexofinput="2" outputowner="6" indexofoutput="4" />
                                <Link inputowner="6" indexofinput="2" outputowner="9" indexofoutput="4" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                        <Resource name="All motors" type="Lock" timeout="0" />
                      </Box>
                      <Box name="Wait" id="32" localization="8" tooltip="Wait a moment before sending a signal on the output. The wait can be stopped any&#x0A;time. You may restart it any time, and it will start again." x="583" y="121">
                        <bitmap>media/images/box/wait.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import threading

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.tb = False

    def onUnload(self):
        if( self.tb ):
            self.tb.cancel()
            self.tb = False

    def triggerOutput( self, rPeriod = 1 ):
        self.onUnload() # to clean everything
        self.timerOutput()

    def startTimer( self, rPeriod = 1 ):
        if( self.tb ):
            self.tb.cancel()
        self.tb = threading.Timer( rPeriod, self.triggerOutput, [rPeriod] )
        self.tb.start()

    def onInput_onStart(self):
        self.startTimer( self.getParameter("Timeout (s)") )

    def onInput_onStop(self):
        bRunning = self.tb
        self.onUnload()
        if( bRunning ):
            self.timerOutput()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                        <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is ellapsed, or if the box is stopped." id="4" />
                        <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="3" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
                      </Box>
                      <Box name="PosesForImages" id="38" localization="8" tooltip="Normal Pose/HeadLeft/HeadRight" x="586" y="219">
                        <bitmap>media/images/box/box-diagram.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="Pattern Images_onStart" type="0" type_size="1" nature="2" inner="0" tooltip="This input has been automatically generated&#x0A;by converting several boxes into a single box." id="2" />
                        <Output name="PatternImages_detectionGood" type="0" type_size="1" nature="2" inner="0" tooltip="This output has been automatically generated&#x0A;by converting several boxes into a single box." id="3" />
                        <Timeline enable="0">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram scale="66.742">
                                <Box name="Pattern Images" id="11" localization="8" tooltip="Enter tooltip here" x="86" y="245">
                                  <bitmap>media/images/box/box-diagram.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import Image
import ImageDraw
import time
import os,sys
import cv2 as cv

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):

        flag = self.showNaoImage()
        if (flag == 1):
            global imNum
            imNum = imNum+1
            self.detectionGood()
            self.onUnload()
            #self.onStopped()
        else:
            self.detectionFailure()
            self.onUnload()
            #self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        #self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass

    def sayWord(self,s):
        ttsProxy=ALProxy("ALTextToSpeech")
        ttsProxy.say(s)


    def showNaoImage(self):

        camProxy = ALProxy("ALVideoDevice")
        resolution = 2    # VGA
        colorSpace = 11   # RGB
        found = 0

        videoClient = camProxy.subscribe("python_client", resolution, colorSpace, 5)

        t0 = time.time()

        naoImage = camProxy.getImageRemote(videoClient)

        # Get the image size and pixel array.
        imageWidth = naoImage[0]
        imageHeight = naoImage[1]
        array = naoImage[6]

        # Create a PIL Image from our pixel array.
        im = Image.fromstring("RGB", (imageWidth, imageHeight), array)

        # Create ipl Image to use with opencv
        cv_img = cv.CreateImageHeader(im.size, cv.IPL_DEPTH_8U, 3)  # RGB image
        cv.SetData(cv_img, im.tostring(), im.size[0]*3)
        cv.CvtColor(cv_img, cv_img, cv.CV_RGB2BGR)

        gray_image=cv.CreateImage(cv.GetSize(cv_img),8,1)
        cv.CvtColor(cv_img,gray_image,cv.CV_BGR2GRAY)


        (found,corners)=cv.FindChessboardCorners(gray_image,(7,5),cv.CV_CALIB_CB_ADAPTIVE_THRESH| cv.CV_CALIB_CB_FILTER_QUADS)
        if found == 1:

            self.sayWord("Corners Detected")

            self.sayWord("Saving Image")

        else:

            self.sayWord("Corners can not be detected")

            flag = 0
            camProxy.unsubscribe(videoClient)
            return flag


        t1 = time.time()

        # Time the image transfer.
        self.logger.info("acquisition delay "+str(t1 - t0))

        camProxy.unsubscribe(videoClient)


        self.logger.info(str(imNum))

        # Save the image.
        imName = "image"+str(imNum)+".jpg"
        im.save("/home/nao/SavedImages/"+imName)
        self.sayWord("Image"+str(imNum)+"Saved")

        flag = 1

        return flag]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="detectionFailure" type="1" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                  <Output name="detectionGood" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                </Box>
                                <Box name="Pattern Images" id="14" localization="8" tooltip="Enter tooltip here" x="229" y="20">
                                  <bitmap>media/images/box/box-diagram.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import Image
import ImageDraw
import time
import os,sys
import cv2 as cv

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):

        flag = self.showNaoImage()
        if (flag == 1):
            global imNum
            imNum = imNum+1
            self.detectionGood()
            self.onUnload()
            #self.onStopped()
        else:
            self.detectionFailure()
            self.onUnload()
            #self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        #self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass

    def sayWord(self,s):
        ttsProxy=ALProxy("ALTextToSpeech")
        ttsProxy.say(s)


    def showNaoImage(self):

        camProxy = ALProxy("ALVideoDevice")
        resolution = 2    # VGA
        colorSpace = 11   # RGB
        found = 0

        videoClient = camProxy.subscribe("python_client", resolution, colorSpace, 5)

        t0 = time.time()

        naoImage = camProxy.getImageRemote(videoClient)

        # Get the image size and pixel array.
        imageWidth = naoImage[0]
        imageHeight = naoImage[1]
        array = naoImage[6]

        # Create a PIL Image from our pixel array.
        im = Image.fromstring("RGB", (imageWidth, imageHeight), array)

        # Create ipl Image to use with opencv
        cv_img = cv.CreateImageHeader(im.size, cv.IPL_DEPTH_8U, 3)  # RGB image
        cv.SetData(cv_img, im.tostring(), im.size[0]*3)
        cv.CvtColor(cv_img, cv_img, cv.CV_RGB2BGR)

        gray_image=cv.CreateImage(cv.GetSize(cv_img),8,1)
        cv.CvtColor(cv_img,gray_image,cv.CV_BGR2GRAY)


        (found,corners)=cv.FindChessboardCorners(gray_image,(7,5),cv.CV_CALIB_CB_ADAPTIVE_THRESH| cv.CV_CALIB_CB_FILTER_QUADS)
        if found == 1:

            self.sayWord("Corners Detected")

            self.sayWord("Saving Image")

        else:

            self.sayWord("Corners can not be detected")

            flag = 0
            camProxy.unsubscribe(videoClient)
            return flag


        t1 = time.time()

        # Time the image transfer.
        self.logger.info("acquisition delay "+str(t1 - t0))

        camProxy.unsubscribe(videoClient)


        self.logger.info(str(imNum))

        # Save the image.
        imName = "image"+str(imNum)+".jpg"
        im.save("/home/nao/SavedImages/"+imName)
        self.sayWord("Image"+str(imNum)+"Saved")

        flag = 1

        return flag]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="detectionFailure" type="1" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                  <Output name="detectionGood" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                </Box>
                                <Box name="Pattern Images" id="16" localization="8" tooltip="Enter tooltip here" x="510" y="78">
                                  <bitmap>media/images/box/box-diagram.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import Image
import ImageDraw
import time
import os,sys
import cv2 as cv

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):

        flag = self.showNaoImage()
        if (flag == 1):
            global imNum
            imNum = imNum+1
            self.detectionGood()
            self.onUnload()
            #self.onStopped()
        else:
            self.detectionFailure()
            self.onUnload()
            #self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        #self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass

    def sayWord(self,s):
        ttsProxy=ALProxy("ALTextToSpeech")
        ttsProxy.say(s)


    def showNaoImage(self):

        camProxy = ALProxy("ALVideoDevice")
        resolution = 2    # VGA
        colorSpace = 11   # RGB
        found = 0

        videoClient = camProxy.subscribe("python_client", resolution, colorSpace, 5)

        t0 = time.time()

        naoImage = camProxy.getImageRemote(videoClient)

        # Get the image size and pixel array.
        imageWidth = naoImage[0]
        imageHeight = naoImage[1]
        array = naoImage[6]

        # Create a PIL Image from our pixel array.
        im = Image.fromstring("RGB", (imageWidth, imageHeight), array)

        # Create ipl Image to use with opencv
        cv_img = cv.CreateImageHeader(im.size, cv.IPL_DEPTH_8U, 3)  # RGB image
        cv.SetData(cv_img, im.tostring(), im.size[0]*3)
        cv.CvtColor(cv_img, cv_img, cv.CV_RGB2BGR)

        gray_image=cv.CreateImage(cv.GetSize(cv_img),8,1)
        cv.CvtColor(cv_img,gray_image,cv.CV_BGR2GRAY)


        (found,corners)=cv.FindChessboardCorners(gray_image,(7,5),cv.CV_CALIB_CB_ADAPTIVE_THRESH| cv.CV_CALIB_CB_FILTER_QUADS)
        if found == 1:

            self.sayWord("Corners Detected")

            self.sayWord("Saving Image")

        else:

            self.sayWord("Corners can not be detected")

            flag = 0
            camProxy.unsubscribe(videoClient)
            return flag


        t1 = time.time()

        # Time the image transfer.
        self.logger.info("acquisition delay "+str(t1 - t0))

        camProxy.unsubscribe(videoClient)


        self.logger.info(str(imNum))

        # Save the image.
        imName = "image"+str(imNum)+".jpg"
        im.save("/home/nao/SavedImages/"+imName)
        self.sayWord("Image"+str(imNum)+"Saved")

        flag = 1

        return flag]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="detectionFailure" type="1" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                  <Output name="detectionGood" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                </Box>
                                <Box name="HeadLeft" id="4" localization="8" tooltip='Robot will go to the position &quot;HeadLeft&#x0A;Position description : Turn Head to the left while sitting&#x0A;' x="104" y="26">
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="20">
                                    <ActuatorList model="nao">
                                      <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                        <Key frame="20" value="28.7382" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-1.84813" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="54.051" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="16.6091" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-29.534" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-72.4204" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0.173378" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                        <Key frame="20" value="0.2952" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="53.9679" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-14.5924" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="24.871" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="73.6557" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0.261268" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                        <Key frame="20" value="0.2964" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-35.418" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="15.735" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-89.8229" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="79.8912" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="48.7775" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-0.964409" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-16.4334" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-90.443" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="79.2807" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="48.0792" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0.441859" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                </Box>
                                <Box name="HeadRight" id="5" localization="8" tooltip='Robot will go to the position &quot;HeadRight&#x0A;Position description : Turn Head to right while sitting&#x0A;' x="370" y="102">
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="20">
                                    <ActuatorList model="nao">
                                      <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-33.8407" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-1.84813" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="54.051" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="16.6091" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-29.534" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-72.4204" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0.173378" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                        <Key frame="20" value="0.2956" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="53.9679" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-14.5924" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="24.7831" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="73.6557" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0.349159" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                        <Key frame="20" value="0.2964" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-35.5058" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="15.735" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-89.9108" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="79.8912" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="48.7775" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-0.964409" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-16.4334" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-90.443" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="79.2807" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="48.0792" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0.353968" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                </Box>
                                <Box name="Say" id="1" localization="8" tooltip="Say some text. Note that you must open the box to enter the text." x="755" y="219">
                                  <bitmap>media/images/box/interaction/say.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                  <Parameter name="Voice shaping (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean.' id="5" />
                                  <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean." id="6" />
                                  <Timeline enable="0">
                                    <BehaviorLayer name="behavior_layer1">
                                      <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                          <Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="422" y="65">
                                            <bitmap>media/images/box/interaction/say.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                            <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                            <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                            <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                          </Box>
                                          <Box name="Localized Text" id="5" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="114" y="68">
                                            <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.sentences = {
			"Chinese" : " 你好 ",
			"English" : " Corners can not be detected ",
			"French" : " Bonjour ",
			"German" : " Hallo ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요  ",
			"Portuguese" : " Olá ",
			"Spanish" : " Hola ",
		}

	def onLoad(self):
		self.tts = self.session().service("ALTextToSpeech")

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
                                              </content>
                                            </script>
                                            <pluginContent>
                                              <chinese uiName="‎普通话 (Mandarin Chinese)" languageName="Chinese">
                                                <![CDATA[你好]]>
                                              </chinese>
                                              <english uiName="‎American English (American English)" languageName="English">
                                                <![CDATA[Corners can not be detected]]>
                                              </english>
                                              <french uiName="‎Français (French)" languageName="French">
                                                <![CDATA[Bonjour]]>
                                              </french>
                                              <german uiName="‎Deutsch (German)" languageName="German">
                                                <![CDATA[Hallo]]>
                                              </german>
                                              <italian uiName="‎Italiano (Italian)" languageName="Italian">
                                                <![CDATA[Ciao]]>
                                              </italian>
                                              <japanese uiName="‎日本語 (Japanese)" languageName="Japanese">
                                                <![CDATA[こんにちは]]>
                                              </japanese>
                                              <korean uiName="‎한국어 (Korean)" languageName="Korean">
                                                <![CDATA[안녕하세요 ]]>
                                              </korean>
                                              <portuguese uiName="‎Português (Portuguese)" languageName="Portuguese">
                                                <![CDATA[Olá]]>
                                              </portuguese>
                                              <spanish uiName="‎Español (Spanish)" languageName="Spanish">
                                                <![CDATA[Hola]]>
                                              </spanish>
                                              <language>english</language>
                                            </pluginContent>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                            <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                          </Box>
                                          <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                          <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" />
                                          <Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" />
                                        </Diagram>
                                      </BehaviorKeyframe>
                                    </BehaviorLayer>
                                  </Timeline>
                                </Box>
                                <Link inputowner="11" indexofinput="2" outputowner="0" indexofoutput="2" />
                                <Link inputowner="0" indexofinput="3" outputowner="11" indexofoutput="5" />
                                <Link inputowner="14" indexofinput="2" outputowner="4" indexofoutput="4" />
                                <Link inputowner="4" indexofinput="2" outputowner="11" indexofoutput="4" />
                                <Link inputowner="5" indexofinput="2" outputowner="14" indexofoutput="4" />
                                <Link inputowner="16" indexofinput="2" outputowner="5" indexofoutput="4" />
                                <Link inputowner="0" indexofinput="3" outputowner="14" indexofoutput="5" />
                                <Link inputowner="0" indexofinput="3" outputowner="16" indexofoutput="5" />
                                <Link inputowner="1" indexofinput="2" outputowner="16" indexofoutput="4" />
                                <Link inputowner="0" indexofinput="3" outputowner="1" indexofoutput="4" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                      </Box>
                      <Box name="Walk To" id="17" localization="8" tooltip="Make NAO walk to a configured point relative to its current location." x="773" y="407">
                        <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #~ self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        self.onStopped()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                        <Parameter name="Distance X (m)" inherits_from_parent="0" content_type="2" value="0.15" default_value="0.2" min="-2" max="2" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="5" />
                        <Parameter name="Distance Y (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-2" max="2" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="6" />
                        <Parameter name="Theta (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-3.14" max="3.14" tooltip="The orientation in radians for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="7" />
                        <Parameter name="Left arm enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate left arm motion during the walk to make it more realistic." id="8" />
                        <Parameter name="Right arm enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate right arm motion during the walk to make it more realistic." id="9" />
                        <Parameter name="Stop walk when foot contact is lost" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If this option is activated, NAO stops walking when he loses foot contact with&#x0A;the ground. Else, he just keeps walking." id="10" />
                        <Timeline enable="0">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram>
                                <Box name="Walk To Advanced" id="3" localization="8" tooltip="Make NAO walk to a configured point relative to his current location with specific gait parameters." x="195" y="73">
                                  <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.motion = ALProxy("ALMotion")
        footGaitConfigMin = self.motion.getFootGaitConfig("Min")
        footGaitConfigMax = self.motion.getFootGaitConfig("Max")
        self.dFootGaitConfig = {}
        for i in range(len(footGaitConfigMin)):
            # [0] = key ("MaxStepX" for ex)
            # [1] = min
            # [2] = max
            self.dFootGaitConfig[footGaitConfigMin[i][0]] = [footGaitConfigMin[i][1], footGaitConfigMax[i][1]]

    def onLoad(self):
        pass

    def onUnload(self):
        self.motion.setWalkTargetVelocity(0.0, 0.0, 0.0, 0.0)

    def onInput_onStart(self):
        # send walk configuration to ALMotion
        self.motion.setWalkArmsEnable(self.getParameter("Left arm enabled"), self.getParameter("Right arm enabled"))
        self.motion.setMotionConfig([["ENABLE_FOOT_CONTACT_PROTECTION",self.getParameter("Stop walk when foot contact is lost")]])
        for k, v in self.dFootGaitConfig.iteritems():
            for unit in ["m", "rad", "%"]:
                try: # try for each unit and do nothing if value in gaitConfig but not in parameters
                    param = self.getParameter( str(k) + " (" + unit + ")" )
                    if( unit == "%" ):
                        param = param / 100.
                    if( len(v) == 2 ):
                        v.append( param )
                    else:
                        v[2] = param
                    break
                except:
                    pass

        gaitConfig = []
        for k, v in self.dFootGaitConfig.iteritems():
            try:
                gaitConfig.append( [k, v[2]] )
            except: # if some value added in gaitConfig but not in parameters
                pass
        # active walk process
        self.motion.walkTo(self.getParameter("Distance X (m)"), self.getParameter("Distance Y (m)"), self.getParameter("Theta (rad)"), gaitConfig)
         # The walk is finished so output
        self.onStopped() #~ activate output of the box

    def onInput_onStop(self):
        self.onUnload()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                  <Parameter name="Distance X (m)" inherits_from_parent="1" content_type="2" value="0.2" default_value="0.2" min="-2" max="2" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="5" />
                                  <Parameter name="Distance Y (m)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-2" max="2" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="6" />
                                  <Parameter name="Theta (rad)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-3.14" max="3.14" tooltip="The orientation in radians for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="7" />
                                  <Parameter name="Left arm enabled" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="Activate left arm motion during the walk to make it more realistic." id="8" />
                                  <Parameter name="Right arm enabled" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="Activate right arm motion during the walk to make it more realistic." id="9" />
                                  <Parameter name="Stop walk when foot contact is lost" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="If this option is activated, NAO stops walking when he loses foot contact with&#x0A;the ground. Else, he just keeps walking." id="10" />
                                  <Parameter name="MaxStepX (m)" inherits_from_parent="0" content_type="2" value="0.04" default_value="0.04" min="0.001" max="0.06" tooltip="Maximum length of forward/backward step." id="11" />
                                  <Parameter name="MaxStepY (m)" inherits_from_parent="0" content_type="2" value="0.14" default_value="0.14" min="0.101" max="0.16" tooltip="Maximum length of lateral step." id="12" />
                                  <Parameter name="MaxStepTheta (rad)" inherits_from_parent="0" content_type="2" value="0.349065" default_value="0.349065" min="0.001" max="0.523598" tooltip="Maximum length of rotational step." id="13" />
                                  <Parameter name="MaxStepFrequency (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Maximum step frequency." id="14" />
                                  <Parameter name="StepHeight (m)" inherits_from_parent="0" content_type="2" value="0.02" default_value="0.02" min="0.005" max="0.04" tooltip="Height of the step i.e. how high NAO put his feet up during the walk." id="15" />
                                  <Parameter name="TorsoWx (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-0.122173" max="0.122173" tooltip="Lateral angle of the torso during the walk.&#x0A;&#x0A;Note: A positive value means that NAO will be tilted to the right. A negative&#x0A;value means he is tilted to the left." id="16" />
                                  <Parameter name="TorsoWy (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-0.122173" max="0.122173" tooltip="Angle of the torso toward forward/backward during the walk.&#x0A;&#x0A;Note: A positive value means that NAO will be inclined forward. A negative&#x0A;value means he is inclined backward." id="17" />
                                  <Resource name="Legs" type="Lock" timeout="0" />
                                </Box>
                                <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="2" />
                                <Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                        <Resource name="Legs" type="Lock" timeout="0" />
                      </Box>
                      <Box name="SetHeadPose" id="44" localization="8" tooltip="Enter tooltip here" x="59" y="210">
                        <bitmap>media/images/box/box-diagram.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time
class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.motion = ALProxy("ALMotion")
        self.names  = ['HeadYaw', 'HeadPitch']
        self.fractionMaxSpeed = 0.2

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        self.onStopped() #~ activate output of the box
        # Example showing how to set angles, using a fraction of max speed
        HeadYawAngle=self.getParameter("HeadYawAngle")
        HeadPitchAngle=self.getParameter("HeadPitchAngle")
        angles  = [HeadYawAngle, HeadPitchAngle]
        self.motion.setAngles(self.names, angles, self.fractionMaxSpeed)

        time.sleep(3.0)

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Output name="Myoutput" type="2" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                        <Parameter name="HeadYawAngle" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="" id="6" />
                        <Parameter name="HeadPitchAngle" inherits_from_parent="0" content_type="2" value="0.263158" default_value="0" min="-1" max="1" tooltip="" id="7" />
                      </Box>
                      <Box name="PosesForImages" id="45" localization="8" tooltip="Normal Pose/HeadLeft/HeadRight" x="61" y="394">
                        <bitmap>media/images/box/box-diagram.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="Pattern Images_onStart" type="0" type_size="1" nature="2" inner="0" tooltip="This input has been automatically generated&#x0A;by converting several boxes into a single box." id="2" />
                        <Output name="PatternImages_detectionGood" type="0" type_size="1" nature="2" inner="0" tooltip="This output has been automatically generated&#x0A;by converting several boxes into a single box." id="3" />
                        <Timeline enable="0">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram scale="66.742">
                                <Box name="Pattern Images" id="11" localization="8" tooltip="Enter tooltip here" x="253" y="94">
                                  <bitmap>media/images/box/box-diagram.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import Image
import ImageDraw
import time
import os,sys
import cv2 as cv

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):

        flag = self.showNaoImage()
        if (flag == 1):
            global imNum
            imNum = imNum+1
            self.detectionGood()
            self.onUnload()
            #self.onStopped()
        else:
            self.detectionFailure()
            self.onUnload()
            #self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        #self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass

    def sayWord(self,s):
        ttsProxy=ALProxy("ALTextToSpeech")
        ttsProxy.say(s)


    def showNaoImage(self):

        camProxy = ALProxy("ALVideoDevice")
        resolution = 2    # VGA
        colorSpace = 11   # RGB
        found = 0

        videoClient = camProxy.subscribe("python_client", resolution, colorSpace, 5)

        t0 = time.time()

        naoImage = camProxy.getImageRemote(videoClient)

        # Get the image size and pixel array.
        imageWidth = naoImage[0]
        imageHeight = naoImage[1]
        array = naoImage[6]

        # Create a PIL Image from our pixel array.
        im = Image.fromstring("RGB", (imageWidth, imageHeight), array)

        # Create ipl Image to use with opencv
        cv_img = cv.CreateImageHeader(im.size, cv.IPL_DEPTH_8U, 3)  # RGB image
        cv.SetData(cv_img, im.tostring(), im.size[0]*3)
        cv.CvtColor(cv_img, cv_img, cv.CV_RGB2BGR)

        gray_image=cv.CreateImage(cv.GetSize(cv_img),8,1)
        cv.CvtColor(cv_img,gray_image,cv.CV_BGR2GRAY)


        (found,corners)=cv.FindChessboardCorners(gray_image,(9,6),cv.CV_CALIB_CB_ADAPTIVE_THRESH| cv.CV_CALIB_CB_FILTER_QUADS)
        if found == 1:

            self.sayWord("Corners Detected")

            self.sayWord("Saving Image")

        else:

            self.sayWord("Corners can not be detected")

            flag = 0
            camProxy.unsubscribe(videoClient)
            return flag


        t1 = time.time()

        # Time the image transfer.
        self.logger.info("acquisition delay "+str(t1 - t0))

        camProxy.unsubscribe(videoClient)


        self.logger.info(str(imNum))

        # Save the image.
        imName = "image"+str(imNum)+".jpg"
        im.save("/home/nao/SavedImages/"+imName)
        self.sayWord("Image"+str(imNum)+"Saved")

        flag = 1

        return flag]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="detectionFailure" type="1" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                  <Output name="detectionGood" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                </Box>
                                <Box name="Say" id="2" localization="8" tooltip="Say some text. Note that you must open the box to enter the text." x="561" y="159">
                                  <bitmap>media/images/box/interaction/say.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                  <Parameter name="Voice shaping (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean.' id="5" />
                                  <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean." id="6" />
                                  <Timeline enable="0">
                                    <BehaviorLayer name="behavior_layer1">
                                      <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                          <Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="422" y="65">
                                            <bitmap>media/images/box/interaction/say.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                            <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                            <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                            <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                          </Box>
                                          <Box name="Localized Text" id="5" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="114" y="68">
                                            <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.sentences = {
			"Chinese" : " 你好 ",
			"English" : " Changing position ",
			"French" : " Bonjour ",
			"German" : " Hallo ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요  ",
			"Portuguese" : " Olá ",
			"Spanish" : " Hola ",
		}

	def onLoad(self):
		self.tts = self.session().service("ALTextToSpeech")

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
                                              </content>
                                            </script>
                                            <pluginContent>
                                              <chinese uiName="‎普通话 (Mandarin Chinese)" languageName="Chinese">
                                                <![CDATA[你好]]>
                                              </chinese>
                                              <english uiName="‎American English (American English)" languageName="English">
                                                <![CDATA[Changing position]]>
                                              </english>
                                              <french uiName="‎Français (French)" languageName="French">
                                                <![CDATA[Bonjour]]>
                                              </french>
                                              <german uiName="‎Deutsch (German)" languageName="German">
                                                <![CDATA[Hallo]]>
                                              </german>
                                              <italian uiName="‎Italiano (Italian)" languageName="Italian">
                                                <![CDATA[Ciao]]>
                                              </italian>
                                              <japanese uiName="‎日本語 (Japanese)" languageName="Japanese">
                                                <![CDATA[こんにちは]]>
                                              </japanese>
                                              <korean uiName="‎한국어 (Korean)" languageName="Korean">
                                                <![CDATA[안녕하세요 ]]>
                                              </korean>
                                              <portuguese uiName="‎Português (Portuguese)" languageName="Portuguese">
                                                <![CDATA[Olá]]>
                                              </portuguese>
                                              <spanish uiName="‎Español (Spanish)" languageName="Spanish">
                                                <![CDATA[Hola]]>
                                              </spanish>
                                              <language>english</language>
                                            </pluginContent>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                            <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                          </Box>
                                          <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                          <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" />
                                          <Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" />
                                        </Diagram>
                                      </BehaviorKeyframe>
                                    </BehaviorLayer>
                                  </Timeline>
                                </Box>
                                <Link inputowner="11" indexofinput="2" outputowner="0" indexofoutput="2" />
                                <Link inputowner="0" indexofinput="3" outputowner="11" indexofoutput="5" />
                                <Link inputowner="2" indexofinput="2" outputowner="11" indexofoutput="4" />
                                <Link inputowner="0" indexofinput="3" outputowner="2" indexofoutput="4" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                      </Box>
                      <Box name="Wait" id="46" localization="8" tooltip="Wait a moment before sending a signal on the output. The wait can be stopped any&#x0A;time. You may restart it any time, and it will start again." x="60" y="304">
                        <bitmap>media/images/box/wait.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import threading

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.tb = False

    def onUnload(self):
        if( self.tb ):
            self.tb.cancel()
            self.tb = False

    def triggerOutput( self, rPeriod = 1 ):
        self.onUnload() # to clean everything
        self.timerOutput()

    def startTimer( self, rPeriod = 1 ):
        if( self.tb ):
            self.tb.cancel()
        self.tb = threading.Timer( rPeriod, self.triggerOutput, [rPeriod] )
        self.tb.start()

    def onInput_onStart(self):
        self.startTimer( self.getParameter("Timeout (s)") )

    def onInput_onStop(self):
        bRunning = self.tb
        self.onUnload()
        if( bRunning ):
            self.timerOutput()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                        <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is ellapsed, or if the box is stopped." id="4" />
                        <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="3" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
                      </Box>
                      <Box name="PosesForImages" id="11" localization="8" tooltip="Normal Pose/HeadLeft/HeadRight" x="242" y="10">
                        <bitmap>media/images/box/box-diagram.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="Pattern Images_onStart" type="0" type_size="1" nature="2" inner="0" tooltip="This input has been automatically generated&#x0A;by converting several boxes into a single box." id="2" />
                        <Output name="PatternImages_detectionGood" type="0" type_size="1" nature="2" inner="0" tooltip="This output has been automatically generated&#x0A;by converting several boxes into a single box." id="3" />
                        <Timeline enable="0">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram scale="47.1937">
                                <Box name="Pattern Images" id="11" localization="8" tooltip="Enter tooltip here" x="110" y="180">
                                  <bitmap>media/images/box/box-diagram.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import Image
import ImageDraw
import time
import os,sys
import cv2 as cv

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):

        flag = self.showNaoImage()
        if (flag == 1):
            global imNum
            imNum = imNum+1
            self.detectionGood()
            self.onUnload()
            #self.onStopped()
        else:
            self.detectionFailure()
            self.onUnload()
            #self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        #self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass

    def sayWord(self,s):
        ttsProxy=ALProxy("ALTextToSpeech")
        ttsProxy.say(s)


    def showNaoImage(self):

        camProxy = ALProxy("ALVideoDevice")
        resolution = 2    # VGA
        colorSpace = 11   # RGB
        found = 0

        videoClient = camProxy.subscribe("python_client", resolution, colorSpace, 5)

        t0 = time.time()

        naoImage = camProxy.getImageRemote(videoClient)

        # Get the image size and pixel array.
        imageWidth = naoImage[0]
        imageHeight = naoImage[1]
        array = naoImage[6]

        # Create a PIL Image from our pixel array.
        im = Image.fromstring("RGB", (imageWidth, imageHeight), array)

        # Create ipl Image to use with opencv
        cv_img = cv.CreateImageHeader(im.size, cv.IPL_DEPTH_8U, 3)  # RGB image
        cv.SetData(cv_img, im.tostring(), im.size[0]*3)
        cv.CvtColor(cv_img, cv_img, cv.CV_RGB2BGR)

        gray_image=cv.CreateImage(cv.GetSize(cv_img),8,1)
        cv.CvtColor(cv_img,gray_image,cv.CV_BGR2GRAY)


        (found,corners)=cv.FindChessboardCorners(gray_image,(7,5),cv.CV_CALIB_CB_ADAPTIVE_THRESH| cv.CV_CALIB_CB_FILTER_QUADS)
        if found == 1:

            self.sayWord("Corners Detected")

            self.sayWord("Saving Image")

        else:

            self.sayWord("Corners can not be detected")

            flag = 0
            camProxy.unsubscribe(videoClient)
            return flag


        t1 = time.time()

        # Time the image transfer.
        self.logger.info("acquisition delay "+str(t1 - t0))

        camProxy.unsubscribe(videoClient)


        self.logger.info(str(imNum))

        # Save the image.
        imName = "image"+str(imNum)+".jpg"
        im.save("/home/nao/SavedImages/"+imName)
        self.sayWord("Image"+str(imNum)+"Saved")

        flag = 1

        return flag]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="detectionFailure" type="1" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                  <Output name="detectionGood" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                </Box>
                                <Box name="left" id="12" localization="8" tooltip='Robot will go to the position &quot;left&#x0A;Position description : &#x0A;' x="77" y="29">
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="20">
                                    <ActuatorList model="nao">
                                      <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                        <Key frame="20" value="26.0135" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-0.969217" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="83.3189" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="8.96255" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-52.5617" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-21.7948" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-62.4934" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                        <Key frame="20" value="0.2112" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="90.3551" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-14.0651" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="58.7093" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="37.9716" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="42.1856" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                        <Key frame="20" value="0.258" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-13.3571" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="2.46338" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="12.2194" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-4.13332" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="3.24959" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-2.81013" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-8.25942" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="11.5114" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-5.29" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="5.89115" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="6.77007" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                </Box>
                                <Box name="Pattern Images" id="14" localization="8" tooltip="Enter tooltip here" x="200" y="31">
                                  <bitmap>media/images/box/box-diagram.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import Image
import ImageDraw
import time
import os,sys
import cv2 as cv

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):

        flag = self.showNaoImage()
        if (flag == 1):
            global imNum
            imNum = imNum+1
            self.detectionGood()
            self.onUnload()
            #self.onStopped()
        else:
            self.detectionFailure()
            self.onUnload()
            #self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        #self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass

    def sayWord(self,s):
        ttsProxy=ALProxy("ALTextToSpeech")
        ttsProxy.say(s)


    def showNaoImage(self):

        camProxy = ALProxy("ALVideoDevice")
        resolution = 2    # VGA
        colorSpace = 11   # RGB
        found = 0

        videoClient = camProxy.subscribe("python_client", resolution, colorSpace, 5)

        t0 = time.time()

        naoImage = camProxy.getImageRemote(videoClient)

        # Get the image size and pixel array.
        imageWidth = naoImage[0]
        imageHeight = naoImage[1]
        array = naoImage[6]

        # Create a PIL Image from our pixel array.
        im = Image.fromstring("RGB", (imageWidth, imageHeight), array)

        # Create ipl Image to use with opencv
        cv_img = cv.CreateImageHeader(im.size, cv.IPL_DEPTH_8U, 3)  # RGB image
        cv.SetData(cv_img, im.tostring(), im.size[0]*3)
        cv.CvtColor(cv_img, cv_img, cv.CV_RGB2BGR)

        gray_image=cv.CreateImage(cv.GetSize(cv_img),8,1)
        cv.CvtColor(cv_img,gray_image,cv.CV_BGR2GRAY)


        (found,corners)=cv.FindChessboardCorners(gray_image,(7,5),cv.CV_CALIB_CB_ADAPTIVE_THRESH| cv.CV_CALIB_CB_FILTER_QUADS)
        if found == 1:

            self.sayWord("Corners Detected")

            self.sayWord("Saving Image")

        else:

            self.sayWord("Corners can not be detected")

            flag = 0
            camProxy.unsubscribe(videoClient)
            return flag


        t1 = time.time()

        # Time the image transfer.
        self.logger.info("acquisition delay "+str(t1 - t0))

        camProxy.unsubscribe(videoClient)


        self.logger.info(str(imNum))

        # Save the image.
        imName = "image"+str(imNum)+".jpg"
        im.save("/home/nao/SavedImages/"+imName)
        self.sayWord("Image"+str(imNum)+"Saved")

        flag = 1

        return flag]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="detectionFailure" type="1" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                  <Output name="detectionGood" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                </Box>
                                <Box name="right" id="15" localization="8" tooltip='Robot will go to the position &quot;right&#x0A;Position description : &#x0A;' x="370" y="113">
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="20">
                                    <ActuatorList model="nao">
                                      <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-32.9618" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-1.145" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="83.4068" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="8.96255" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-52.5617" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-21.7948" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-62.4934" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                        <Key frame="20" value="0.2108" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="90.3551" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-14.0651" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="58.7093" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="37.8837" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="42.1856" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                        <Key frame="20" value="0.258" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-13.445" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="2.46338" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="12.2194" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-4.13332" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="2.89802" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-2.81013" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-8.25942" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="11.1598" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-5.29" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="5.53958" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="6.77007" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                </Box>
                                <Box name="Pattern Images" id="16" localization="8" tooltip="Enter tooltip here" x="517" y="128">
                                  <bitmap>media/images/box/box-diagram.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import Image
import ImageDraw
import time
import os,sys
import cv2 as cv

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):

        flag = self.showNaoImage()
        if (flag == 1):
            global imNum
            imNum = imNum+1
            self.detectionGood()
            self.onUnload()
            #self.onStopped()
        else:
            self.detectionFailure()
            self.onUnload()
            #self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        #self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass

    def sayWord(self,s):
        ttsProxy=ALProxy("ALTextToSpeech")
        ttsProxy.say(s)


    def showNaoImage(self):

        camProxy = ALProxy("ALVideoDevice")
        resolution = 2    # VGA
        colorSpace = 11   # RGB
        found = 0

        videoClient = camProxy.subscribe("python_client", resolution, colorSpace, 5)

        t0 = time.time()

        naoImage = camProxy.getImageRemote(videoClient)

        # Get the image size and pixel array.
        imageWidth = naoImage[0]
        imageHeight = naoImage[1]
        array = naoImage[6]

        # Create a PIL Image from our pixel array.
        im = Image.fromstring("RGB", (imageWidth, imageHeight), array)

        # Create ipl Image to use with opencv
        cv_img = cv.CreateImageHeader(im.size, cv.IPL_DEPTH_8U, 3)  # RGB image
        cv.SetData(cv_img, im.tostring(), im.size[0]*3)
        cv.CvtColor(cv_img, cv_img, cv.CV_RGB2BGR)

        gray_image=cv.CreateImage(cv.GetSize(cv_img),8,1)
        cv.CvtColor(cv_img,gray_image,cv.CV_BGR2GRAY)


        (found,corners)=cv.FindChessboardCorners(gray_image,(7,5),cv.CV_CALIB_CB_ADAPTIVE_THRESH| cv.CV_CALIB_CB_FILTER_QUADS)
        if found == 1:

            self.sayWord("Corners Detected")

            self.sayWord("Saving Image")

        else:

            self.sayWord("Corners can not be detected")

            flag = 0
            camProxy.unsubscribe(videoClient)
            return flag


        t1 = time.time()

        # Time the image transfer.
        self.logger.info("acquisition delay "+str(t1 - t0))

        camProxy.unsubscribe(videoClient)


        self.logger.info(str(imNum))

        # Save the image.
        imName = "image"+str(imNum)+".jpg"
        im.save("/home/nao/SavedImages/"+imName)
        self.sayWord("Image"+str(imNum)+"Saved")

        flag = 1

        return flag]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="detectionFailure" type="1" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                  <Output name="detectionGood" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                </Box>
                                <Box name="Init" id="26" localization="8" tooltip='Robot will go to the position &quot;Init&#x0A;Position description : Nao is ready to do anything from this position !&#x0A;' x="368" y="13">
                                  <bitmap>media/images/positions/Pos_init.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="20">
                                    <ActuatorList model="nao">
                                      <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-60" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="60" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-25" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="40" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-25" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="40" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                </Box>
                                <Box name="Init" id="1" localization="8" tooltip='Robot will go to the position &quot;Init&#x0A;Position description : Nao is ready to do anything from this position !&#x0A;' x="715" y="51">
                                  <bitmap>media/images/positions/Pos_init.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="20">
                                    <ActuatorList model="nao">
                                      <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-60" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="60" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-25" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="40" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-25" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="40" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                </Box>
                                <Box name="Walk To" id="3" localization="8" tooltip="Make NAO walk to a configured point relative to its current location." x="1073" y="442">
                                  <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #~ self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        self.onStopped()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                  <Parameter name="Distance X (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0.2" min="-2" max="2" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="5" />
                                  <Parameter name="Distance Y (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-2" max="2" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="6" />
                                  <Parameter name="Theta (rad)" inherits_from_parent="0" content_type="2" value="1.3" default_value="0" min="-3.14" max="3.14" tooltip="The orientation in radians for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="7" />
                                  <Parameter name="Left arm enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate left arm motion during the walk to make it more realistic." id="8" />
                                  <Parameter name="Right arm enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate right arm motion during the walk to make it more realistic." id="9" />
                                  <Parameter name="Stop walk when foot contact is lost" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If this option is activated, NAO stops walking when he loses foot contact with&#x0A;the ground. Else, he just keeps walking." id="10" />
                                  <Timeline enable="0">
                                    <BehaviorLayer name="behavior_layer1">
                                      <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                          <Box name="Walk To Advanced" id="3" localization="8" tooltip="Make NAO walk to a configured point relative to his current location with specific gait parameters." x="195" y="73">
                                            <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.motion = ALProxy("ALMotion")
        footGaitConfigMin = self.motion.getFootGaitConfig("Min")
        footGaitConfigMax = self.motion.getFootGaitConfig("Max")
        self.dFootGaitConfig = {}
        for i in range(len(footGaitConfigMin)):
            # [0] = key ("MaxStepX" for ex)
            # [1] = min
            # [2] = max
            self.dFootGaitConfig[footGaitConfigMin[i][0]] = [footGaitConfigMin[i][1], footGaitConfigMax[i][1]]

    def onLoad(self):
        pass

    def onUnload(self):
        self.motion.setWalkTargetVelocity(0.0, 0.0, 0.0, 0.0)

    def onInput_onStart(self):
        # send walk configuration to ALMotion
        self.motion.setWalkArmsEnable(self.getParameter("Left arm enabled"), self.getParameter("Right arm enabled"))
        self.motion.setMotionConfig([["ENABLE_FOOT_CONTACT_PROTECTION",self.getParameter("Stop walk when foot contact is lost")]])
        for k, v in self.dFootGaitConfig.iteritems():
            for unit in ["m", "rad", "%"]:
                try: # try for each unit and do nothing if value in gaitConfig but not in parameters
                    param = self.getParameter( str(k) + " (" + unit + ")" )
                    if( unit == "%" ):
                        param = param / 100.
                    if( len(v) == 2 ):
                        v.append( param )
                    else:
                        v[2] = param
                    break
                except:
                    pass

        gaitConfig = []
        for k, v in self.dFootGaitConfig.iteritems():
            try:
                gaitConfig.append( [k, v[2]] )
            except: # if some value added in gaitConfig but not in parameters
                pass
        # active walk process
        self.motion.walkTo(self.getParameter("Distance X (m)"), self.getParameter("Distance Y (m)"), self.getParameter("Theta (rad)"), gaitConfig)
         # The walk is finished so output
        self.onStopped() #~ activate output of the box

    def onInput_onStop(self):
        self.onUnload()]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                            <Parameter name="Distance X (m)" inherits_from_parent="1" content_type="2" value="0.2" default_value="0.2" min="-2" max="2" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="5" />
                                            <Parameter name="Distance Y (m)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-2" max="2" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="6" />
                                            <Parameter name="Theta (rad)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-3.14" max="3.14" tooltip="The orientation in radians for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="7" />
                                            <Parameter name="Left arm enabled" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="Activate left arm motion during the walk to make it more realistic." id="8" />
                                            <Parameter name="Right arm enabled" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="Activate right arm motion during the walk to make it more realistic." id="9" />
                                            <Parameter name="Stop walk when foot contact is lost" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="If this option is activated, NAO stops walking when he loses foot contact with&#x0A;the ground. Else, he just keeps walking." id="10" />
                                            <Parameter name="MaxStepX (m)" inherits_from_parent="0" content_type="2" value="0.04" default_value="0.04" min="0.001" max="0.06" tooltip="Maximum length of forward/backward step." id="11" />
                                            <Parameter name="MaxStepY (m)" inherits_from_parent="0" content_type="2" value="0.14" default_value="0.14" min="0.101" max="0.16" tooltip="Maximum length of lateral step." id="12" />
                                            <Parameter name="MaxStepTheta (rad)" inherits_from_parent="0" content_type="2" value="0.349065" default_value="0.349065" min="0.001" max="0.523598" tooltip="Maximum length of rotational step." id="13" />
                                            <Parameter name="MaxStepFrequency (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Maximum step frequency." id="14" />
                                            <Parameter name="StepHeight (m)" inherits_from_parent="0" content_type="2" value="0.02" default_value="0.02" min="0.005" max="0.04" tooltip="Height of the step i.e. how high NAO put his feet up during the walk." id="15" />
                                            <Parameter name="TorsoWx (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-0.122173" max="0.122173" tooltip="Lateral angle of the torso during the walk.&#x0A;&#x0A;Note: A positive value means that NAO will be tilted to the right. A negative&#x0A;value means he is tilted to the left." id="16" />
                                            <Parameter name="TorsoWy (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-0.122173" max="0.122173" tooltip="Angle of the torso toward forward/backward during the walk.&#x0A;&#x0A;Note: A positive value means that NAO will be inclined forward. A negative&#x0A;value means he is inclined backward." id="17" />
                                            <Resource name="Legs" type="Lock" timeout="0" />
                                          </Box>
                                          <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="2" />
                                          <Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" />
                                        </Diagram>
                                      </BehaviorKeyframe>
                                    </BehaviorLayer>
                                  </Timeline>
                                  <Resource name="Legs" type="Lock" timeout="0" />
                                </Box>
                                <Box name="Init" id="2" localization="8" tooltip='Robot will go to the position &quot;Init&#x0A;Position description : Nao is ready to do anything from this position !&#x0A;' x="981" y="152">
                                  <bitmap>media/images/positions/Pos_init.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="20">
                                    <ActuatorList model="nao">
                                      <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-60" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="60" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-25" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="40" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-25" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="40" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                </Box>
                                <Box name="Walk To" id="4" localization="8" tooltip="Make NAO walk to a configured point relative to its current location." x="66" y="389">
                                  <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #~ self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        self.onStopped()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                  <Parameter name="Distance X (m)" inherits_from_parent="0" content_type="2" value="-0.1" default_value="0.2" min="-2" max="2" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="5" />
                                  <Parameter name="Distance Y (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-2" max="2" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="6" />
                                  <Parameter name="Theta (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-3.14" max="3.14" tooltip="The orientation in radians for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="7" />
                                  <Parameter name="Left arm enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate left arm motion during the walk to make it more realistic." id="8" />
                                  <Parameter name="Right arm enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate right arm motion during the walk to make it more realistic." id="9" />
                                  <Parameter name="Stop walk when foot contact is lost" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If this option is activated, NAO stops walking when he loses foot contact with&#x0A;the ground. Else, he just keeps walking." id="10" />
                                  <Timeline enable="0">
                                    <BehaviorLayer name="behavior_layer1">
                                      <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                          <Box name="Walk To Advanced" id="3" localization="8" tooltip="Make NAO walk to a configured point relative to his current location with specific gait parameters." x="195" y="73">
                                            <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.motion = ALProxy("ALMotion")
        footGaitConfigMin = self.motion.getFootGaitConfig("Min")
        footGaitConfigMax = self.motion.getFootGaitConfig("Max")
        self.dFootGaitConfig = {}
        for i in range(len(footGaitConfigMin)):
            # [0] = key ("MaxStepX" for ex)
            # [1] = min
            # [2] = max
            self.dFootGaitConfig[footGaitConfigMin[i][0]] = [footGaitConfigMin[i][1], footGaitConfigMax[i][1]]

    def onLoad(self):
        pass

    def onUnload(self):
        self.motion.setWalkTargetVelocity(0.0, 0.0, 0.0, 0.0)

    def onInput_onStart(self):
        # send walk configuration to ALMotion
        self.motion.setWalkArmsEnable(self.getParameter("Left arm enabled"), self.getParameter("Right arm enabled"))
        self.motion.setMotionConfig([["ENABLE_FOOT_CONTACT_PROTECTION",self.getParameter("Stop walk when foot contact is lost")]])
        for k, v in self.dFootGaitConfig.iteritems():
            for unit in ["m", "rad", "%"]:
                try: # try for each unit and do nothing if value in gaitConfig but not in parameters
                    param = self.getParameter( str(k) + " (" + unit + ")" )
                    if( unit == "%" ):
                        param = param / 100.
                    if( len(v) == 2 ):
                        v.append( param )
                    else:
                        v[2] = param
                    break
                except:
                    pass

        gaitConfig = []
        for k, v in self.dFootGaitConfig.iteritems():
            try:
                gaitConfig.append( [k, v[2]] )
            except: # if some value added in gaitConfig but not in parameters
                pass
        # active walk process
        self.motion.walkTo(self.getParameter("Distance X (m)"), self.getParameter("Distance Y (m)"), self.getParameter("Theta (rad)"), gaitConfig)
         # The walk is finished so output
        self.onStopped() #~ activate output of the box

    def onInput_onStop(self):
        self.onUnload()]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                            <Parameter name="Distance X (m)" inherits_from_parent="1" content_type="2" value="0.2" default_value="0.2" min="-2" max="2" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="5" />
                                            <Parameter name="Distance Y (m)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-2" max="2" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="6" />
                                            <Parameter name="Theta (rad)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-3.14" max="3.14" tooltip="The orientation in radians for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="7" />
                                            <Parameter name="Left arm enabled" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="Activate left arm motion during the walk to make it more realistic." id="8" />
                                            <Parameter name="Right arm enabled" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="Activate right arm motion during the walk to make it more realistic." id="9" />
                                            <Parameter name="Stop walk when foot contact is lost" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="If this option is activated, NAO stops walking when he loses foot contact with&#x0A;the ground. Else, he just keeps walking." id="10" />
                                            <Parameter name="MaxStepX (m)" inherits_from_parent="0" content_type="2" value="0.04" default_value="0.04" min="0.001" max="0.06" tooltip="Maximum length of forward/backward step." id="11" />
                                            <Parameter name="MaxStepY (m)" inherits_from_parent="0" content_type="2" value="0.14" default_value="0.14" min="0.101" max="0.16" tooltip="Maximum length of lateral step." id="12" />
                                            <Parameter name="MaxStepTheta (rad)" inherits_from_parent="0" content_type="2" value="0.349065" default_value="0.349065" min="0.001" max="0.523598" tooltip="Maximum length of rotational step." id="13" />
                                            <Parameter name="MaxStepFrequency (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Maximum step frequency." id="14" />
                                            <Parameter name="StepHeight (m)" inherits_from_parent="0" content_type="2" value="0.02" default_value="0.02" min="0.005" max="0.04" tooltip="Height of the step i.e. how high NAO put his feet up during the walk." id="15" />
                                            <Parameter name="TorsoWx (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-0.122173" max="0.122173" tooltip="Lateral angle of the torso during the walk.&#x0A;&#x0A;Note: A positive value means that NAO will be tilted to the right. A negative&#x0A;value means he is tilted to the left." id="16" />
                                            <Parameter name="TorsoWy (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-0.122173" max="0.122173" tooltip="Angle of the torso toward forward/backward during the walk.&#x0A;&#x0A;Note: A positive value means that NAO will be inclined forward. A negative&#x0A;value means he is inclined backward." id="17" />
                                            <Resource name="Legs" type="Lock" timeout="0" />
                                          </Box>
                                          <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="2" />
                                          <Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" />
                                        </Diagram>
                                      </BehaviorKeyframe>
                                    </BehaviorLayer>
                                  </Timeline>
                                  <Resource name="Legs" type="Lock" timeout="0" />
                                </Box>
                                <Box name="Pattern Images" id="5" localization="8" tooltip="Enter tooltip here" x="207" y="395">
                                  <bitmap>media/images/box/box-diagram.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import Image
import ImageDraw
import time
import os,sys
import cv2 as cv

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):

        flag = self.showNaoImage()
        if (flag == 1):
            global imNum
            imNum = imNum+1
            self.detectionGood()
            self.onUnload()
            #self.onStopped()
        else:
            self.detectionFailure()
            self.onUnload()
            #self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        #self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass

    def sayWord(self,s):
        ttsProxy=ALProxy("ALTextToSpeech")
        ttsProxy.say(s)


    def showNaoImage(self):

        camProxy = ALProxy("ALVideoDevice")
        resolution = 2    # VGA
        colorSpace = 11   # RGB
        found = 0

        videoClient = camProxy.subscribe("python_client", resolution, colorSpace, 5)

        t0 = time.time()

        naoImage = camProxy.getImageRemote(videoClient)

        # Get the image size and pixel array.
        imageWidth = naoImage[0]
        imageHeight = naoImage[1]
        array = naoImage[6]

        # Create a PIL Image from our pixel array.
        im = Image.fromstring("RGB", (imageWidth, imageHeight), array)

        # Create ipl Image to use with opencv
        cv_img = cv.CreateImageHeader(im.size, cv.IPL_DEPTH_8U, 3)  # RGB image
        cv.SetData(cv_img, im.tostring(), im.size[0]*3)
        cv.CvtColor(cv_img, cv_img, cv.CV_RGB2BGR)

        gray_image=cv.CreateImage(cv.GetSize(cv_img),8,1)
        cv.CvtColor(cv_img,gray_image,cv.CV_BGR2GRAY)


        (found,corners)=cv.FindChessboardCorners(gray_image,(7,5),cv.CV_CALIB_CB_ADAPTIVE_THRESH| cv.CV_CALIB_CB_FILTER_QUADS)
        if found == 1:

            self.sayWord("Corners Detected")

            self.sayWord("Saving Image")

        else:

            self.sayWord("Corners can not be detected")

            flag = 0
            camProxy.unsubscribe(videoClient)
            return flag


        t1 = time.time()

        # Time the image transfer.
        self.logger.info("acquisition delay "+str(t1 - t0))

        camProxy.unsubscribe(videoClient)


        self.logger.info(str(imNum))

        # Save the image.
        imName = "image"+str(imNum)+".jpg"
        im.save("/home/nao/SavedImages/"+imName)
        self.sayWord("Image"+str(imNum)+"Saved")

        flag = 1

        return flag]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="detectionFailure" type="1" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                  <Output name="detectionGood" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                </Box>
                                <Box name="Init" id="6" localization="8" tooltip='Robot will go to the position &quot;Init&#x0A;Position description : Nao is ready to do anything from this position !&#x0A;' x="683" y="217">
                                  <bitmap>media/images/positions/Pos_init.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="20">
                                    <ActuatorList model="nao">
                                      <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-60" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="60" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-25" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="40" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-25" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="40" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                </Box>
                                <Box name="Walk To" id="7" localization="8" tooltip="Make NAO walk to a configured point relative to its current location." x="517" y="15">
                                  <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #~ self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        self.onStopped()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                  <Parameter name="Distance X (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0.2" min="-2" max="2" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="5" />
                                  <Parameter name="Distance Y (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-2" max="2" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="6" />
                                  <Parameter name="Theta (rad)" inherits_from_parent="0" content_type="2" value="0.4" default_value="0" min="-3.14" max="3.14" tooltip="The orientation in radians for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="7" />
                                  <Parameter name="Left arm enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate left arm motion during the walk to make it more realistic." id="8" />
                                  <Parameter name="Right arm enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate right arm motion during the walk to make it more realistic." id="9" />
                                  <Parameter name="Stop walk when foot contact is lost" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If this option is activated, NAO stops walking when he loses foot contact with&#x0A;the ground. Else, he just keeps walking." id="10" />
                                  <Timeline enable="0">
                                    <BehaviorLayer name="behavior_layer1">
                                      <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                          <Box name="Walk To Advanced" id="3" localization="8" tooltip="Make NAO walk to a configured point relative to his current location with specific gait parameters." x="195" y="73">
                                            <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.motion = ALProxy("ALMotion")
        footGaitConfigMin = self.motion.getFootGaitConfig("Min")
        footGaitConfigMax = self.motion.getFootGaitConfig("Max")
        self.dFootGaitConfig = {}
        for i in range(len(footGaitConfigMin)):
            # [0] = key ("MaxStepX" for ex)
            # [1] = min
            # [2] = max
            self.dFootGaitConfig[footGaitConfigMin[i][0]] = [footGaitConfigMin[i][1], footGaitConfigMax[i][1]]

    def onLoad(self):
        pass

    def onUnload(self):
        self.motion.setWalkTargetVelocity(0.0, 0.0, 0.0, 0.0)

    def onInput_onStart(self):
        # send walk configuration to ALMotion
        self.motion.setWalkArmsEnable(self.getParameter("Left arm enabled"), self.getParameter("Right arm enabled"))
        self.motion.setMotionConfig([["ENABLE_FOOT_CONTACT_PROTECTION",self.getParameter("Stop walk when foot contact is lost")]])
        for k, v in self.dFootGaitConfig.iteritems():
            for unit in ["m", "rad", "%"]:
                try: # try for each unit and do nothing if value in gaitConfig but not in parameters
                    param = self.getParameter( str(k) + " (" + unit + ")" )
                    if( unit == "%" ):
                        param = param / 100.
                    if( len(v) == 2 ):
                        v.append( param )
                    else:
                        v[2] = param
                    break
                except:
                    pass

        gaitConfig = []
        for k, v in self.dFootGaitConfig.iteritems():
            try:
                gaitConfig.append( [k, v[2]] )
            except: # if some value added in gaitConfig but not in parameters
                pass
        # active walk process
        self.motion.walkTo(self.getParameter("Distance X (m)"), self.getParameter("Distance Y (m)"), self.getParameter("Theta (rad)"), gaitConfig)
         # The walk is finished so output
        self.onStopped() #~ activate output of the box

    def onInput_onStop(self):
        self.onUnload()]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                            <Parameter name="Distance X (m)" inherits_from_parent="1" content_type="2" value="0.2" default_value="0.2" min="-2" max="2" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="5" />
                                            <Parameter name="Distance Y (m)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-2" max="2" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="6" />
                                            <Parameter name="Theta (rad)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-3.14" max="3.14" tooltip="The orientation in radians for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="7" />
                                            <Parameter name="Left arm enabled" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="Activate left arm motion during the walk to make it more realistic." id="8" />
                                            <Parameter name="Right arm enabled" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="Activate right arm motion during the walk to make it more realistic." id="9" />
                                            <Parameter name="Stop walk when foot contact is lost" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="If this option is activated, NAO stops walking when he loses foot contact with&#x0A;the ground. Else, he just keeps walking." id="10" />
                                            <Parameter name="MaxStepX (m)" inherits_from_parent="0" content_type="2" value="0.04" default_value="0.04" min="0.001" max="0.06" tooltip="Maximum length of forward/backward step." id="11" />
                                            <Parameter name="MaxStepY (m)" inherits_from_parent="0" content_type="2" value="0.14" default_value="0.14" min="0.101" max="0.16" tooltip="Maximum length of lateral step." id="12" />
                                            <Parameter name="MaxStepTheta (rad)" inherits_from_parent="0" content_type="2" value="0.349065" default_value="0.349065" min="0.001" max="0.523598" tooltip="Maximum length of rotational step." id="13" />
                                            <Parameter name="MaxStepFrequency (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Maximum step frequency." id="14" />
                                            <Parameter name="StepHeight (m)" inherits_from_parent="0" content_type="2" value="0.02" default_value="0.02" min="0.005" max="0.04" tooltip="Height of the step i.e. how high NAO put his feet up during the walk." id="15" />
                                            <Parameter name="TorsoWx (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-0.122173" max="0.122173" tooltip="Lateral angle of the torso during the walk.&#x0A;&#x0A;Note: A positive value means that NAO will be tilted to the right. A negative&#x0A;value means he is tilted to the left." id="16" />
                                            <Parameter name="TorsoWy (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-0.122173" max="0.122173" tooltip="Angle of the torso toward forward/backward during the walk.&#x0A;&#x0A;Note: A positive value means that NAO will be inclined forward. A negative&#x0A;value means he is inclined backward." id="17" />
                                            <Resource name="Legs" type="Lock" timeout="0" />
                                          </Box>
                                          <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="2" />
                                          <Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" />
                                        </Diagram>
                                      </BehaviorKeyframe>
                                    </BehaviorLayer>
                                  </Timeline>
                                  <Resource name="Legs" type="Lock" timeout="0" />
                                </Box>
                                <Box name="Walk To" id="8" localization="8" tooltip="Make NAO walk to a configured point relative to its current location." x="866" y="80">
                                  <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #~ self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        self.onStopped()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                  <Parameter name="Distance X (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0.2" min="-2" max="2" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="5" />
                                  <Parameter name="Distance Y (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-2" max="2" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="6" />
                                  <Parameter name="Theta (rad)" inherits_from_parent="0" content_type="2" value="-0.4" default_value="0" min="-3.14" max="3.14" tooltip="The orientation in radians for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="7" />
                                  <Parameter name="Left arm enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate left arm motion during the walk to make it more realistic." id="8" />
                                  <Parameter name="Right arm enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate right arm motion during the walk to make it more realistic." id="9" />
                                  <Parameter name="Stop walk when foot contact is lost" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If this option is activated, NAO stops walking when he loses foot contact with&#x0A;the ground. Else, he just keeps walking." id="10" />
                                  <Timeline enable="0">
                                    <BehaviorLayer name="behavior_layer1">
                                      <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                          <Box name="Walk To Advanced" id="3" localization="8" tooltip="Make NAO walk to a configured point relative to his current location with specific gait parameters." x="195" y="73">
                                            <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.motion = ALProxy("ALMotion")
        footGaitConfigMin = self.motion.getFootGaitConfig("Min")
        footGaitConfigMax = self.motion.getFootGaitConfig("Max")
        self.dFootGaitConfig = {}
        for i in range(len(footGaitConfigMin)):
            # [0] = key ("MaxStepX" for ex)
            # [1] = min
            # [2] = max
            self.dFootGaitConfig[footGaitConfigMin[i][0]] = [footGaitConfigMin[i][1], footGaitConfigMax[i][1]]

    def onLoad(self):
        pass

    def onUnload(self):
        self.motion.setWalkTargetVelocity(0.0, 0.0, 0.0, 0.0)

    def onInput_onStart(self):
        # send walk configuration to ALMotion
        self.motion.setWalkArmsEnable(self.getParameter("Left arm enabled"), self.getParameter("Right arm enabled"))
        self.motion.setMotionConfig([["ENABLE_FOOT_CONTACT_PROTECTION",self.getParameter("Stop walk when foot contact is lost")]])
        for k, v in self.dFootGaitConfig.iteritems():
            for unit in ["m", "rad", "%"]:
                try: # try for each unit and do nothing if value in gaitConfig but not in parameters
                    param = self.getParameter( str(k) + " (" + unit + ")" )
                    if( unit == "%" ):
                        param = param / 100.
                    if( len(v) == 2 ):
                        v.append( param )
                    else:
                        v[2] = param
                    break
                except:
                    pass

        gaitConfig = []
        for k, v in self.dFootGaitConfig.iteritems():
            try:
                gaitConfig.append( [k, v[2]] )
            except: # if some value added in gaitConfig but not in parameters
                pass
        # active walk process
        self.motion.walkTo(self.getParameter("Distance X (m)"), self.getParameter("Distance Y (m)"), self.getParameter("Theta (rad)"), gaitConfig)
         # The walk is finished so output
        self.onStopped() #~ activate output of the box

    def onInput_onStop(self):
        self.onUnload()]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                            <Parameter name="Distance X (m)" inherits_from_parent="1" content_type="2" value="0.2" default_value="0.2" min="-2" max="2" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="5" />
                                            <Parameter name="Distance Y (m)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-2" max="2" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="6" />
                                            <Parameter name="Theta (rad)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-3.14" max="3.14" tooltip="The orientation in radians for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="7" />
                                            <Parameter name="Left arm enabled" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="Activate left arm motion during the walk to make it more realistic." id="8" />
                                            <Parameter name="Right arm enabled" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="Activate right arm motion during the walk to make it more realistic." id="9" />
                                            <Parameter name="Stop walk when foot contact is lost" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="If this option is activated, NAO stops walking when he loses foot contact with&#x0A;the ground. Else, he just keeps walking." id="10" />
                                            <Parameter name="MaxStepX (m)" inherits_from_parent="0" content_type="2" value="0.04" default_value="0.04" min="0.001" max="0.06" tooltip="Maximum length of forward/backward step." id="11" />
                                            <Parameter name="MaxStepY (m)" inherits_from_parent="0" content_type="2" value="0.14" default_value="0.14" min="0.101" max="0.16" tooltip="Maximum length of lateral step." id="12" />
                                            <Parameter name="MaxStepTheta (rad)" inherits_from_parent="0" content_type="2" value="0.349065" default_value="0.349065" min="0.001" max="0.523598" tooltip="Maximum length of rotational step." id="13" />
                                            <Parameter name="MaxStepFrequency (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Maximum step frequency." id="14" />
                                            <Parameter name="StepHeight (m)" inherits_from_parent="0" content_type="2" value="0.02" default_value="0.02" min="0.005" max="0.04" tooltip="Height of the step i.e. how high NAO put his feet up during the walk." id="15" />
                                            <Parameter name="TorsoWx (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-0.122173" max="0.122173" tooltip="Lateral angle of the torso during the walk.&#x0A;&#x0A;Note: A positive value means that NAO will be tilted to the right. A negative&#x0A;value means he is tilted to the left." id="16" />
                                            <Parameter name="TorsoWy (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-0.122173" max="0.122173" tooltip="Angle of the torso toward forward/backward during the walk.&#x0A;&#x0A;Note: A positive value means that NAO will be inclined forward. A negative&#x0A;value means he is inclined backward." id="17" />
                                            <Resource name="Legs" type="Lock" timeout="0" />
                                          </Box>
                                          <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="2" />
                                          <Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" />
                                        </Diagram>
                                      </BehaviorKeyframe>
                                    </BehaviorLayer>
                                  </Timeline>
                                  <Resource name="Legs" type="Lock" timeout="0" />
                                </Box>
                                <Box name="left" id="9" localization="8" tooltip='Robot will go to the position &quot;left&#x0A;Position description : &#x0A;' x="332" y="325">
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="20">
                                    <ActuatorList model="nao">
                                      <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                        <Key frame="20" value="26.0135" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-0.969217" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="83.3189" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="8.96255" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-52.5617" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-21.7948" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-62.4934" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                        <Key frame="20" value="0.2112" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="90.3551" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-14.0651" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="58.7093" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="37.9716" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="42.1856" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                        <Key frame="20" value="0.258" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-13.3571" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="2.46338" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="12.2194" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-4.13332" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="3.24959" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-2.81013" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-8.25942" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="11.5114" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-5.29" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="5.89115" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="6.77007" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                </Box>
                                <Box name="Pattern Images" id="10" localization="8" tooltip="Enter tooltip here" x="448" y="387">
                                  <bitmap>media/images/box/box-diagram.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import Image
import ImageDraw
import time
import os,sys
import cv2 as cv

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):

        flag = self.showNaoImage()
        if (flag == 1):
            global imNum
            imNum = imNum+1
            self.detectionGood()
            self.onUnload()
            #self.onStopped()
        else:
            self.detectionFailure()
            self.onUnload()
            #self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        #self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass

    def sayWord(self,s):
        ttsProxy=ALProxy("ALTextToSpeech")
        ttsProxy.say(s)


    def showNaoImage(self):

        camProxy = ALProxy("ALVideoDevice")
        resolution = 2    # VGA
        colorSpace = 11   # RGB
        found = 0

        videoClient = camProxy.subscribe("python_client", resolution, colorSpace, 5)

        t0 = time.time()

        naoImage = camProxy.getImageRemote(videoClient)

        # Get the image size and pixel array.
        imageWidth = naoImage[0]
        imageHeight = naoImage[1]
        array = naoImage[6]

        # Create a PIL Image from our pixel array.
        im = Image.fromstring("RGB", (imageWidth, imageHeight), array)

        # Create ipl Image to use with opencv
        cv_img = cv.CreateImageHeader(im.size, cv.IPL_DEPTH_8U, 3)  # RGB image
        cv.SetData(cv_img, im.tostring(), im.size[0]*3)
        cv.CvtColor(cv_img, cv_img, cv.CV_RGB2BGR)

        gray_image=cv.CreateImage(cv.GetSize(cv_img),8,1)
        cv.CvtColor(cv_img,gray_image,cv.CV_BGR2GRAY)


        (found,corners)=cv.FindChessboardCorners(gray_image,(7,5),cv.CV_CALIB_CB_ADAPTIVE_THRESH| cv.CV_CALIB_CB_FILTER_QUADS)
        if found == 1:

            self.sayWord("Corners Detected")

            self.sayWord("Saving Image")

        else:

            self.sayWord("Corners can not be detected")

            flag = 0
            camProxy.unsubscribe(videoClient)
            return flag


        t1 = time.time()

        # Time the image transfer.
        self.logger.info("acquisition delay "+str(t1 - t0))

        camProxy.unsubscribe(videoClient)


        self.logger.info(str(imNum))

        # Save the image.
        imName = "image"+str(imNum)+".jpg"
        im.save("/home/nao/SavedImages/"+imName)
        self.sayWord("Image"+str(imNum)+"Saved")

        flag = 1

        return flag]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="detectionFailure" type="1" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                  <Output name="detectionGood" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                </Box>
                                <Box name="right" id="13" localization="8" tooltip='Robot will go to the position &quot;right&#x0A;Position description : &#x0A;' x="604" y="492">
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="20">
                                    <ActuatorList model="nao">
                                      <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-32.9618" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-1.145" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="83.4068" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="8.96255" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-52.5617" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-21.7948" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-62.4934" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                        <Key frame="20" value="0.2108" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="90.3551" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-14.0651" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="58.7093" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="37.8837" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="42.1856" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                        <Key frame="20" value="0.258" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-13.445" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="2.46338" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="12.2194" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-4.13332" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="2.89802" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-2.81013" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-8.25942" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="11.1598" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-5.29" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="5.53958" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="6.77007" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                </Box>
                                <Box name="Init" id="17" localization="8" tooltip='Robot will go to the position &quot;Init&#x0A;Position description : Nao is ready to do anything from this position !&#x0A;' x="602" y="392">
                                  <bitmap>media/images/positions/Pos_init.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="20">
                                    <ActuatorList model="nao">
                                      <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-60" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="60" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-25" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="40" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-25" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="40" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                </Box>
                                <Box name="Pattern Images" id="18" localization="8" tooltip="Enter tooltip here" x="809" y="472">
                                  <bitmap>media/images/box/box-diagram.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import Image
import ImageDraw
import time
import os,sys
import cv2 as cv

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):

        flag = self.showNaoImage()
        if (flag == 1):
            global imNum
            imNum = imNum+1
            self.detectionGood()
            self.onUnload()
            #self.onStopped()
        else:
            self.detectionFailure()
            self.onUnload()
            #self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        #self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass

    def sayWord(self,s):
        ttsProxy=ALProxy("ALTextToSpeech")
        ttsProxy.say(s)


    def showNaoImage(self):

        camProxy = ALProxy("ALVideoDevice")
        resolution = 2    # VGA
        colorSpace = 11   # RGB
        found = 0

        videoClient = camProxy.subscribe("python_client", resolution, colorSpace, 5)

        t0 = time.time()

        naoImage = camProxy.getImageRemote(videoClient)

        # Get the image size and pixel array.
        imageWidth = naoImage[0]
        imageHeight = naoImage[1]
        array = naoImage[6]

        # Create a PIL Image from our pixel array.
        im = Image.fromstring("RGB", (imageWidth, imageHeight), array)

        # Create ipl Image to use with opencv
        cv_img = cv.CreateImageHeader(im.size, cv.IPL_DEPTH_8U, 3)  # RGB image
        cv.SetData(cv_img, im.tostring(), im.size[0]*3)
        cv.CvtColor(cv_img, cv_img, cv.CV_RGB2BGR)

        gray_image=cv.CreateImage(cv.GetSize(cv_img),8,1)
        cv.CvtColor(cv_img,gray_image,cv.CV_BGR2GRAY)


        (found,corners)=cv.FindChessboardCorners(gray_image,(7,5),cv.CV_CALIB_CB_ADAPTIVE_THRESH| cv.CV_CALIB_CB_FILTER_QUADS)
        if found == 1:

            self.sayWord("Corners Detected")

            self.sayWord("Saving Image")

        else:

            self.sayWord("Corners can not be detected")

            flag = 0
            camProxy.unsubscribe(videoClient)
            return flag


        t1 = time.time()

        # Time the image transfer.
        self.logger.info("acquisition delay "+str(t1 - t0))

        camProxy.unsubscribe(videoClient)


        self.logger.info(str(imNum))

        # Save the image.
        imName = "image"+str(imNum)+".jpg"
        im.save("/home/nao/SavedImages/"+imName)
        self.sayWord("Image"+str(imNum)+"Saved")

        flag = 1

        return flag]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="detectionFailure" type="1" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                  <Output name="detectionGood" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                </Box>
                                <Link inputowner="12" indexofinput="2" outputowner="11" indexofoutput="4" />
                                <Link inputowner="14" indexofinput="2" outputowner="12" indexofoutput="4" />
                                <Link inputowner="15" indexofinput="2" outputowner="14" indexofoutput="4" />
                                <Link inputowner="16" indexofinput="2" outputowner="15" indexofoutput="4" />
                                <Link inputowner="11" indexofinput="2" outputowner="0" indexofoutput="2" />
                                <Link inputowner="0" indexofinput="3" outputowner="11" indexofoutput="5" />
                                <Link inputowner="26" indexofinput="2" outputowner="14" indexofoutput="5" />
                                <Link inputowner="1" indexofinput="2" outputowner="16" indexofoutput="5" />
                                <Link inputowner="11" indexofinput="2" outputowner="3" indexofoutput="4" />
                                <Link inputowner="2" indexofinput="2" outputowner="16" indexofoutput="4" />
                                <Link inputowner="4" indexofinput="2" outputowner="2" indexofoutput="4" />
                                <Link inputowner="5" indexofinput="2" outputowner="4" indexofoutput="4" />
                                <Link inputowner="6" indexofinput="2" outputowner="5" indexofoutput="5" />
                                <Link inputowner="0" indexofinput="3" outputowner="6" indexofoutput="4" />
                                <Link inputowner="7" indexofinput="2" outputowner="26" indexofoutput="4" />
                                <Link inputowner="0" indexofinput="3" outputowner="7" indexofoutput="4" />
                                <Link inputowner="8" indexofinput="2" outputowner="1" indexofoutput="4" />
                                <Link inputowner="0" indexofinput="3" outputowner="8" indexofoutput="4" />
                                <Link inputowner="9" indexofinput="2" outputowner="5" indexofoutput="4" />
                                <Link inputowner="13" indexofinput="2" outputowner="10" indexofoutput="4" />
                                <Link inputowner="17" indexofinput="2" outputowner="10" indexofoutput="5" />
                                <Link inputowner="10" indexofinput="2" outputowner="9" indexofoutput="4" />
                                <Link inputowner="7" indexofinput="2" outputowner="17" indexofoutput="4" />
                                <Link inputowner="18" indexofinput="2" outputowner="13" indexofoutput="4" />
                                <Link inputowner="3" indexofinput="2" outputowner="18" indexofoutput="4" />
                                <Link inputowner="1" indexofinput="2" outputowner="18" indexofoutput="5" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                      </Box>
                      <Box name="Walk To" id="48" localization="8" tooltip="Make NAO walk to a configured point relative to its current location." x="762" y="211">
                        <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #~ self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        self.onStopped()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                        <Parameter name="Distance X (m)" inherits_from_parent="0" content_type="2" value="0.1" default_value="0.2" min="-2" max="2" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="5" />
                        <Parameter name="Distance Y (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-2" max="2" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="6" />
                        <Parameter name="Theta (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-3.14" max="3.14" tooltip="The orientation in radians for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="7" />
                        <Parameter name="Left arm enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate left arm motion during the walk to make it more realistic." id="8" />
                        <Parameter name="Right arm enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate right arm motion during the walk to make it more realistic." id="9" />
                        <Parameter name="Stop walk when foot contact is lost" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If this option is activated, NAO stops walking when he loses foot contact with&#x0A;the ground. Else, he just keeps walking." id="10" />
                        <Timeline enable="0">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram>
                                <Box name="Walk To Advanced" id="3" localization="8" tooltip="Make NAO walk to a configured point relative to his current location with specific gait parameters." x="195" y="73">
                                  <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.motion = ALProxy("ALMotion")
        footGaitConfigMin = self.motion.getFootGaitConfig("Min")
        footGaitConfigMax = self.motion.getFootGaitConfig("Max")
        self.dFootGaitConfig = {}
        for i in range(len(footGaitConfigMin)):
            # [0] = key ("MaxStepX" for ex)
            # [1] = min
            # [2] = max
            self.dFootGaitConfig[footGaitConfigMin[i][0]] = [footGaitConfigMin[i][1], footGaitConfigMax[i][1]]

    def onLoad(self):
        pass

    def onUnload(self):
        self.motion.setWalkTargetVelocity(0.0, 0.0, 0.0, 0.0)

    def onInput_onStart(self):
        # send walk configuration to ALMotion
        self.motion.setWalkArmsEnable(self.getParameter("Left arm enabled"), self.getParameter("Right arm enabled"))
        self.motion.setMotionConfig([["ENABLE_FOOT_CONTACT_PROTECTION",self.getParameter("Stop walk when foot contact is lost")]])
        for k, v in self.dFootGaitConfig.iteritems():
            for unit in ["m", "rad", "%"]:
                try: # try for each unit and do nothing if value in gaitConfig but not in parameters
                    param = self.getParameter( str(k) + " (" + unit + ")" )
                    if( unit == "%" ):
                        param = param / 100.
                    if( len(v) == 2 ):
                        v.append( param )
                    else:
                        v[2] = param
                    break
                except:
                    pass

        gaitConfig = []
        for k, v in self.dFootGaitConfig.iteritems():
            try:
                gaitConfig.append( [k, v[2]] )
            except: # if some value added in gaitConfig but not in parameters
                pass
        # active walk process
        self.motion.walkTo(self.getParameter("Distance X (m)"), self.getParameter("Distance Y (m)"), self.getParameter("Theta (rad)"), gaitConfig)
         # The walk is finished so output
        self.onStopped() #~ activate output of the box

    def onInput_onStop(self):
        self.onUnload()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                  <Parameter name="Distance X (m)" inherits_from_parent="1" content_type="2" value="0" default_value="0.2" min="-2" max="2" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="5" />
                                  <Parameter name="Distance Y (m)" inherits_from_parent="1" content_type="2" value="0.2" default_value="0" min="-2" max="2" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="6" />
                                  <Parameter name="Theta (rad)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-3.14" max="3.14" tooltip="The orientation in radians for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="7" />
                                  <Parameter name="Left arm enabled" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="Activate left arm motion during the walk to make it more realistic." id="8" />
                                  <Parameter name="Right arm enabled" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="Activate right arm motion during the walk to make it more realistic." id="9" />
                                  <Parameter name="Stop walk when foot contact is lost" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="If this option is activated, NAO stops walking when he loses foot contact with&#x0A;the ground. Else, he just keeps walking." id="10" />
                                  <Parameter name="MaxStepX (m)" inherits_from_parent="0" content_type="2" value="0.022804" default_value="0.04" min="0.001" max="0.06" tooltip="Maximum length of forward/backward step." id="11" />
                                  <Parameter name="MaxStepY (m)" inherits_from_parent="0" content_type="2" value="0.126652" default_value="0.14" min="0.101" max="0.16" tooltip="Maximum length of lateral step." id="12" />
                                  <Parameter name="MaxStepTheta (rad)" inherits_from_parent="0" content_type="2" value="0.228217" default_value="0.349065" min="0.001" max="0.523598" tooltip="Maximum length of rotational step." id="13" />
                                  <Parameter name="MaxStepFrequency (%)" inherits_from_parent="0" content_type="1" value="49" default_value="100" min="0" max="100" tooltip="Maximum step frequency." id="14" />
                                  <Parameter name="StepHeight (m)" inherits_from_parent="0" content_type="2" value="0.02" default_value="0.02" min="0.005" max="0.04" tooltip="Height of the step i.e. how high NAO put his feet up during the walk." id="15" />
                                  <Parameter name="TorsoWx (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-0.122173" max="0.122173" tooltip="Lateral angle of the torso during the walk.&#x0A;&#x0A;Note: A positive value means that NAO will be tilted to the right. A negative&#x0A;value means he is tilted to the left." id="16" />
                                  <Parameter name="TorsoWy (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-0.122173" max="0.122173" tooltip="Angle of the torso toward forward/backward during the walk.&#x0A;&#x0A;Note: A positive value means that NAO will be inclined forward. A negative&#x0A;value means he is inclined backward." id="17" />
                                  <Resource name="Legs" type="Lock" timeout="0" />
                                </Box>
                                <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="2" />
                                <Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                        <Resource name="Legs" type="Lock" timeout="0" />
                      </Box>
                      <Box name="PosesForImages" id="2" localization="8" tooltip="Normal Pose/HeadLeft/HeadRight" x="248" y="319">
                        <bitmap>media/images/box/box-diagram.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="Pattern Images_onStart" type="0" type_size="1" nature="2" inner="0" tooltip="This input has been automatically generated&#x0A;by converting several boxes into a single box." id="2" />
                        <Output name="PatternImages_detectionGood" type="0" type_size="1" nature="2" inner="0" tooltip="This output has been automatically generated&#x0A;by converting several boxes into a single box." id="3" />
                        <Timeline enable="0">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram scale="47.1937">
                                <Box name="Pattern Images" id="11" localization="8" tooltip="Enter tooltip here" x="110" y="180">
                                  <bitmap>media/images/box/box-diagram.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import Image
import ImageDraw
import time
import os,sys
import cv2 as cv

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):

        flag = self.showNaoImage()
        if (flag == 1):
            global imNum
            imNum = imNum+1
            self.detectionGood()
            self.onUnload()
            #self.onStopped()
        else:
            self.detectionFailure()
            self.onUnload()
            #self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        #self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass

    def sayWord(self,s):
        ttsProxy=ALProxy("ALTextToSpeech")
        ttsProxy.say(s)


    def showNaoImage(self):

        camProxy = ALProxy("ALVideoDevice")
        resolution = 2    # VGA
        colorSpace = 11   # RGB
        found = 0

        videoClient = camProxy.subscribe("python_client", resolution, colorSpace, 5)

        t0 = time.time()

        naoImage = camProxy.getImageRemote(videoClient)

        # Get the image size and pixel array.
        imageWidth = naoImage[0]
        imageHeight = naoImage[1]
        array = naoImage[6]

        # Create a PIL Image from our pixel array.
        im = Image.fromstring("RGB", (imageWidth, imageHeight), array)

        # Create ipl Image to use with opencv
        cv_img = cv.CreateImageHeader(im.size, cv.IPL_DEPTH_8U, 3)  # RGB image
        cv.SetData(cv_img, im.tostring(), im.size[0]*3)
        cv.CvtColor(cv_img, cv_img, cv.CV_RGB2BGR)

        gray_image=cv.CreateImage(cv.GetSize(cv_img),8,1)
        cv.CvtColor(cv_img,gray_image,cv.CV_BGR2GRAY)


        (found,corners)=cv.FindChessboardCorners(gray_image,(7,5),cv.CV_CALIB_CB_ADAPTIVE_THRESH| cv.CV_CALIB_CB_FILTER_QUADS)
        if found == 1:

            self.sayWord("Corners Detected")

            self.sayWord("Saving Image")

        else:

            self.sayWord("Corners can not be detected")

            flag = 0
            camProxy.unsubscribe(videoClient)
            return flag


        t1 = time.time()

        # Time the image transfer.
        self.logger.info("acquisition delay "+str(t1 - t0))

        camProxy.unsubscribe(videoClient)


        self.logger.info(str(imNum))

        # Save the image.
        imName = "image"+str(imNum)+".jpg"
        im.save("/home/nao/SavedImages/"+imName)
        self.sayWord("Image"+str(imNum)+"Saved")

        flag = 1

        return flag]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="detectionFailure" type="1" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                  <Output name="detectionGood" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                </Box>
                                <Box name="left" id="12" localization="8" tooltip='Robot will go to the position &quot;left&#x0A;Position description : &#x0A;' x="77" y="29">
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="20">
                                    <ActuatorList model="nao">
                                      <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                        <Key frame="20" value="26.0135" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-0.969217" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="83.3189" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="8.96255" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-52.5617" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-21.7948" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-62.4934" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                        <Key frame="20" value="0.2112" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="90.3551" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-14.0651" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="58.7093" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="37.9716" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="42.1856" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                        <Key frame="20" value="0.258" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-13.3571" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="2.46338" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="12.2194" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-4.13332" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="3.24959" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-2.81013" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-8.25942" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="11.5114" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-5.29" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="5.89115" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="6.77007" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                </Box>
                                <Box name="Pattern Images" id="14" localization="8" tooltip="Enter tooltip here" x="200" y="31">
                                  <bitmap>media/images/box/box-diagram.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import Image
import ImageDraw
import time
import os,sys
import cv2 as cv

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):

        flag = self.showNaoImage()
        if (flag == 1):
            global imNum
            imNum = imNum+1
            self.detectionGood()
            self.onUnload()
            #self.onStopped()
        else:
            self.detectionFailure()
            self.onUnload()
            #self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        #self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass

    def sayWord(self,s):
        ttsProxy=ALProxy("ALTextToSpeech")
        ttsProxy.say(s)


    def showNaoImage(self):

        camProxy = ALProxy("ALVideoDevice")
        resolution = 2    # VGA
        colorSpace = 11   # RGB
        found = 0

        videoClient = camProxy.subscribe("python_client", resolution, colorSpace, 5)

        t0 = time.time()

        naoImage = camProxy.getImageRemote(videoClient)

        # Get the image size and pixel array.
        imageWidth = naoImage[0]
        imageHeight = naoImage[1]
        array = naoImage[6]

        # Create a PIL Image from our pixel array.
        im = Image.fromstring("RGB", (imageWidth, imageHeight), array)

        # Create ipl Image to use with opencv
        cv_img = cv.CreateImageHeader(im.size, cv.IPL_DEPTH_8U, 3)  # RGB image
        cv.SetData(cv_img, im.tostring(), im.size[0]*3)
        cv.CvtColor(cv_img, cv_img, cv.CV_RGB2BGR)

        gray_image=cv.CreateImage(cv.GetSize(cv_img),8,1)
        cv.CvtColor(cv_img,gray_image,cv.CV_BGR2GRAY)


        (found,corners)=cv.FindChessboardCorners(gray_image,(7,5),cv.CV_CALIB_CB_ADAPTIVE_THRESH| cv.CV_CALIB_CB_FILTER_QUADS)
        if found == 1:

            self.sayWord("Corners Detected")

            self.sayWord("Saving Image")

        else:

            self.sayWord("Corners can not be detected")

            flag = 0
            camProxy.unsubscribe(videoClient)
            return flag


        t1 = time.time()

        # Time the image transfer.
        self.logger.info("acquisition delay "+str(t1 - t0))

        camProxy.unsubscribe(videoClient)


        self.logger.info(str(imNum))

        # Save the image.
        imName = "image"+str(imNum)+".jpg"
        im.save("/home/nao/SavedImages/"+imName)
        self.sayWord("Image"+str(imNum)+"Saved")

        flag = 1

        return flag]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="detectionFailure" type="1" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                  <Output name="detectionGood" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                </Box>
                                <Box name="right" id="15" localization="8" tooltip='Robot will go to the position &quot;right&#x0A;Position description : &#x0A;' x="370" y="113">
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="20">
                                    <ActuatorList model="nao">
                                      <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-32.9618" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-1.145" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="83.4068" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="8.96255" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-52.5617" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-21.7948" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-62.4934" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                        <Key frame="20" value="0.2108" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="90.3551" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-14.0651" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="58.7093" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="37.8837" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="42.1856" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                        <Key frame="20" value="0.258" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-13.445" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="2.46338" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="12.2194" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-4.13332" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="2.89802" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-2.81013" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-8.25942" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="11.1598" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-5.29" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="5.53958" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="6.77007" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                </Box>
                                <Box name="Pattern Images" id="16" localization="8" tooltip="Enter tooltip here" x="517" y="128">
                                  <bitmap>media/images/box/box-diagram.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import Image
import ImageDraw
import time
import os,sys
import cv2 as cv

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):

        flag = self.showNaoImage()
        if (flag == 1):
            global imNum
            imNum = imNum+1
            self.detectionGood()
            self.onUnload()
            #self.onStopped()
        else:
            self.detectionFailure()
            self.onUnload()
            #self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        #self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass

    def sayWord(self,s):
        ttsProxy=ALProxy("ALTextToSpeech")
        ttsProxy.say(s)


    def showNaoImage(self):

        camProxy = ALProxy("ALVideoDevice")
        resolution = 2    # VGA
        colorSpace = 11   # RGB
        found = 0

        videoClient = camProxy.subscribe("python_client", resolution, colorSpace, 5)

        t0 = time.time()

        naoImage = camProxy.getImageRemote(videoClient)

        # Get the image size and pixel array.
        imageWidth = naoImage[0]
        imageHeight = naoImage[1]
        array = naoImage[6]

        # Create a PIL Image from our pixel array.
        im = Image.fromstring("RGB", (imageWidth, imageHeight), array)

        # Create ipl Image to use with opencv
        cv_img = cv.CreateImageHeader(im.size, cv.IPL_DEPTH_8U, 3)  # RGB image
        cv.SetData(cv_img, im.tostring(), im.size[0]*3)
        cv.CvtColor(cv_img, cv_img, cv.CV_RGB2BGR)

        gray_image=cv.CreateImage(cv.GetSize(cv_img),8,1)
        cv.CvtColor(cv_img,gray_image,cv.CV_BGR2GRAY)


        (found,corners)=cv.FindChessboardCorners(gray_image,(7,5),cv.CV_CALIB_CB_ADAPTIVE_THRESH| cv.CV_CALIB_CB_FILTER_QUADS)
        if found == 1:

            self.sayWord("Corners Detected")

            self.sayWord("Saving Image")

        else:

            self.sayWord("Corners can not be detected")

            flag = 0
            camProxy.unsubscribe(videoClient)
            return flag


        t1 = time.time()

        # Time the image transfer.
        self.logger.info("acquisition delay "+str(t1 - t0))

        camProxy.unsubscribe(videoClient)


        self.logger.info(str(imNum))

        # Save the image.
        imName = "image"+str(imNum)+".jpg"
        im.save("/home/nao/SavedImages/"+imName)
        self.sayWord("Image"+str(imNum)+"Saved")

        flag = 1

        return flag]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="detectionFailure" type="1" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                  <Output name="detectionGood" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                </Box>
                                <Box name="Init" id="26" localization="8" tooltip='Robot will go to the position &quot;Init&#x0A;Position description : Nao is ready to do anything from this position !&#x0A;' x="368" y="13">
                                  <bitmap>media/images/positions/Pos_init.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="20">
                                    <ActuatorList model="nao">
                                      <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-60" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="60" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-25" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="40" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-25" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="40" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                </Box>
                                <Box name="Init" id="1" localization="8" tooltip='Robot will go to the position &quot;Init&#x0A;Position description : Nao is ready to do anything from this position !&#x0A;' x="715" y="51">
                                  <bitmap>media/images/positions/Pos_init.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="20">
                                    <ActuatorList model="nao">
                                      <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-60" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="60" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-25" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="40" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-25" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="40" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                </Box>
                                <Box name="Walk To" id="3" localization="8" tooltip="Make NAO walk to a configured point relative to its current location." x="1073" y="442">
                                  <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #~ self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        self.onStopped()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                  <Parameter name="Distance X (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0.2" min="-2" max="2" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="5" />
                                  <Parameter name="Distance Y (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-2" max="2" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="6" />
                                  <Parameter name="Theta (rad)" inherits_from_parent="0" content_type="2" value="1.3" default_value="0" min="-3.14" max="3.14" tooltip="The orientation in radians for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="7" />
                                  <Parameter name="Left arm enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate left arm motion during the walk to make it more realistic." id="8" />
                                  <Parameter name="Right arm enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate right arm motion during the walk to make it more realistic." id="9" />
                                  <Parameter name="Stop walk when foot contact is lost" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If this option is activated, NAO stops walking when he loses foot contact with&#x0A;the ground. Else, he just keeps walking." id="10" />
                                  <Timeline enable="0">
                                    <BehaviorLayer name="behavior_layer1">
                                      <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                          <Box name="Walk To Advanced" id="3" localization="8" tooltip="Make NAO walk to a configured point relative to his current location with specific gait parameters." x="195" y="73">
                                            <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.motion = ALProxy("ALMotion")
        footGaitConfigMin = self.motion.getFootGaitConfig("Min")
        footGaitConfigMax = self.motion.getFootGaitConfig("Max")
        self.dFootGaitConfig = {}
        for i in range(len(footGaitConfigMin)):
            # [0] = key ("MaxStepX" for ex)
            # [1] = min
            # [2] = max
            self.dFootGaitConfig[footGaitConfigMin[i][0]] = [footGaitConfigMin[i][1], footGaitConfigMax[i][1]]

    def onLoad(self):
        pass

    def onUnload(self):
        self.motion.setWalkTargetVelocity(0.0, 0.0, 0.0, 0.0)

    def onInput_onStart(self):
        # send walk configuration to ALMotion
        self.motion.setWalkArmsEnable(self.getParameter("Left arm enabled"), self.getParameter("Right arm enabled"))
        self.motion.setMotionConfig([["ENABLE_FOOT_CONTACT_PROTECTION",self.getParameter("Stop walk when foot contact is lost")]])
        for k, v in self.dFootGaitConfig.iteritems():
            for unit in ["m", "rad", "%"]:
                try: # try for each unit and do nothing if value in gaitConfig but not in parameters
                    param = self.getParameter( str(k) + " (" + unit + ")" )
                    if( unit == "%" ):
                        param = param / 100.
                    if( len(v) == 2 ):
                        v.append( param )
                    else:
                        v[2] = param
                    break
                except:
                    pass

        gaitConfig = []
        for k, v in self.dFootGaitConfig.iteritems():
            try:
                gaitConfig.append( [k, v[2]] )
            except: # if some value added in gaitConfig but not in parameters
                pass
        # active walk process
        self.motion.walkTo(self.getParameter("Distance X (m)"), self.getParameter("Distance Y (m)"), self.getParameter("Theta (rad)"), gaitConfig)
         # The walk is finished so output
        self.onStopped() #~ activate output of the box

    def onInput_onStop(self):
        self.onUnload()]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                            <Parameter name="Distance X (m)" inherits_from_parent="1" content_type="2" value="0.2" default_value="0.2" min="-2" max="2" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="5" />
                                            <Parameter name="Distance Y (m)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-2" max="2" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="6" />
                                            <Parameter name="Theta (rad)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-3.14" max="3.14" tooltip="The orientation in radians for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="7" />
                                            <Parameter name="Left arm enabled" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="Activate left arm motion during the walk to make it more realistic." id="8" />
                                            <Parameter name="Right arm enabled" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="Activate right arm motion during the walk to make it more realistic." id="9" />
                                            <Parameter name="Stop walk when foot contact is lost" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="If this option is activated, NAO stops walking when he loses foot contact with&#x0A;the ground. Else, he just keeps walking." id="10" />
                                            <Parameter name="MaxStepX (m)" inherits_from_parent="0" content_type="2" value="0.04" default_value="0.04" min="0.001" max="0.06" tooltip="Maximum length of forward/backward step." id="11" />
                                            <Parameter name="MaxStepY (m)" inherits_from_parent="0" content_type="2" value="0.14" default_value="0.14" min="0.101" max="0.16" tooltip="Maximum length of lateral step." id="12" />
                                            <Parameter name="MaxStepTheta (rad)" inherits_from_parent="0" content_type="2" value="0.349065" default_value="0.349065" min="0.001" max="0.523598" tooltip="Maximum length of rotational step." id="13" />
                                            <Parameter name="MaxStepFrequency (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Maximum step frequency." id="14" />
                                            <Parameter name="StepHeight (m)" inherits_from_parent="0" content_type="2" value="0.02" default_value="0.02" min="0.005" max="0.04" tooltip="Height of the step i.e. how high NAO put his feet up during the walk." id="15" />
                                            <Parameter name="TorsoWx (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-0.122173" max="0.122173" tooltip="Lateral angle of the torso during the walk.&#x0A;&#x0A;Note: A positive value means that NAO will be tilted to the right. A negative&#x0A;value means he is tilted to the left." id="16" />
                                            <Parameter name="TorsoWy (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-0.122173" max="0.122173" tooltip="Angle of the torso toward forward/backward during the walk.&#x0A;&#x0A;Note: A positive value means that NAO will be inclined forward. A negative&#x0A;value means he is inclined backward." id="17" />
                                            <Resource name="Legs" type="Lock" timeout="0" />
                                          </Box>
                                          <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="2" />
                                          <Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" />
                                        </Diagram>
                                      </BehaviorKeyframe>
                                    </BehaviorLayer>
                                  </Timeline>
                                  <Resource name="Legs" type="Lock" timeout="0" />
                                </Box>
                                <Box name="Init" id="2" localization="8" tooltip='Robot will go to the position &quot;Init&#x0A;Position description : Nao is ready to do anything from this position !&#x0A;' x="981" y="152">
                                  <bitmap>media/images/positions/Pos_init.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="20">
                                    <ActuatorList model="nao">
                                      <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-60" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="60" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-25" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="40" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-25" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="40" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                </Box>
                                <Box name="Walk To" id="4" localization="8" tooltip="Make NAO walk to a configured point relative to its current location." x="66" y="389">
                                  <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #~ self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        self.onStopped()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                  <Parameter name="Distance X (m)" inherits_from_parent="0" content_type="2" value="-0.1" default_value="0.2" min="-2" max="2" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="5" />
                                  <Parameter name="Distance Y (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-2" max="2" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="6" />
                                  <Parameter name="Theta (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-3.14" max="3.14" tooltip="The orientation in radians for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="7" />
                                  <Parameter name="Left arm enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate left arm motion during the walk to make it more realistic." id="8" />
                                  <Parameter name="Right arm enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate right arm motion during the walk to make it more realistic." id="9" />
                                  <Parameter name="Stop walk when foot contact is lost" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If this option is activated, NAO stops walking when he loses foot contact with&#x0A;the ground. Else, he just keeps walking." id="10" />
                                  <Timeline enable="0">
                                    <BehaviorLayer name="behavior_layer1">
                                      <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                          <Box name="Walk To Advanced" id="3" localization="8" tooltip="Make NAO walk to a configured point relative to his current location with specific gait parameters." x="195" y="73">
                                            <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.motion = ALProxy("ALMotion")
        footGaitConfigMin = self.motion.getFootGaitConfig("Min")
        footGaitConfigMax = self.motion.getFootGaitConfig("Max")
        self.dFootGaitConfig = {}
        for i in range(len(footGaitConfigMin)):
            # [0] = key ("MaxStepX" for ex)
            # [1] = min
            # [2] = max
            self.dFootGaitConfig[footGaitConfigMin[i][0]] = [footGaitConfigMin[i][1], footGaitConfigMax[i][1]]

    def onLoad(self):
        pass

    def onUnload(self):
        self.motion.setWalkTargetVelocity(0.0, 0.0, 0.0, 0.0)

    def onInput_onStart(self):
        # send walk configuration to ALMotion
        self.motion.setWalkArmsEnable(self.getParameter("Left arm enabled"), self.getParameter("Right arm enabled"))
        self.motion.setMotionConfig([["ENABLE_FOOT_CONTACT_PROTECTION",self.getParameter("Stop walk when foot contact is lost")]])
        for k, v in self.dFootGaitConfig.iteritems():
            for unit in ["m", "rad", "%"]:
                try: # try for each unit and do nothing if value in gaitConfig but not in parameters
                    param = self.getParameter( str(k) + " (" + unit + ")" )
                    if( unit == "%" ):
                        param = param / 100.
                    if( len(v) == 2 ):
                        v.append( param )
                    else:
                        v[2] = param
                    break
                except:
                    pass

        gaitConfig = []
        for k, v in self.dFootGaitConfig.iteritems():
            try:
                gaitConfig.append( [k, v[2]] )
            except: # if some value added in gaitConfig but not in parameters
                pass
        # active walk process
        self.motion.walkTo(self.getParameter("Distance X (m)"), self.getParameter("Distance Y (m)"), self.getParameter("Theta (rad)"), gaitConfig)
         # The walk is finished so output
        self.onStopped() #~ activate output of the box

    def onInput_onStop(self):
        self.onUnload()]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                            <Parameter name="Distance X (m)" inherits_from_parent="1" content_type="2" value="0.2" default_value="0.2" min="-2" max="2" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="5" />
                                            <Parameter name="Distance Y (m)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-2" max="2" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="6" />
                                            <Parameter name="Theta (rad)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-3.14" max="3.14" tooltip="The orientation in radians for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="7" />
                                            <Parameter name="Left arm enabled" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="Activate left arm motion during the walk to make it more realistic." id="8" />
                                            <Parameter name="Right arm enabled" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="Activate right arm motion during the walk to make it more realistic." id="9" />
                                            <Parameter name="Stop walk when foot contact is lost" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="If this option is activated, NAO stops walking when he loses foot contact with&#x0A;the ground. Else, he just keeps walking." id="10" />
                                            <Parameter name="MaxStepX (m)" inherits_from_parent="0" content_type="2" value="0.04" default_value="0.04" min="0.001" max="0.06" tooltip="Maximum length of forward/backward step." id="11" />
                                            <Parameter name="MaxStepY (m)" inherits_from_parent="0" content_type="2" value="0.14" default_value="0.14" min="0.101" max="0.16" tooltip="Maximum length of lateral step." id="12" />
                                            <Parameter name="MaxStepTheta (rad)" inherits_from_parent="0" content_type="2" value="0.349065" default_value="0.349065" min="0.001" max="0.523598" tooltip="Maximum length of rotational step." id="13" />
                                            <Parameter name="MaxStepFrequency (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Maximum step frequency." id="14" />
                                            <Parameter name="StepHeight (m)" inherits_from_parent="0" content_type="2" value="0.02" default_value="0.02" min="0.005" max="0.04" tooltip="Height of the step i.e. how high NAO put his feet up during the walk." id="15" />
                                            <Parameter name="TorsoWx (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-0.122173" max="0.122173" tooltip="Lateral angle of the torso during the walk.&#x0A;&#x0A;Note: A positive value means that NAO will be tilted to the right. A negative&#x0A;value means he is tilted to the left." id="16" />
                                            <Parameter name="TorsoWy (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-0.122173" max="0.122173" tooltip="Angle of the torso toward forward/backward during the walk.&#x0A;&#x0A;Note: A positive value means that NAO will be inclined forward. A negative&#x0A;value means he is inclined backward." id="17" />
                                            <Resource name="Legs" type="Lock" timeout="0" />
                                          </Box>
                                          <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="2" />
                                          <Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" />
                                        </Diagram>
                                      </BehaviorKeyframe>
                                    </BehaviorLayer>
                                  </Timeline>
                                  <Resource name="Legs" type="Lock" timeout="0" />
                                </Box>
                                <Box name="Pattern Images" id="5" localization="8" tooltip="Enter tooltip here" x="207" y="395">
                                  <bitmap>media/images/box/box-diagram.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import Image
import ImageDraw
import time
import os,sys
import cv2 as cv

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):

        flag = self.showNaoImage()
        if (flag == 1):
            global imNum
            imNum = imNum+1
            self.detectionGood()
            self.onUnload()
            #self.onStopped()
        else:
            self.detectionFailure()
            self.onUnload()
            #self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        #self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass

    def sayWord(self,s):
        ttsProxy=ALProxy("ALTextToSpeech")
        ttsProxy.say(s)


    def showNaoImage(self):

        camProxy = ALProxy("ALVideoDevice")
        resolution = 2    # VGA
        colorSpace = 11   # RGB
        found = 0

        videoClient = camProxy.subscribe("python_client", resolution, colorSpace, 5)

        t0 = time.time()

        naoImage = camProxy.getImageRemote(videoClient)

        # Get the image size and pixel array.
        imageWidth = naoImage[0]
        imageHeight = naoImage[1]
        array = naoImage[6]

        # Create a PIL Image from our pixel array.
        im = Image.fromstring("RGB", (imageWidth, imageHeight), array)

        # Create ipl Image to use with opencv
        cv_img = cv.CreateImageHeader(im.size, cv.IPL_DEPTH_8U, 3)  # RGB image
        cv.SetData(cv_img, im.tostring(), im.size[0]*3)
        cv.CvtColor(cv_img, cv_img, cv.CV_RGB2BGR)

        gray_image=cv.CreateImage(cv.GetSize(cv_img),8,1)
        cv.CvtColor(cv_img,gray_image,cv.CV_BGR2GRAY)


        (found,corners)=cv.FindChessboardCorners(gray_image,(7,5),cv.CV_CALIB_CB_ADAPTIVE_THRESH| cv.CV_CALIB_CB_FILTER_QUADS)
        if found == 1:

            self.sayWord("Corners Detected")

            self.sayWord("Saving Image")

        else:

            self.sayWord("Corners can not be detected")

            flag = 0
            camProxy.unsubscribe(videoClient)
            return flag


        t1 = time.time()

        # Time the image transfer.
        self.logger.info("acquisition delay "+str(t1 - t0))

        camProxy.unsubscribe(videoClient)


        self.logger.info(str(imNum))

        # Save the image.
        imName = "image"+str(imNum)+".jpg"
        im.save("/home/nao/SavedImages/"+imName)
        self.sayWord("Image"+str(imNum)+"Saved")

        flag = 1

        return flag]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="detectionFailure" type="1" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                  <Output name="detectionGood" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                </Box>
                                <Box name="Init" id="6" localization="8" tooltip='Robot will go to the position &quot;Init&#x0A;Position description : Nao is ready to do anything from this position !&#x0A;' x="683" y="217">
                                  <bitmap>media/images/positions/Pos_init.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="20">
                                    <ActuatorList model="nao">
                                      <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-60" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="60" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-25" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="40" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-25" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="40" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                </Box>
                                <Box name="Walk To" id="7" localization="8" tooltip="Make NAO walk to a configured point relative to its current location." x="517" y="15">
                                  <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #~ self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        self.onStopped()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                  <Parameter name="Distance X (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0.2" min="-2" max="2" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="5" />
                                  <Parameter name="Distance Y (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-2" max="2" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="6" />
                                  <Parameter name="Theta (rad)" inherits_from_parent="0" content_type="2" value="0.4" default_value="0" min="-3.14" max="3.14" tooltip="The orientation in radians for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="7" />
                                  <Parameter name="Left arm enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate left arm motion during the walk to make it more realistic." id="8" />
                                  <Parameter name="Right arm enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate right arm motion during the walk to make it more realistic." id="9" />
                                  <Parameter name="Stop walk when foot contact is lost" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If this option is activated, NAO stops walking when he loses foot contact with&#x0A;the ground. Else, he just keeps walking." id="10" />
                                  <Timeline enable="0">
                                    <BehaviorLayer name="behavior_layer1">
                                      <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                          <Box name="Walk To Advanced" id="3" localization="8" tooltip="Make NAO walk to a configured point relative to his current location with specific gait parameters." x="195" y="73">
                                            <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.motion = ALProxy("ALMotion")
        footGaitConfigMin = self.motion.getFootGaitConfig("Min")
        footGaitConfigMax = self.motion.getFootGaitConfig("Max")
        self.dFootGaitConfig = {}
        for i in range(len(footGaitConfigMin)):
            # [0] = key ("MaxStepX" for ex)
            # [1] = min
            # [2] = max
            self.dFootGaitConfig[footGaitConfigMin[i][0]] = [footGaitConfigMin[i][1], footGaitConfigMax[i][1]]

    def onLoad(self):
        pass

    def onUnload(self):
        self.motion.setWalkTargetVelocity(0.0, 0.0, 0.0, 0.0)

    def onInput_onStart(self):
        # send walk configuration to ALMotion
        self.motion.setWalkArmsEnable(self.getParameter("Left arm enabled"), self.getParameter("Right arm enabled"))
        self.motion.setMotionConfig([["ENABLE_FOOT_CONTACT_PROTECTION",self.getParameter("Stop walk when foot contact is lost")]])
        for k, v in self.dFootGaitConfig.iteritems():
            for unit in ["m", "rad", "%"]:
                try: # try for each unit and do nothing if value in gaitConfig but not in parameters
                    param = self.getParameter( str(k) + " (" + unit + ")" )
                    if( unit == "%" ):
                        param = param / 100.
                    if( len(v) == 2 ):
                        v.append( param )
                    else:
                        v[2] = param
                    break
                except:
                    pass

        gaitConfig = []
        for k, v in self.dFootGaitConfig.iteritems():
            try:
                gaitConfig.append( [k, v[2]] )
            except: # if some value added in gaitConfig but not in parameters
                pass
        # active walk process
        self.motion.walkTo(self.getParameter("Distance X (m)"), self.getParameter("Distance Y (m)"), self.getParameter("Theta (rad)"), gaitConfig)
         # The walk is finished so output
        self.onStopped() #~ activate output of the box

    def onInput_onStop(self):
        self.onUnload()]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                            <Parameter name="Distance X (m)" inherits_from_parent="1" content_type="2" value="0.2" default_value="0.2" min="-2" max="2" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="5" />
                                            <Parameter name="Distance Y (m)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-2" max="2" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="6" />
                                            <Parameter name="Theta (rad)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-3.14" max="3.14" tooltip="The orientation in radians for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="7" />
                                            <Parameter name="Left arm enabled" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="Activate left arm motion during the walk to make it more realistic." id="8" />
                                            <Parameter name="Right arm enabled" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="Activate right arm motion during the walk to make it more realistic." id="9" />
                                            <Parameter name="Stop walk when foot contact is lost" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="If this option is activated, NAO stops walking when he loses foot contact with&#x0A;the ground. Else, he just keeps walking." id="10" />
                                            <Parameter name="MaxStepX (m)" inherits_from_parent="0" content_type="2" value="0.04" default_value="0.04" min="0.001" max="0.06" tooltip="Maximum length of forward/backward step." id="11" />
                                            <Parameter name="MaxStepY (m)" inherits_from_parent="0" content_type="2" value="0.14" default_value="0.14" min="0.101" max="0.16" tooltip="Maximum length of lateral step." id="12" />
                                            <Parameter name="MaxStepTheta (rad)" inherits_from_parent="0" content_type="2" value="0.349065" default_value="0.349065" min="0.001" max="0.523598" tooltip="Maximum length of rotational step." id="13" />
                                            <Parameter name="MaxStepFrequency (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Maximum step frequency." id="14" />
                                            <Parameter name="StepHeight (m)" inherits_from_parent="0" content_type="2" value="0.02" default_value="0.02" min="0.005" max="0.04" tooltip="Height of the step i.e. how high NAO put his feet up during the walk." id="15" />
                                            <Parameter name="TorsoWx (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-0.122173" max="0.122173" tooltip="Lateral angle of the torso during the walk.&#x0A;&#x0A;Note: A positive value means that NAO will be tilted to the right. A negative&#x0A;value means he is tilted to the left." id="16" />
                                            <Parameter name="TorsoWy (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-0.122173" max="0.122173" tooltip="Angle of the torso toward forward/backward during the walk.&#x0A;&#x0A;Note: A positive value means that NAO will be inclined forward. A negative&#x0A;value means he is inclined backward." id="17" />
                                            <Resource name="Legs" type="Lock" timeout="0" />
                                          </Box>
                                          <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="2" />
                                          <Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" />
                                        </Diagram>
                                      </BehaviorKeyframe>
                                    </BehaviorLayer>
                                  </Timeline>
                                  <Resource name="Legs" type="Lock" timeout="0" />
                                </Box>
                                <Box name="Walk To" id="8" localization="8" tooltip="Make NAO walk to a configured point relative to its current location." x="866" y="80">
                                  <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #~ self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        self.onStopped()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                  <Parameter name="Distance X (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0.2" min="-2" max="2" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="5" />
                                  <Parameter name="Distance Y (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-2" max="2" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="6" />
                                  <Parameter name="Theta (rad)" inherits_from_parent="0" content_type="2" value="-0.4" default_value="0" min="-3.14" max="3.14" tooltip="The orientation in radians for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="7" />
                                  <Parameter name="Left arm enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate left arm motion during the walk to make it more realistic." id="8" />
                                  <Parameter name="Right arm enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate right arm motion during the walk to make it more realistic." id="9" />
                                  <Parameter name="Stop walk when foot contact is lost" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If this option is activated, NAO stops walking when he loses foot contact with&#x0A;the ground. Else, he just keeps walking." id="10" />
                                  <Timeline enable="0">
                                    <BehaviorLayer name="behavior_layer1">
                                      <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                          <Box name="Walk To Advanced" id="3" localization="8" tooltip="Make NAO walk to a configured point relative to his current location with specific gait parameters." x="195" y="73">
                                            <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.motion = ALProxy("ALMotion")
        footGaitConfigMin = self.motion.getFootGaitConfig("Min")
        footGaitConfigMax = self.motion.getFootGaitConfig("Max")
        self.dFootGaitConfig = {}
        for i in range(len(footGaitConfigMin)):
            # [0] = key ("MaxStepX" for ex)
            # [1] = min
            # [2] = max
            self.dFootGaitConfig[footGaitConfigMin[i][0]] = [footGaitConfigMin[i][1], footGaitConfigMax[i][1]]

    def onLoad(self):
        pass

    def onUnload(self):
        self.motion.setWalkTargetVelocity(0.0, 0.0, 0.0, 0.0)

    def onInput_onStart(self):
        # send walk configuration to ALMotion
        self.motion.setWalkArmsEnable(self.getParameter("Left arm enabled"), self.getParameter("Right arm enabled"))
        self.motion.setMotionConfig([["ENABLE_FOOT_CONTACT_PROTECTION",self.getParameter("Stop walk when foot contact is lost")]])
        for k, v in self.dFootGaitConfig.iteritems():
            for unit in ["m", "rad", "%"]:
                try: # try for each unit and do nothing if value in gaitConfig but not in parameters
                    param = self.getParameter( str(k) + " (" + unit + ")" )
                    if( unit == "%" ):
                        param = param / 100.
                    if( len(v) == 2 ):
                        v.append( param )
                    else:
                        v[2] = param
                    break
                except:
                    pass

        gaitConfig = []
        for k, v in self.dFootGaitConfig.iteritems():
            try:
                gaitConfig.append( [k, v[2]] )
            except: # if some value added in gaitConfig but not in parameters
                pass
        # active walk process
        self.motion.walkTo(self.getParameter("Distance X (m)"), self.getParameter("Distance Y (m)"), self.getParameter("Theta (rad)"), gaitConfig)
         # The walk is finished so output
        self.onStopped() #~ activate output of the box

    def onInput_onStop(self):
        self.onUnload()]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                            <Parameter name="Distance X (m)" inherits_from_parent="1" content_type="2" value="0.2" default_value="0.2" min="-2" max="2" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="5" />
                                            <Parameter name="Distance Y (m)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-2" max="2" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="6" />
                                            <Parameter name="Theta (rad)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-3.14" max="3.14" tooltip="The orientation in radians for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="7" />
                                            <Parameter name="Left arm enabled" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="Activate left arm motion during the walk to make it more realistic." id="8" />
                                            <Parameter name="Right arm enabled" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="Activate right arm motion during the walk to make it more realistic." id="9" />
                                            <Parameter name="Stop walk when foot contact is lost" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="If this option is activated, NAO stops walking when he loses foot contact with&#x0A;the ground. Else, he just keeps walking." id="10" />
                                            <Parameter name="MaxStepX (m)" inherits_from_parent="0" content_type="2" value="0.04" default_value="0.04" min="0.001" max="0.06" tooltip="Maximum length of forward/backward step." id="11" />
                                            <Parameter name="MaxStepY (m)" inherits_from_parent="0" content_type="2" value="0.14" default_value="0.14" min="0.101" max="0.16" tooltip="Maximum length of lateral step." id="12" />
                                            <Parameter name="MaxStepTheta (rad)" inherits_from_parent="0" content_type="2" value="0.349065" default_value="0.349065" min="0.001" max="0.523598" tooltip="Maximum length of rotational step." id="13" />
                                            <Parameter name="MaxStepFrequency (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Maximum step frequency." id="14" />
                                            <Parameter name="StepHeight (m)" inherits_from_parent="0" content_type="2" value="0.02" default_value="0.02" min="0.005" max="0.04" tooltip="Height of the step i.e. how high NAO put his feet up during the walk." id="15" />
                                            <Parameter name="TorsoWx (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-0.122173" max="0.122173" tooltip="Lateral angle of the torso during the walk.&#x0A;&#x0A;Note: A positive value means that NAO will be tilted to the right. A negative&#x0A;value means he is tilted to the left." id="16" />
                                            <Parameter name="TorsoWy (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-0.122173" max="0.122173" tooltip="Angle of the torso toward forward/backward during the walk.&#x0A;&#x0A;Note: A positive value means that NAO will be inclined forward. A negative&#x0A;value means he is inclined backward." id="17" />
                                            <Resource name="Legs" type="Lock" timeout="0" />
                                          </Box>
                                          <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="2" />
                                          <Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" />
                                        </Diagram>
                                      </BehaviorKeyframe>
                                    </BehaviorLayer>
                                  </Timeline>
                                  <Resource name="Legs" type="Lock" timeout="0" />
                                </Box>
                                <Box name="left" id="9" localization="8" tooltip='Robot will go to the position &quot;left&#x0A;Position description : &#x0A;' x="332" y="325">
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="20">
                                    <ActuatorList model="nao">
                                      <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                        <Key frame="20" value="26.0135" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-0.969217" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="83.3189" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="8.96255" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-52.5617" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-21.7948" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-62.4934" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                        <Key frame="20" value="0.2112" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="90.3551" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-14.0651" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="58.7093" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="37.9716" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="42.1856" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                        <Key frame="20" value="0.258" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-13.3571" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="2.46338" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="12.2194" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-4.13332" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="3.24959" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-2.81013" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-8.25942" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="11.5114" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-5.29" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="5.89115" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="6.77007" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                </Box>
                                <Box name="Pattern Images" id="10" localization="8" tooltip="Enter tooltip here" x="448" y="387">
                                  <bitmap>media/images/box/box-diagram.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import Image
import ImageDraw
import time
import os,sys
import cv2 as cv

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):

        flag = self.showNaoImage()
        if (flag == 1):
            global imNum
            imNum = imNum+1
            self.detectionGood()
            self.onUnload()
            #self.onStopped()
        else:
            self.detectionFailure()
            self.onUnload()
            #self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        #self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass

    def sayWord(self,s):
        ttsProxy=ALProxy("ALTextToSpeech")
        ttsProxy.say(s)


    def showNaoImage(self):

        camProxy = ALProxy("ALVideoDevice")
        resolution = 2    # VGA
        colorSpace = 11   # RGB
        found = 0

        videoClient = camProxy.subscribe("python_client", resolution, colorSpace, 5)

        t0 = time.time()

        naoImage = camProxy.getImageRemote(videoClient)

        # Get the image size and pixel array.
        imageWidth = naoImage[0]
        imageHeight = naoImage[1]
        array = naoImage[6]

        # Create a PIL Image from our pixel array.
        im = Image.fromstring("RGB", (imageWidth, imageHeight), array)

        # Create ipl Image to use with opencv
        cv_img = cv.CreateImageHeader(im.size, cv.IPL_DEPTH_8U, 3)  # RGB image
        cv.SetData(cv_img, im.tostring(), im.size[0]*3)
        cv.CvtColor(cv_img, cv_img, cv.CV_RGB2BGR)

        gray_image=cv.CreateImage(cv.GetSize(cv_img),8,1)
        cv.CvtColor(cv_img,gray_image,cv.CV_BGR2GRAY)


        (found,corners)=cv.FindChessboardCorners(gray_image,(7,5),cv.CV_CALIB_CB_ADAPTIVE_THRESH| cv.CV_CALIB_CB_FILTER_QUADS)
        if found == 1:

            self.sayWord("Corners Detected")

            self.sayWord("Saving Image")

        else:

            self.sayWord("Corners can not be detected")

            flag = 0
            camProxy.unsubscribe(videoClient)
            return flag


        t1 = time.time()

        # Time the image transfer.
        self.logger.info("acquisition delay "+str(t1 - t0))

        camProxy.unsubscribe(videoClient)


        self.logger.info(str(imNum))

        # Save the image.
        imName = "image"+str(imNum)+".jpg"
        im.save("/home/nao/SavedImages/"+imName)
        self.sayWord("Image"+str(imNum)+"Saved")

        flag = 1

        return flag]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="detectionFailure" type="1" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                  <Output name="detectionGood" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                </Box>
                                <Box name="right" id="13" localization="8" tooltip='Robot will go to the position &quot;right&#x0A;Position description : &#x0A;' x="604" y="492">
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="20">
                                    <ActuatorList model="nao">
                                      <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-32.9618" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-1.145" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="83.4068" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="8.96255" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-52.5617" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-21.7948" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-62.4934" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                        <Key frame="20" value="0.2108" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="90.3551" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-14.0651" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="58.7093" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="37.8837" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="42.1856" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                        <Key frame="20" value="0.258" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-13.445" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="2.46338" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="12.2194" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-4.13332" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="2.89802" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-2.81013" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-8.25942" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="11.1598" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-5.29" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="5.53958" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="6.77007" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                </Box>
                                <Box name="Init" id="17" localization="8" tooltip='Robot will go to the position &quot;Init&#x0A;Position description : Nao is ready to do anything from this position !&#x0A;' x="602" y="392">
                                  <bitmap>media/images/positions/Pos_init.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="20">
                                    <ActuatorList model="nao">
                                      <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-60" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="60" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-25" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="40" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-25" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="40" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                </Box>
                                <Box name="Pattern Images" id="18" localization="8" tooltip="Enter tooltip here" x="809" y="472">
                                  <bitmap>media/images/box/box-diagram.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import Image
import ImageDraw
import time
import os,sys
import cv2 as cv

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):

        flag = self.showNaoImage()
        if (flag == 1):
            global imNum
            imNum = imNum+1
            self.detectionGood()
            self.onUnload()
            #self.onStopped()
        else:
            self.detectionFailure()
            self.onUnload()
            #self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        #self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass

    def sayWord(self,s):
        ttsProxy=ALProxy("ALTextToSpeech")
        ttsProxy.say(s)


    def showNaoImage(self):

        camProxy = ALProxy("ALVideoDevice")
        resolution = 2    # VGA
        colorSpace = 11   # RGB
        found = 0

        videoClient = camProxy.subscribe("python_client", resolution, colorSpace, 5)

        t0 = time.time()

        naoImage = camProxy.getImageRemote(videoClient)

        # Get the image size and pixel array.
        imageWidth = naoImage[0]
        imageHeight = naoImage[1]
        array = naoImage[6]

        # Create a PIL Image from our pixel array.
        im = Image.fromstring("RGB", (imageWidth, imageHeight), array)

        # Create ipl Image to use with opencv
        cv_img = cv.CreateImageHeader(im.size, cv.IPL_DEPTH_8U, 3)  # RGB image
        cv.SetData(cv_img, im.tostring(), im.size[0]*3)
        cv.CvtColor(cv_img, cv_img, cv.CV_RGB2BGR)

        gray_image=cv.CreateImage(cv.GetSize(cv_img),8,1)
        cv.CvtColor(cv_img,gray_image,cv.CV_BGR2GRAY)


        (found,corners)=cv.FindChessboardCorners(gray_image,(7,5),cv.CV_CALIB_CB_ADAPTIVE_THRESH| cv.CV_CALIB_CB_FILTER_QUADS)
        if found == 1:

            self.sayWord("Corners Detected")

            self.sayWord("Saving Image")

        else:

            self.sayWord("Corners can not be detected")

            flag = 0
            camProxy.unsubscribe(videoClient)
            return flag


        t1 = time.time()

        # Time the image transfer.
        self.logger.info("acquisition delay "+str(t1 - t0))

        camProxy.unsubscribe(videoClient)


        self.logger.info(str(imNum))

        # Save the image.
        imName = "image"+str(imNum)+".jpg"
        im.save("/home/nao/SavedImages/"+imName)
        self.sayWord("Image"+str(imNum)+"Saved")

        flag = 1

        return flag]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="detectionFailure" type="1" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                  <Output name="detectionGood" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                </Box>
                                <Link inputowner="12" indexofinput="2" outputowner="11" indexofoutput="4" />
                                <Link inputowner="14" indexofinput="2" outputowner="12" indexofoutput="4" />
                                <Link inputowner="15" indexofinput="2" outputowner="14" indexofoutput="4" />
                                <Link inputowner="16" indexofinput="2" outputowner="15" indexofoutput="4" />
                                <Link inputowner="11" indexofinput="2" outputowner="0" indexofoutput="2" />
                                <Link inputowner="0" indexofinput="3" outputowner="11" indexofoutput="5" />
                                <Link inputowner="26" indexofinput="2" outputowner="14" indexofoutput="5" />
                                <Link inputowner="1" indexofinput="2" outputowner="16" indexofoutput="5" />
                                <Link inputowner="11" indexofinput="2" outputowner="3" indexofoutput="4" />
                                <Link inputowner="2" indexofinput="2" outputowner="16" indexofoutput="4" />
                                <Link inputowner="4" indexofinput="2" outputowner="2" indexofoutput="4" />
                                <Link inputowner="5" indexofinput="2" outputowner="4" indexofoutput="4" />
                                <Link inputowner="6" indexofinput="2" outputowner="5" indexofoutput="5" />
                                <Link inputowner="0" indexofinput="3" outputowner="6" indexofoutput="4" />
                                <Link inputowner="7" indexofinput="2" outputowner="26" indexofoutput="4" />
                                <Link inputowner="0" indexofinput="3" outputowner="7" indexofoutput="4" />
                                <Link inputowner="8" indexofinput="2" outputowner="1" indexofoutput="4" />
                                <Link inputowner="0" indexofinput="3" outputowner="8" indexofoutput="4" />
                                <Link inputowner="9" indexofinput="2" outputowner="5" indexofoutput="4" />
                                <Link inputowner="13" indexofinput="2" outputowner="10" indexofoutput="4" />
                                <Link inputowner="17" indexofinput="2" outputowner="10" indexofoutput="5" />
                                <Link inputowner="10" indexofinput="2" outputowner="9" indexofoutput="4" />
                                <Link inputowner="7" indexofinput="2" outputowner="17" indexofoutput="4" />
                                <Link inputowner="18" indexofinput="2" outputowner="13" indexofoutput="4" />
                                <Link inputowner="3" indexofinput="2" outputowner="18" indexofoutput="4" />
                                <Link inputowner="1" indexofinput="2" outputowner="18" indexofoutput="5" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                      </Box>
                      <Box name="PosesForImages" id="5" localization="8" tooltip="Normal Pose/HeadLeft/HeadRight" x="419" y="17">
                        <bitmap>media/images/box/box-diagram.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="Pattern Images_onStart" type="0" type_size="1" nature="2" inner="0" tooltip="This input has been automatically generated&#x0A;by converting several boxes into a single box." id="2" />
                        <Output name="PatternImages_detectionGood" type="0" type_size="1" nature="2" inner="0" tooltip="This output has been automatically generated&#x0A;by converting several boxes into a single box." id="3" />
                        <Timeline enable="0">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram scale="47.1937">
                                <Box name="Pattern Images" id="11" localization="8" tooltip="Enter tooltip here" x="110" y="180">
                                  <bitmap>media/images/box/box-diagram.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import Image
import ImageDraw
import time
import os,sys
import cv2 as cv

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):

        flag = self.showNaoImage()
        if (flag == 1):
            global imNum
            imNum = imNum+1
            self.detectionGood()
            self.onUnload()
            #self.onStopped()
        else:
            self.detectionFailure()
            self.onUnload()
            #self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        #self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass

    def sayWord(self,s):
        ttsProxy=ALProxy("ALTextToSpeech")
        ttsProxy.say(s)


    def showNaoImage(self):

        camProxy = ALProxy("ALVideoDevice")
        resolution = 2    # VGA
        colorSpace = 11   # RGB
        found = 0

        videoClient = camProxy.subscribe("python_client", resolution, colorSpace, 5)

        t0 = time.time()

        naoImage = camProxy.getImageRemote(videoClient)

        # Get the image size and pixel array.
        imageWidth = naoImage[0]
        imageHeight = naoImage[1]
        array = naoImage[6]

        # Create a PIL Image from our pixel array.
        im = Image.fromstring("RGB", (imageWidth, imageHeight), array)

        # Create ipl Image to use with opencv
        cv_img = cv.CreateImageHeader(im.size, cv.IPL_DEPTH_8U, 3)  # RGB image
        cv.SetData(cv_img, im.tostring(), im.size[0]*3)
        cv.CvtColor(cv_img, cv_img, cv.CV_RGB2BGR)

        gray_image=cv.CreateImage(cv.GetSize(cv_img),8,1)
        cv.CvtColor(cv_img,gray_image,cv.CV_BGR2GRAY)


        (found,corners)=cv.FindChessboardCorners(gray_image,(7,5),cv.CV_CALIB_CB_ADAPTIVE_THRESH| cv.CV_CALIB_CB_FILTER_QUADS)
        if found == 1:

            self.sayWord("Corners Detected")

            self.sayWord("Saving Image")

        else:

            self.sayWord("Corners can not be detected")

            flag = 0
            camProxy.unsubscribe(videoClient)
            return flag


        t1 = time.time()

        # Time the image transfer.
        self.logger.info("acquisition delay "+str(t1 - t0))

        camProxy.unsubscribe(videoClient)


        self.logger.info(str(imNum))

        # Save the image.
        imName = "image"+str(imNum)+".jpg"
        im.save("/home/nao/SavedImages/"+imName)
        self.sayWord("Image"+str(imNum)+"Saved")

        flag = 1

        return flag]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="detectionFailure" type="1" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                  <Output name="detectionGood" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                </Box>
                                <Box name="left" id="12" localization="8" tooltip='Robot will go to the position &quot;left&#x0A;Position description : &#x0A;' x="77" y="29">
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="20">
                                    <ActuatorList model="nao">
                                      <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                        <Key frame="20" value="26.0135" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-0.969217" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="83.3189" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="8.96255" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-52.5617" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-21.7948" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-62.4934" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                        <Key frame="20" value="0.2112" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="90.3551" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-14.0651" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="58.7093" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="37.9716" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="42.1856" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                        <Key frame="20" value="0.258" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-13.3571" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="2.46338" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="12.2194" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-4.13332" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="3.24959" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-2.81013" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-8.25942" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="11.5114" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-5.29" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="5.89115" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="6.77007" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                </Box>
                                <Box name="Pattern Images" id="14" localization="8" tooltip="Enter tooltip here" x="200" y="31">
                                  <bitmap>media/images/box/box-diagram.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import Image
import ImageDraw
import time
import os,sys
import cv2 as cv

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):

        flag = self.showNaoImage()
        if (flag == 1):
            global imNum
            imNum = imNum+1
            self.detectionGood()
            self.onUnload()
            #self.onStopped()
        else:
            self.detectionFailure()
            self.onUnload()
            #self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        #self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass

    def sayWord(self,s):
        ttsProxy=ALProxy("ALTextToSpeech")
        ttsProxy.say(s)


    def showNaoImage(self):

        camProxy = ALProxy("ALVideoDevice")
        resolution = 2    # VGA
        colorSpace = 11   # RGB
        found = 0

        videoClient = camProxy.subscribe("python_client", resolution, colorSpace, 5)

        t0 = time.time()

        naoImage = camProxy.getImageRemote(videoClient)

        # Get the image size and pixel array.
        imageWidth = naoImage[0]
        imageHeight = naoImage[1]
        array = naoImage[6]

        # Create a PIL Image from our pixel array.
        im = Image.fromstring("RGB", (imageWidth, imageHeight), array)

        # Create ipl Image to use with opencv
        cv_img = cv.CreateImageHeader(im.size, cv.IPL_DEPTH_8U, 3)  # RGB image
        cv.SetData(cv_img, im.tostring(), im.size[0]*3)
        cv.CvtColor(cv_img, cv_img, cv.CV_RGB2BGR)

        gray_image=cv.CreateImage(cv.GetSize(cv_img),8,1)
        cv.CvtColor(cv_img,gray_image,cv.CV_BGR2GRAY)


        (found,corners)=cv.FindChessboardCorners(gray_image,(7,5),cv.CV_CALIB_CB_ADAPTIVE_THRESH| cv.CV_CALIB_CB_FILTER_QUADS)
        if found == 1:

            self.sayWord("Corners Detected")

            self.sayWord("Saving Image")

        else:

            self.sayWord("Corners can not be detected")

            flag = 0
            camProxy.unsubscribe(videoClient)
            return flag


        t1 = time.time()

        # Time the image transfer.
        self.logger.info("acquisition delay "+str(t1 - t0))

        camProxy.unsubscribe(videoClient)


        self.logger.info(str(imNum))

        # Save the image.
        imName = "image"+str(imNum)+".jpg"
        im.save("/home/nao/SavedImages/"+imName)
        self.sayWord("Image"+str(imNum)+"Saved")

        flag = 1

        return flag]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="detectionFailure" type="1" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                  <Output name="detectionGood" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                </Box>
                                <Box name="right" id="15" localization="8" tooltip='Robot will go to the position &quot;right&#x0A;Position description : &#x0A;' x="370" y="113">
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="20">
                                    <ActuatorList model="nao">
                                      <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-32.9618" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-1.145" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="83.4068" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="8.96255" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-52.5617" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-21.7948" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-62.4934" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                        <Key frame="20" value="0.2108" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="90.3551" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-14.0651" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="58.7093" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="37.8837" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="42.1856" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                        <Key frame="20" value="0.258" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-13.445" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="2.46338" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="12.2194" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-4.13332" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="2.89802" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-2.81013" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-8.25942" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="11.1598" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-5.29" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="5.53958" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="6.77007" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                </Box>
                                <Box name="Pattern Images" id="16" localization="8" tooltip="Enter tooltip here" x="517" y="128">
                                  <bitmap>media/images/box/box-diagram.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import Image
import ImageDraw
import time
import os,sys
import cv2 as cv

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):

        flag = self.showNaoImage()
        if (flag == 1):
            global imNum
            imNum = imNum+1
            self.detectionGood()
            self.onUnload()
            #self.onStopped()
        else:
            self.detectionFailure()
            self.onUnload()
            #self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        #self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass

    def sayWord(self,s):
        ttsProxy=ALProxy("ALTextToSpeech")
        ttsProxy.say(s)


    def showNaoImage(self):

        camProxy = ALProxy("ALVideoDevice")
        resolution = 2    # VGA
        colorSpace = 11   # RGB
        found = 0

        videoClient = camProxy.subscribe("python_client", resolution, colorSpace, 5)

        t0 = time.time()

        naoImage = camProxy.getImageRemote(videoClient)

        # Get the image size and pixel array.
        imageWidth = naoImage[0]
        imageHeight = naoImage[1]
        array = naoImage[6]

        # Create a PIL Image from our pixel array.
        im = Image.fromstring("RGB", (imageWidth, imageHeight), array)

        # Create ipl Image to use with opencv
        cv_img = cv.CreateImageHeader(im.size, cv.IPL_DEPTH_8U, 3)  # RGB image
        cv.SetData(cv_img, im.tostring(), im.size[0]*3)
        cv.CvtColor(cv_img, cv_img, cv.CV_RGB2BGR)

        gray_image=cv.CreateImage(cv.GetSize(cv_img),8,1)
        cv.CvtColor(cv_img,gray_image,cv.CV_BGR2GRAY)


        (found,corners)=cv.FindChessboardCorners(gray_image,(7,5),cv.CV_CALIB_CB_ADAPTIVE_THRESH| cv.CV_CALIB_CB_FILTER_QUADS)
        if found == 1:

            self.sayWord("Corners Detected")

            self.sayWord("Saving Image")

        else:

            self.sayWord("Corners can not be detected")

            flag = 0
            camProxy.unsubscribe(videoClient)
            return flag


        t1 = time.time()

        # Time the image transfer.
        self.logger.info("acquisition delay "+str(t1 - t0))

        camProxy.unsubscribe(videoClient)


        self.logger.info(str(imNum))

        # Save the image.
        imName = "image"+str(imNum)+".jpg"
        im.save("/home/nao/SavedImages/"+imName)
        self.sayWord("Image"+str(imNum)+"Saved")

        flag = 1

        return flag]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="detectionFailure" type="1" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                  <Output name="detectionGood" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                </Box>
                                <Box name="Init" id="26" localization="8" tooltip='Robot will go to the position &quot;Init&#x0A;Position description : Nao is ready to do anything from this position !&#x0A;' x="368" y="13">
                                  <bitmap>media/images/positions/Pos_init.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="20">
                                    <ActuatorList model="nao">
                                      <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-60" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="60" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-25" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="40" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-25" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="40" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                </Box>
                                <Box name="Init" id="1" localization="8" tooltip='Robot will go to the position &quot;Init&#x0A;Position description : Nao is ready to do anything from this position !&#x0A;' x="715" y="51">
                                  <bitmap>media/images/positions/Pos_init.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="20">
                                    <ActuatorList model="nao">
                                      <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-60" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="60" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-25" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="40" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-25" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="40" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                </Box>
                                <Box name="Walk To" id="3" localization="8" tooltip="Make NAO walk to a configured point relative to its current location." x="1073" y="442">
                                  <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #~ self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        self.onStopped()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                  <Parameter name="Distance X (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0.2" min="-2" max="2" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="5" />
                                  <Parameter name="Distance Y (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-2" max="2" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="6" />
                                  <Parameter name="Theta (rad)" inherits_from_parent="0" content_type="2" value="1.3" default_value="0" min="-3.14" max="3.14" tooltip="The orientation in radians for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="7" />
                                  <Parameter name="Left arm enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate left arm motion during the walk to make it more realistic." id="8" />
                                  <Parameter name="Right arm enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate right arm motion during the walk to make it more realistic." id="9" />
                                  <Parameter name="Stop walk when foot contact is lost" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If this option is activated, NAO stops walking when he loses foot contact with&#x0A;the ground. Else, he just keeps walking." id="10" />
                                  <Timeline enable="0">
                                    <BehaviorLayer name="behavior_layer1">
                                      <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                          <Box name="Walk To Advanced" id="3" localization="8" tooltip="Make NAO walk to a configured point relative to his current location with specific gait parameters." x="195" y="73">
                                            <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.motion = ALProxy("ALMotion")
        footGaitConfigMin = self.motion.getFootGaitConfig("Min")
        footGaitConfigMax = self.motion.getFootGaitConfig("Max")
        self.dFootGaitConfig = {}
        for i in range(len(footGaitConfigMin)):
            # [0] = key ("MaxStepX" for ex)
            # [1] = min
            # [2] = max
            self.dFootGaitConfig[footGaitConfigMin[i][0]] = [footGaitConfigMin[i][1], footGaitConfigMax[i][1]]

    def onLoad(self):
        pass

    def onUnload(self):
        self.motion.setWalkTargetVelocity(0.0, 0.0, 0.0, 0.0)

    def onInput_onStart(self):
        # send walk configuration to ALMotion
        self.motion.setWalkArmsEnable(self.getParameter("Left arm enabled"), self.getParameter("Right arm enabled"))
        self.motion.setMotionConfig([["ENABLE_FOOT_CONTACT_PROTECTION",self.getParameter("Stop walk when foot contact is lost")]])
        for k, v in self.dFootGaitConfig.iteritems():
            for unit in ["m", "rad", "%"]:
                try: # try for each unit and do nothing if value in gaitConfig but not in parameters
                    param = self.getParameter( str(k) + " (" + unit + ")" )
                    if( unit == "%" ):
                        param = param / 100.
                    if( len(v) == 2 ):
                        v.append( param )
                    else:
                        v[2] = param
                    break
                except:
                    pass

        gaitConfig = []
        for k, v in self.dFootGaitConfig.iteritems():
            try:
                gaitConfig.append( [k, v[2]] )
            except: # if some value added in gaitConfig but not in parameters
                pass
        # active walk process
        self.motion.walkTo(self.getParameter("Distance X (m)"), self.getParameter("Distance Y (m)"), self.getParameter("Theta (rad)"), gaitConfig)
         # The walk is finished so output
        self.onStopped() #~ activate output of the box

    def onInput_onStop(self):
        self.onUnload()]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                            <Parameter name="Distance X (m)" inherits_from_parent="1" content_type="2" value="0.2" default_value="0.2" min="-2" max="2" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="5" />
                                            <Parameter name="Distance Y (m)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-2" max="2" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="6" />
                                            <Parameter name="Theta (rad)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-3.14" max="3.14" tooltip="The orientation in radians for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="7" />
                                            <Parameter name="Left arm enabled" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="Activate left arm motion during the walk to make it more realistic." id="8" />
                                            <Parameter name="Right arm enabled" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="Activate right arm motion during the walk to make it more realistic." id="9" />
                                            <Parameter name="Stop walk when foot contact is lost" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="If this option is activated, NAO stops walking when he loses foot contact with&#x0A;the ground. Else, he just keeps walking." id="10" />
                                            <Parameter name="MaxStepX (m)" inherits_from_parent="0" content_type="2" value="0.04" default_value="0.04" min="0.001" max="0.06" tooltip="Maximum length of forward/backward step." id="11" />
                                            <Parameter name="MaxStepY (m)" inherits_from_parent="0" content_type="2" value="0.14" default_value="0.14" min="0.101" max="0.16" tooltip="Maximum length of lateral step." id="12" />
                                            <Parameter name="MaxStepTheta (rad)" inherits_from_parent="0" content_type="2" value="0.349065" default_value="0.349065" min="0.001" max="0.523598" tooltip="Maximum length of rotational step." id="13" />
                                            <Parameter name="MaxStepFrequency (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Maximum step frequency." id="14" />
                                            <Parameter name="StepHeight (m)" inherits_from_parent="0" content_type="2" value="0.02" default_value="0.02" min="0.005" max="0.04" tooltip="Height of the step i.e. how high NAO put his feet up during the walk." id="15" />
                                            <Parameter name="TorsoWx (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-0.122173" max="0.122173" tooltip="Lateral angle of the torso during the walk.&#x0A;&#x0A;Note: A positive value means that NAO will be tilted to the right. A negative&#x0A;value means he is tilted to the left." id="16" />
                                            <Parameter name="TorsoWy (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-0.122173" max="0.122173" tooltip="Angle of the torso toward forward/backward during the walk.&#x0A;&#x0A;Note: A positive value means that NAO will be inclined forward. A negative&#x0A;value means he is inclined backward." id="17" />
                                            <Resource name="Legs" type="Lock" timeout="0" />
                                          </Box>
                                          <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="2" />
                                          <Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" />
                                        </Diagram>
                                      </BehaviorKeyframe>
                                    </BehaviorLayer>
                                  </Timeline>
                                  <Resource name="Legs" type="Lock" timeout="0" />
                                </Box>
                                <Box name="Init" id="2" localization="8" tooltip='Robot will go to the position &quot;Init&#x0A;Position description : Nao is ready to do anything from this position !&#x0A;' x="981" y="152">
                                  <bitmap>media/images/positions/Pos_init.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="20">
                                    <ActuatorList model="nao">
                                      <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-60" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="60" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-25" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="40" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-25" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="40" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                </Box>
                                <Box name="Walk To" id="4" localization="8" tooltip="Make NAO walk to a configured point relative to its current location." x="66" y="389">
                                  <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #~ self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        self.onStopped()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                  <Parameter name="Distance X (m)" inherits_from_parent="0" content_type="2" value="-0.1" default_value="0.2" min="-2" max="2" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="5" />
                                  <Parameter name="Distance Y (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-2" max="2" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="6" />
                                  <Parameter name="Theta (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-3.14" max="3.14" tooltip="The orientation in radians for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="7" />
                                  <Parameter name="Left arm enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate left arm motion during the walk to make it more realistic." id="8" />
                                  <Parameter name="Right arm enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate right arm motion during the walk to make it more realistic." id="9" />
                                  <Parameter name="Stop walk when foot contact is lost" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If this option is activated, NAO stops walking when he loses foot contact with&#x0A;the ground. Else, he just keeps walking." id="10" />
                                  <Timeline enable="0">
                                    <BehaviorLayer name="behavior_layer1">
                                      <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                          <Box name="Walk To Advanced" id="3" localization="8" tooltip="Make NAO walk to a configured point relative to his current location with specific gait parameters." x="195" y="73">
                                            <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.motion = ALProxy("ALMotion")
        footGaitConfigMin = self.motion.getFootGaitConfig("Min")
        footGaitConfigMax = self.motion.getFootGaitConfig("Max")
        self.dFootGaitConfig = {}
        for i in range(len(footGaitConfigMin)):
            # [0] = key ("MaxStepX" for ex)
            # [1] = min
            # [2] = max
            self.dFootGaitConfig[footGaitConfigMin[i][0]] = [footGaitConfigMin[i][1], footGaitConfigMax[i][1]]

    def onLoad(self):
        pass

    def onUnload(self):
        self.motion.setWalkTargetVelocity(0.0, 0.0, 0.0, 0.0)

    def onInput_onStart(self):
        # send walk configuration to ALMotion
        self.motion.setWalkArmsEnable(self.getParameter("Left arm enabled"), self.getParameter("Right arm enabled"))
        self.motion.setMotionConfig([["ENABLE_FOOT_CONTACT_PROTECTION",self.getParameter("Stop walk when foot contact is lost")]])
        for k, v in self.dFootGaitConfig.iteritems():
            for unit in ["m", "rad", "%"]:
                try: # try for each unit and do nothing if value in gaitConfig but not in parameters
                    param = self.getParameter( str(k) + " (" + unit + ")" )
                    if( unit == "%" ):
                        param = param / 100.
                    if( len(v) == 2 ):
                        v.append( param )
                    else:
                        v[2] = param
                    break
                except:
                    pass

        gaitConfig = []
        for k, v in self.dFootGaitConfig.iteritems():
            try:
                gaitConfig.append( [k, v[2]] )
            except: # if some value added in gaitConfig but not in parameters
                pass
        # active walk process
        self.motion.walkTo(self.getParameter("Distance X (m)"), self.getParameter("Distance Y (m)"), self.getParameter("Theta (rad)"), gaitConfig)
         # The walk is finished so output
        self.onStopped() #~ activate output of the box

    def onInput_onStop(self):
        self.onUnload()]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                            <Parameter name="Distance X (m)" inherits_from_parent="1" content_type="2" value="0.2" default_value="0.2" min="-2" max="2" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="5" />
                                            <Parameter name="Distance Y (m)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-2" max="2" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="6" />
                                            <Parameter name="Theta (rad)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-3.14" max="3.14" tooltip="The orientation in radians for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="7" />
                                            <Parameter name="Left arm enabled" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="Activate left arm motion during the walk to make it more realistic." id="8" />
                                            <Parameter name="Right arm enabled" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="Activate right arm motion during the walk to make it more realistic." id="9" />
                                            <Parameter name="Stop walk when foot contact is lost" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="If this option is activated, NAO stops walking when he loses foot contact with&#x0A;the ground. Else, he just keeps walking." id="10" />
                                            <Parameter name="MaxStepX (m)" inherits_from_parent="0" content_type="2" value="0.04" default_value="0.04" min="0.001" max="0.06" tooltip="Maximum length of forward/backward step." id="11" />
                                            <Parameter name="MaxStepY (m)" inherits_from_parent="0" content_type="2" value="0.14" default_value="0.14" min="0.101" max="0.16" tooltip="Maximum length of lateral step." id="12" />
                                            <Parameter name="MaxStepTheta (rad)" inherits_from_parent="0" content_type="2" value="0.349065" default_value="0.349065" min="0.001" max="0.523598" tooltip="Maximum length of rotational step." id="13" />
                                            <Parameter name="MaxStepFrequency (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Maximum step frequency." id="14" />
                                            <Parameter name="StepHeight (m)" inherits_from_parent="0" content_type="2" value="0.02" default_value="0.02" min="0.005" max="0.04" tooltip="Height of the step i.e. how high NAO put his feet up during the walk." id="15" />
                                            <Parameter name="TorsoWx (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-0.122173" max="0.122173" tooltip="Lateral angle of the torso during the walk.&#x0A;&#x0A;Note: A positive value means that NAO will be tilted to the right. A negative&#x0A;value means he is tilted to the left." id="16" />
                                            <Parameter name="TorsoWy (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-0.122173" max="0.122173" tooltip="Angle of the torso toward forward/backward during the walk.&#x0A;&#x0A;Note: A positive value means that NAO will be inclined forward. A negative&#x0A;value means he is inclined backward." id="17" />
                                            <Resource name="Legs" type="Lock" timeout="0" />
                                          </Box>
                                          <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="2" />
                                          <Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" />
                                        </Diagram>
                                      </BehaviorKeyframe>
                                    </BehaviorLayer>
                                  </Timeline>
                                  <Resource name="Legs" type="Lock" timeout="0" />
                                </Box>
                                <Box name="Pattern Images" id="5" localization="8" tooltip="Enter tooltip here" x="207" y="395">
                                  <bitmap>media/images/box/box-diagram.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import Image
import ImageDraw
import time
import os,sys
import cv2 as cv

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):

        flag = self.showNaoImage()
        if (flag == 1):
            global imNum
            imNum = imNum+1
            self.detectionGood()
            self.onUnload()
            #self.onStopped()
        else:
            self.detectionFailure()
            self.onUnload()
            #self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        #self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass

    def sayWord(self,s):
        ttsProxy=ALProxy("ALTextToSpeech")
        ttsProxy.say(s)


    def showNaoImage(self):

        camProxy = ALProxy("ALVideoDevice")
        resolution = 2    # VGA
        colorSpace = 11   # RGB
        found = 0

        videoClient = camProxy.subscribe("python_client", resolution, colorSpace, 5)

        t0 = time.time()

        naoImage = camProxy.getImageRemote(videoClient)

        # Get the image size and pixel array.
        imageWidth = naoImage[0]
        imageHeight = naoImage[1]
        array = naoImage[6]

        # Create a PIL Image from our pixel array.
        im = Image.fromstring("RGB", (imageWidth, imageHeight), array)

        # Create ipl Image to use with opencv
        cv_img = cv.CreateImageHeader(im.size, cv.IPL_DEPTH_8U, 3)  # RGB image
        cv.SetData(cv_img, im.tostring(), im.size[0]*3)
        cv.CvtColor(cv_img, cv_img, cv.CV_RGB2BGR)

        gray_image=cv.CreateImage(cv.GetSize(cv_img),8,1)
        cv.CvtColor(cv_img,gray_image,cv.CV_BGR2GRAY)


        (found,corners)=cv.FindChessboardCorners(gray_image,(7,5),cv.CV_CALIB_CB_ADAPTIVE_THRESH| cv.CV_CALIB_CB_FILTER_QUADS)
        if found == 1:

            self.sayWord("Corners Detected")

            self.sayWord("Saving Image")

        else:

            self.sayWord("Corners can not be detected")

            flag = 0
            camProxy.unsubscribe(videoClient)
            return flag


        t1 = time.time()

        # Time the image transfer.
        self.logger.info("acquisition delay "+str(t1 - t0))

        camProxy.unsubscribe(videoClient)


        self.logger.info(str(imNum))

        # Save the image.
        imName = "image"+str(imNum)+".jpg"
        im.save("/home/nao/SavedImages/"+imName)
        self.sayWord("Image"+str(imNum)+"Saved")

        flag = 1

        return flag]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="detectionFailure" type="1" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                  <Output name="detectionGood" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                </Box>
                                <Box name="Init" id="6" localization="8" tooltip='Robot will go to the position &quot;Init&#x0A;Position description : Nao is ready to do anything from this position !&#x0A;' x="683" y="217">
                                  <bitmap>media/images/positions/Pos_init.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="20">
                                    <ActuatorList model="nao">
                                      <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-60" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="60" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-25" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="40" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-25" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="40" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                </Box>
                                <Box name="Walk To" id="7" localization="8" tooltip="Make NAO walk to a configured point relative to its current location." x="517" y="15">
                                  <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #~ self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        self.onStopped()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                  <Parameter name="Distance X (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0.2" min="-2" max="2" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="5" />
                                  <Parameter name="Distance Y (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-2" max="2" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="6" />
                                  <Parameter name="Theta (rad)" inherits_from_parent="0" content_type="2" value="0.4" default_value="0" min="-3.14" max="3.14" tooltip="The orientation in radians for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="7" />
                                  <Parameter name="Left arm enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate left arm motion during the walk to make it more realistic." id="8" />
                                  <Parameter name="Right arm enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate right arm motion during the walk to make it more realistic." id="9" />
                                  <Parameter name="Stop walk when foot contact is lost" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If this option is activated, NAO stops walking when he loses foot contact with&#x0A;the ground. Else, he just keeps walking." id="10" />
                                  <Timeline enable="0">
                                    <BehaviorLayer name="behavior_layer1">
                                      <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                          <Box name="Walk To Advanced" id="3" localization="8" tooltip="Make NAO walk to a configured point relative to his current location with specific gait parameters." x="195" y="73">
                                            <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.motion = ALProxy("ALMotion")
        footGaitConfigMin = self.motion.getFootGaitConfig("Min")
        footGaitConfigMax = self.motion.getFootGaitConfig("Max")
        self.dFootGaitConfig = {}
        for i in range(len(footGaitConfigMin)):
            # [0] = key ("MaxStepX" for ex)
            # [1] = min
            # [2] = max
            self.dFootGaitConfig[footGaitConfigMin[i][0]] = [footGaitConfigMin[i][1], footGaitConfigMax[i][1]]

    def onLoad(self):
        pass

    def onUnload(self):
        self.motion.setWalkTargetVelocity(0.0, 0.0, 0.0, 0.0)

    def onInput_onStart(self):
        # send walk configuration to ALMotion
        self.motion.setWalkArmsEnable(self.getParameter("Left arm enabled"), self.getParameter("Right arm enabled"))
        self.motion.setMotionConfig([["ENABLE_FOOT_CONTACT_PROTECTION",self.getParameter("Stop walk when foot contact is lost")]])
        for k, v in self.dFootGaitConfig.iteritems():
            for unit in ["m", "rad", "%"]:
                try: # try for each unit and do nothing if value in gaitConfig but not in parameters
                    param = self.getParameter( str(k) + " (" + unit + ")" )
                    if( unit == "%" ):
                        param = param / 100.
                    if( len(v) == 2 ):
                        v.append( param )
                    else:
                        v[2] = param
                    break
                except:
                    pass

        gaitConfig = []
        for k, v in self.dFootGaitConfig.iteritems():
            try:
                gaitConfig.append( [k, v[2]] )
            except: # if some value added in gaitConfig but not in parameters
                pass
        # active walk process
        self.motion.walkTo(self.getParameter("Distance X (m)"), self.getParameter("Distance Y (m)"), self.getParameter("Theta (rad)"), gaitConfig)
         # The walk is finished so output
        self.onStopped() #~ activate output of the box

    def onInput_onStop(self):
        self.onUnload()]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                            <Parameter name="Distance X (m)" inherits_from_parent="1" content_type="2" value="0.2" default_value="0.2" min="-2" max="2" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="5" />
                                            <Parameter name="Distance Y (m)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-2" max="2" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="6" />
                                            <Parameter name="Theta (rad)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-3.14" max="3.14" tooltip="The orientation in radians for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="7" />
                                            <Parameter name="Left arm enabled" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="Activate left arm motion during the walk to make it more realistic." id="8" />
                                            <Parameter name="Right arm enabled" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="Activate right arm motion during the walk to make it more realistic." id="9" />
                                            <Parameter name="Stop walk when foot contact is lost" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="If this option is activated, NAO stops walking when he loses foot contact with&#x0A;the ground. Else, he just keeps walking." id="10" />
                                            <Parameter name="MaxStepX (m)" inherits_from_parent="0" content_type="2" value="0.04" default_value="0.04" min="0.001" max="0.06" tooltip="Maximum length of forward/backward step." id="11" />
                                            <Parameter name="MaxStepY (m)" inherits_from_parent="0" content_type="2" value="0.14" default_value="0.14" min="0.101" max="0.16" tooltip="Maximum length of lateral step." id="12" />
                                            <Parameter name="MaxStepTheta (rad)" inherits_from_parent="0" content_type="2" value="0.349065" default_value="0.349065" min="0.001" max="0.523598" tooltip="Maximum length of rotational step." id="13" />
                                            <Parameter name="MaxStepFrequency (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Maximum step frequency." id="14" />
                                            <Parameter name="StepHeight (m)" inherits_from_parent="0" content_type="2" value="0.02" default_value="0.02" min="0.005" max="0.04" tooltip="Height of the step i.e. how high NAO put his feet up during the walk." id="15" />
                                            <Parameter name="TorsoWx (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-0.122173" max="0.122173" tooltip="Lateral angle of the torso during the walk.&#x0A;&#x0A;Note: A positive value means that NAO will be tilted to the right. A negative&#x0A;value means he is tilted to the left." id="16" />
                                            <Parameter name="TorsoWy (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-0.122173" max="0.122173" tooltip="Angle of the torso toward forward/backward during the walk.&#x0A;&#x0A;Note: A positive value means that NAO will be inclined forward. A negative&#x0A;value means he is inclined backward." id="17" />
                                            <Resource name="Legs" type="Lock" timeout="0" />
                                          </Box>
                                          <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="2" />
                                          <Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" />
                                        </Diagram>
                                      </BehaviorKeyframe>
                                    </BehaviorLayer>
                                  </Timeline>
                                  <Resource name="Legs" type="Lock" timeout="0" />
                                </Box>
                                <Box name="Walk To" id="8" localization="8" tooltip="Make NAO walk to a configured point relative to its current location." x="866" y="80">
                                  <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #~ self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        self.onStopped()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                  <Parameter name="Distance X (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0.2" min="-2" max="2" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="5" />
                                  <Parameter name="Distance Y (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-2" max="2" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="6" />
                                  <Parameter name="Theta (rad)" inherits_from_parent="0" content_type="2" value="-0.4" default_value="0" min="-3.14" max="3.14" tooltip="The orientation in radians for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="7" />
                                  <Parameter name="Left arm enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate left arm motion during the walk to make it more realistic." id="8" />
                                  <Parameter name="Right arm enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate right arm motion during the walk to make it more realistic." id="9" />
                                  <Parameter name="Stop walk when foot contact is lost" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If this option is activated, NAO stops walking when he loses foot contact with&#x0A;the ground. Else, he just keeps walking." id="10" />
                                  <Timeline enable="0">
                                    <BehaviorLayer name="behavior_layer1">
                                      <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                          <Box name="Walk To Advanced" id="3" localization="8" tooltip="Make NAO walk to a configured point relative to his current location with specific gait parameters." x="195" y="73">
                                            <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.motion = ALProxy("ALMotion")
        footGaitConfigMin = self.motion.getFootGaitConfig("Min")
        footGaitConfigMax = self.motion.getFootGaitConfig("Max")
        self.dFootGaitConfig = {}
        for i in range(len(footGaitConfigMin)):
            # [0] = key ("MaxStepX" for ex)
            # [1] = min
            # [2] = max
            self.dFootGaitConfig[footGaitConfigMin[i][0]] = [footGaitConfigMin[i][1], footGaitConfigMax[i][1]]

    def onLoad(self):
        pass

    def onUnload(self):
        self.motion.setWalkTargetVelocity(0.0, 0.0, 0.0, 0.0)

    def onInput_onStart(self):
        # send walk configuration to ALMotion
        self.motion.setWalkArmsEnable(self.getParameter("Left arm enabled"), self.getParameter("Right arm enabled"))
        self.motion.setMotionConfig([["ENABLE_FOOT_CONTACT_PROTECTION",self.getParameter("Stop walk when foot contact is lost")]])
        for k, v in self.dFootGaitConfig.iteritems():
            for unit in ["m", "rad", "%"]:
                try: # try for each unit and do nothing if value in gaitConfig but not in parameters
                    param = self.getParameter( str(k) + " (" + unit + ")" )
                    if( unit == "%" ):
                        param = param / 100.
                    if( len(v) == 2 ):
                        v.append( param )
                    else:
                        v[2] = param
                    break
                except:
                    pass

        gaitConfig = []
        for k, v in self.dFootGaitConfig.iteritems():
            try:
                gaitConfig.append( [k, v[2]] )
            except: # if some value added in gaitConfig but not in parameters
                pass
        # active walk process
        self.motion.walkTo(self.getParameter("Distance X (m)"), self.getParameter("Distance Y (m)"), self.getParameter("Theta (rad)"), gaitConfig)
         # The walk is finished so output
        self.onStopped() #~ activate output of the box

    def onInput_onStop(self):
        self.onUnload()]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                            <Parameter name="Distance X (m)" inherits_from_parent="1" content_type="2" value="0.2" default_value="0.2" min="-2" max="2" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="5" />
                                            <Parameter name="Distance Y (m)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-2" max="2" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="6" />
                                            <Parameter name="Theta (rad)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-3.14" max="3.14" tooltip="The orientation in radians for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="7" />
                                            <Parameter name="Left arm enabled" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="Activate left arm motion during the walk to make it more realistic." id="8" />
                                            <Parameter name="Right arm enabled" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="Activate right arm motion during the walk to make it more realistic." id="9" />
                                            <Parameter name="Stop walk when foot contact is lost" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="If this option is activated, NAO stops walking when he loses foot contact with&#x0A;the ground. Else, he just keeps walking." id="10" />
                                            <Parameter name="MaxStepX (m)" inherits_from_parent="0" content_type="2" value="0.04" default_value="0.04" min="0.001" max="0.06" tooltip="Maximum length of forward/backward step." id="11" />
                                            <Parameter name="MaxStepY (m)" inherits_from_parent="0" content_type="2" value="0.14" default_value="0.14" min="0.101" max="0.16" tooltip="Maximum length of lateral step." id="12" />
                                            <Parameter name="MaxStepTheta (rad)" inherits_from_parent="0" content_type="2" value="0.349065" default_value="0.349065" min="0.001" max="0.523598" tooltip="Maximum length of rotational step." id="13" />
                                            <Parameter name="MaxStepFrequency (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Maximum step frequency." id="14" />
                                            <Parameter name="StepHeight (m)" inherits_from_parent="0" content_type="2" value="0.02" default_value="0.02" min="0.005" max="0.04" tooltip="Height of the step i.e. how high NAO put his feet up during the walk." id="15" />
                                            <Parameter name="TorsoWx (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-0.122173" max="0.122173" tooltip="Lateral angle of the torso during the walk.&#x0A;&#x0A;Note: A positive value means that NAO will be tilted to the right. A negative&#x0A;value means he is tilted to the left." id="16" />
                                            <Parameter name="TorsoWy (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-0.122173" max="0.122173" tooltip="Angle of the torso toward forward/backward during the walk.&#x0A;&#x0A;Note: A positive value means that NAO will be inclined forward. A negative&#x0A;value means he is inclined backward." id="17" />
                                            <Resource name="Legs" type="Lock" timeout="0" />
                                          </Box>
                                          <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="2" />
                                          <Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" />
                                        </Diagram>
                                      </BehaviorKeyframe>
                                    </BehaviorLayer>
                                  </Timeline>
                                  <Resource name="Legs" type="Lock" timeout="0" />
                                </Box>
                                <Box name="left" id="9" localization="8" tooltip='Robot will go to the position &quot;left&#x0A;Position description : &#x0A;' x="332" y="325">
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="20">
                                    <ActuatorList model="nao">
                                      <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                        <Key frame="20" value="26.0135" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-0.969217" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="83.3189" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="8.96255" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-52.5617" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-21.7948" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-62.4934" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                        <Key frame="20" value="0.2112" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="90.3551" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-14.0651" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="58.7093" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="37.9716" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="42.1856" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                        <Key frame="20" value="0.258" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-13.3571" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="2.46338" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="12.2194" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-4.13332" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="3.24959" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-2.81013" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-8.25942" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="11.5114" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-5.29" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="5.89115" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="6.77007" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                </Box>
                                <Box name="Pattern Images" id="10" localization="8" tooltip="Enter tooltip here" x="448" y="387">
                                  <bitmap>media/images/box/box-diagram.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import Image
import ImageDraw
import time
import os,sys
import cv2 as cv

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):

        flag = self.showNaoImage()
        if (flag == 1):
            global imNum
            imNum = imNum+1
            self.detectionGood()
            self.onUnload()
            #self.onStopped()
        else:
            self.detectionFailure()
            self.onUnload()
            #self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        #self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass

    def sayWord(self,s):
        ttsProxy=ALProxy("ALTextToSpeech")
        ttsProxy.say(s)


    def showNaoImage(self):

        camProxy = ALProxy("ALVideoDevice")
        resolution = 2    # VGA
        colorSpace = 11   # RGB
        found = 0

        videoClient = camProxy.subscribe("python_client", resolution, colorSpace, 5)

        t0 = time.time()

        naoImage = camProxy.getImageRemote(videoClient)

        # Get the image size and pixel array.
        imageWidth = naoImage[0]
        imageHeight = naoImage[1]
        array = naoImage[6]

        # Create a PIL Image from our pixel array.
        im = Image.fromstring("RGB", (imageWidth, imageHeight), array)

        # Create ipl Image to use with opencv
        cv_img = cv.CreateImageHeader(im.size, cv.IPL_DEPTH_8U, 3)  # RGB image
        cv.SetData(cv_img, im.tostring(), im.size[0]*3)
        cv.CvtColor(cv_img, cv_img, cv.CV_RGB2BGR)

        gray_image=cv.CreateImage(cv.GetSize(cv_img),8,1)
        cv.CvtColor(cv_img,gray_image,cv.CV_BGR2GRAY)


        (found,corners)=cv.FindChessboardCorners(gray_image,(7,5),cv.CV_CALIB_CB_ADAPTIVE_THRESH| cv.CV_CALIB_CB_FILTER_QUADS)
        if found == 1:

            self.sayWord("Corners Detected")

            self.sayWord("Saving Image")

        else:

            self.sayWord("Corners can not be detected")

            flag = 0
            camProxy.unsubscribe(videoClient)
            return flag


        t1 = time.time()

        # Time the image transfer.
        self.logger.info("acquisition delay "+str(t1 - t0))

        camProxy.unsubscribe(videoClient)


        self.logger.info(str(imNum))

        # Save the image.
        imName = "image"+str(imNum)+".jpg"
        im.save("/home/nao/SavedImages/"+imName)
        self.sayWord("Image"+str(imNum)+"Saved")

        flag = 1

        return flag]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="detectionFailure" type="1" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                  <Output name="detectionGood" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                </Box>
                                <Box name="right" id="13" localization="8" tooltip='Robot will go to the position &quot;right&#x0A;Position description : &#x0A;' x="604" y="492">
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="20">
                                    <ActuatorList model="nao">
                                      <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-32.9618" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-1.145" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="83.4068" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="8.96255" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-52.5617" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-21.7948" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-62.4934" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                        <Key frame="20" value="0.2108" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="90.3551" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-14.0651" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="58.7093" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="37.8837" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="42.1856" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                        <Key frame="20" value="0.258" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-13.445" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="2.46338" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="12.2194" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-4.13332" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="2.89802" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-2.81013" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-8.25942" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="11.1598" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-5.29" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="5.53958" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="6.77007" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                </Box>
                                <Box name="Init" id="17" localization="8" tooltip='Robot will go to the position &quot;Init&#x0A;Position description : Nao is ready to do anything from this position !&#x0A;' x="602" y="392">
                                  <bitmap>media/images/positions/Pos_init.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="20">
                                    <ActuatorList model="nao">
                                      <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-60" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="60" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-25" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="40" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-25" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="40" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                </Box>
                                <Box name="Pattern Images" id="18" localization="8" tooltip="Enter tooltip here" x="809" y="472">
                                  <bitmap>media/images/box/box-diagram.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import Image
import ImageDraw
import time
import os,sys
import cv2 as cv

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):

        flag = self.showNaoImage()
        if (flag == 1):
            global imNum
            imNum = imNum+1
            self.detectionGood()
            self.onUnload()
            #self.onStopped()
        else:
            self.detectionFailure()
            self.onUnload()
            #self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        #self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass

    def sayWord(self,s):
        ttsProxy=ALProxy("ALTextToSpeech")
        ttsProxy.say(s)


    def showNaoImage(self):

        camProxy = ALProxy("ALVideoDevice")
        resolution = 2    # VGA
        colorSpace = 11   # RGB
        found = 0

        videoClient = camProxy.subscribe("python_client", resolution, colorSpace, 5)

        t0 = time.time()

        naoImage = camProxy.getImageRemote(videoClient)

        # Get the image size and pixel array.
        imageWidth = naoImage[0]
        imageHeight = naoImage[1]
        array = naoImage[6]

        # Create a PIL Image from our pixel array.
        im = Image.fromstring("RGB", (imageWidth, imageHeight), array)

        # Create ipl Image to use with opencv
        cv_img = cv.CreateImageHeader(im.size, cv.IPL_DEPTH_8U, 3)  # RGB image
        cv.SetData(cv_img, im.tostring(), im.size[0]*3)
        cv.CvtColor(cv_img, cv_img, cv.CV_RGB2BGR)

        gray_image=cv.CreateImage(cv.GetSize(cv_img),8,1)
        cv.CvtColor(cv_img,gray_image,cv.CV_BGR2GRAY)


        (found,corners)=cv.FindChessboardCorners(gray_image,(7,5),cv.CV_CALIB_CB_ADAPTIVE_THRESH| cv.CV_CALIB_CB_FILTER_QUADS)
        if found == 1:

            self.sayWord("Corners Detected")

            self.sayWord("Saving Image")

        else:

            self.sayWord("Corners can not be detected")

            flag = 0
            camProxy.unsubscribe(videoClient)
            return flag


        t1 = time.time()

        # Time the image transfer.
        self.logger.info("acquisition delay "+str(t1 - t0))

        camProxy.unsubscribe(videoClient)


        self.logger.info(str(imNum))

        # Save the image.
        imName = "image"+str(imNum)+".jpg"
        im.save("/home/nao/SavedImages/"+imName)
        self.sayWord("Image"+str(imNum)+"Saved")

        flag = 1

        return flag]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="detectionFailure" type="1" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                  <Output name="detectionGood" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                </Box>
                                <Link inputowner="12" indexofinput="2" outputowner="11" indexofoutput="4" />
                                <Link inputowner="14" indexofinput="2" outputowner="12" indexofoutput="4" />
                                <Link inputowner="15" indexofinput="2" outputowner="14" indexofoutput="4" />
                                <Link inputowner="16" indexofinput="2" outputowner="15" indexofoutput="4" />
                                <Link inputowner="11" indexofinput="2" outputowner="0" indexofoutput="2" />
                                <Link inputowner="0" indexofinput="3" outputowner="11" indexofoutput="5" />
                                <Link inputowner="26" indexofinput="2" outputowner="14" indexofoutput="5" />
                                <Link inputowner="1" indexofinput="2" outputowner="16" indexofoutput="5" />
                                <Link inputowner="11" indexofinput="2" outputowner="3" indexofoutput="4" />
                                <Link inputowner="2" indexofinput="2" outputowner="16" indexofoutput="4" />
                                <Link inputowner="4" indexofinput="2" outputowner="2" indexofoutput="4" />
                                <Link inputowner="5" indexofinput="2" outputowner="4" indexofoutput="4" />
                                <Link inputowner="6" indexofinput="2" outputowner="5" indexofoutput="5" />
                                <Link inputowner="0" indexofinput="3" outputowner="6" indexofoutput="4" />
                                <Link inputowner="7" indexofinput="2" outputowner="26" indexofoutput="4" />
                                <Link inputowner="0" indexofinput="3" outputowner="7" indexofoutput="4" />
                                <Link inputowner="8" indexofinput="2" outputowner="1" indexofoutput="4" />
                                <Link inputowner="0" indexofinput="3" outputowner="8" indexofoutput="4" />
                                <Link inputowner="9" indexofinput="2" outputowner="5" indexofoutput="4" />
                                <Link inputowner="13" indexofinput="2" outputowner="10" indexofoutput="4" />
                                <Link inputowner="17" indexofinput="2" outputowner="10" indexofoutput="5" />
                                <Link inputowner="10" indexofinput="2" outputowner="9" indexofoutput="4" />
                                <Link inputowner="7" indexofinput="2" outputowner="17" indexofoutput="4" />
                                <Link inputowner="18" indexofinput="2" outputowner="13" indexofoutput="4" />
                                <Link inputowner="3" indexofinput="2" outputowner="18" indexofoutput="4" />
                                <Link inputowner="1" indexofinput="2" outputowner="18" indexofoutput="5" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                      </Box>
                      <Box name="PosesForImages" id="6" localization="8" tooltip="Normal Pose/HeadLeft/HeadRight" x="753" y="10">
                        <bitmap>media/images/box/box-diagram.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="Pattern Images_onStart" type="0" type_size="1" nature="2" inner="0" tooltip="This input has been automatically generated&#x0A;by converting several boxes into a single box." id="2" />
                        <Output name="PatternImages_detectionGood" type="0" type_size="1" nature="2" inner="0" tooltip="This output has been automatically generated&#x0A;by converting several boxes into a single box." id="3" />
                        <Timeline enable="0">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram scale="47.1937">
                                <Box name="Pattern Images" id="11" localization="8" tooltip="Enter tooltip here" x="110" y="180">
                                  <bitmap>media/images/box/box-diagram.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import Image
import ImageDraw
import time
import os,sys
import cv2 as cv

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):

        flag = self.showNaoImage()
        if (flag == 1):
            global imNum
            imNum = imNum+1
            self.detectionGood()
            self.onUnload()
            #self.onStopped()
        else:
            self.detectionFailure()
            self.onUnload()
            #self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        #self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass

    def sayWord(self,s):
        ttsProxy=ALProxy("ALTextToSpeech")
        ttsProxy.say(s)


    def showNaoImage(self):

        camProxy = ALProxy("ALVideoDevice")
        resolution = 2    # VGA
        colorSpace = 11   # RGB
        found = 0

        videoClient = camProxy.subscribe("python_client", resolution, colorSpace, 5)

        t0 = time.time()

        naoImage = camProxy.getImageRemote(videoClient)

        # Get the image size and pixel array.
        imageWidth = naoImage[0]
        imageHeight = naoImage[1]
        array = naoImage[6]

        # Create a PIL Image from our pixel array.
        im = Image.fromstring("RGB", (imageWidth, imageHeight), array)

        # Create ipl Image to use with opencv
        cv_img = cv.CreateImageHeader(im.size, cv.IPL_DEPTH_8U, 3)  # RGB image
        cv.SetData(cv_img, im.tostring(), im.size[0]*3)
        cv.CvtColor(cv_img, cv_img, cv.CV_RGB2BGR)

        gray_image=cv.CreateImage(cv.GetSize(cv_img),8,1)
        cv.CvtColor(cv_img,gray_image,cv.CV_BGR2GRAY)


        (found,corners)=cv.FindChessboardCorners(gray_image,(7,5),cv.CV_CALIB_CB_ADAPTIVE_THRESH| cv.CV_CALIB_CB_FILTER_QUADS)
        if found == 1:

            self.sayWord("Corners Detected")

            self.sayWord("Saving Image")

        else:

            self.sayWord("Corners can not be detected")

            flag = 0
            camProxy.unsubscribe(videoClient)
            return flag


        t1 = time.time()

        # Time the image transfer.
        self.logger.info("acquisition delay "+str(t1 - t0))

        camProxy.unsubscribe(videoClient)


        self.logger.info(str(imNum))

        # Save the image.
        imName = "image"+str(imNum)+".jpg"
        im.save("/home/nao/SavedImages/"+imName)
        self.sayWord("Image"+str(imNum)+"Saved")

        flag = 1

        return flag]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="detectionFailure" type="1" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                  <Output name="detectionGood" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                </Box>
                                <Box name="left" id="12" localization="8" tooltip='Robot will go to the position &quot;left&#x0A;Position description : &#x0A;' x="77" y="29">
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="20">
                                    <ActuatorList model="nao">
                                      <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                        <Key frame="20" value="26.0135" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-0.969217" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="83.3189" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="8.96255" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-52.5617" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-21.7948" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-62.4934" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                        <Key frame="20" value="0.2112" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="90.3551" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-14.0651" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="58.7093" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="37.9716" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="42.1856" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                        <Key frame="20" value="0.258" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-13.3571" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="2.46338" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="12.2194" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-4.13332" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="3.24959" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-2.81013" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-8.25942" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="11.5114" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-5.29" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="5.89115" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="6.77007" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                </Box>
                                <Box name="Pattern Images" id="14" localization="8" tooltip="Enter tooltip here" x="200" y="31">
                                  <bitmap>media/images/box/box-diagram.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import Image
import ImageDraw
import time
import os,sys
import cv2 as cv

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):

        flag = self.showNaoImage()
        if (flag == 1):
            global imNum
            imNum = imNum+1
            self.detectionGood()
            self.onUnload()
            #self.onStopped()
        else:
            self.detectionFailure()
            self.onUnload()
            #self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        #self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass

    def sayWord(self,s):
        ttsProxy=ALProxy("ALTextToSpeech")
        ttsProxy.say(s)


    def showNaoImage(self):

        camProxy = ALProxy("ALVideoDevice")
        resolution = 2    # VGA
        colorSpace = 11   # RGB
        found = 0

        videoClient = camProxy.subscribe("python_client", resolution, colorSpace, 5)

        t0 = time.time()

        naoImage = camProxy.getImageRemote(videoClient)

        # Get the image size and pixel array.
        imageWidth = naoImage[0]
        imageHeight = naoImage[1]
        array = naoImage[6]

        # Create a PIL Image from our pixel array.
        im = Image.fromstring("RGB", (imageWidth, imageHeight), array)

        # Create ipl Image to use with opencv
        cv_img = cv.CreateImageHeader(im.size, cv.IPL_DEPTH_8U, 3)  # RGB image
        cv.SetData(cv_img, im.tostring(), im.size[0]*3)
        cv.CvtColor(cv_img, cv_img, cv.CV_RGB2BGR)

        gray_image=cv.CreateImage(cv.GetSize(cv_img),8,1)
        cv.CvtColor(cv_img,gray_image,cv.CV_BGR2GRAY)


        (found,corners)=cv.FindChessboardCorners(gray_image,(7,5),cv.CV_CALIB_CB_ADAPTIVE_THRESH| cv.CV_CALIB_CB_FILTER_QUADS)
        if found == 1:

            self.sayWord("Corners Detected")

            self.sayWord("Saving Image")

        else:

            self.sayWord("Corners can not be detected")

            flag = 0
            camProxy.unsubscribe(videoClient)
            return flag


        t1 = time.time()

        # Time the image transfer.
        self.logger.info("acquisition delay "+str(t1 - t0))

        camProxy.unsubscribe(videoClient)


        self.logger.info(str(imNum))

        # Save the image.
        imName = "image"+str(imNum)+".jpg"
        im.save("/home/nao/SavedImages/"+imName)
        self.sayWord("Image"+str(imNum)+"Saved")

        flag = 1

        return flag]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="detectionFailure" type="1" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                  <Output name="detectionGood" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                </Box>
                                <Box name="right" id="15" localization="8" tooltip='Robot will go to the position &quot;right&#x0A;Position description : &#x0A;' x="370" y="113">
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="20">
                                    <ActuatorList model="nao">
                                      <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-32.9618" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-1.145" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="83.4068" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="8.96255" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-52.5617" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-21.7948" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-62.4934" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                        <Key frame="20" value="0.2108" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="90.3551" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-14.0651" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="58.7093" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="37.8837" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="42.1856" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                        <Key frame="20" value="0.258" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-13.445" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="2.46338" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="12.2194" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-4.13332" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="2.89802" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-2.81013" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-8.25942" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="11.1598" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-5.29" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="5.53958" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="6.77007" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                </Box>
                                <Box name="Pattern Images" id="16" localization="8" tooltip="Enter tooltip here" x="517" y="128">
                                  <bitmap>media/images/box/box-diagram.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import Image
import ImageDraw
import time
import os,sys
import cv2 as cv

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):

        flag = self.showNaoImage()
        if (flag == 1):
            global imNum
            imNum = imNum+1
            self.detectionGood()
            self.onUnload()
            #self.onStopped()
        else:
            self.detectionFailure()
            self.onUnload()
            #self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        #self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass

    def sayWord(self,s):
        ttsProxy=ALProxy("ALTextToSpeech")
        ttsProxy.say(s)


    def showNaoImage(self):

        camProxy = ALProxy("ALVideoDevice")
        resolution = 2    # VGA
        colorSpace = 11   # RGB
        found = 0

        videoClient = camProxy.subscribe("python_client", resolution, colorSpace, 5)

        t0 = time.time()

        naoImage = camProxy.getImageRemote(videoClient)

        # Get the image size and pixel array.
        imageWidth = naoImage[0]
        imageHeight = naoImage[1]
        array = naoImage[6]

        # Create a PIL Image from our pixel array.
        im = Image.fromstring("RGB", (imageWidth, imageHeight), array)

        # Create ipl Image to use with opencv
        cv_img = cv.CreateImageHeader(im.size, cv.IPL_DEPTH_8U, 3)  # RGB image
        cv.SetData(cv_img, im.tostring(), im.size[0]*3)
        cv.CvtColor(cv_img, cv_img, cv.CV_RGB2BGR)

        gray_image=cv.CreateImage(cv.GetSize(cv_img),8,1)
        cv.CvtColor(cv_img,gray_image,cv.CV_BGR2GRAY)


        (found,corners)=cv.FindChessboardCorners(gray_image,(7,5),cv.CV_CALIB_CB_ADAPTIVE_THRESH| cv.CV_CALIB_CB_FILTER_QUADS)
        if found == 1:

            self.sayWord("Corners Detected")

            self.sayWord("Saving Image")

        else:

            self.sayWord("Corners can not be detected")

            flag = 0
            camProxy.unsubscribe(videoClient)
            return flag


        t1 = time.time()

        # Time the image transfer.
        self.logger.info("acquisition delay "+str(t1 - t0))

        camProxy.unsubscribe(videoClient)


        self.logger.info(str(imNum))

        # Save the image.
        imName = "image"+str(imNum)+".jpg"
        im.save("/home/nao/SavedImages/"+imName)
        self.sayWord("Image"+str(imNum)+"Saved")

        flag = 1

        return flag]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="detectionFailure" type="1" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                  <Output name="detectionGood" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                </Box>
                                <Box name="Init" id="26" localization="8" tooltip='Robot will go to the position &quot;Init&#x0A;Position description : Nao is ready to do anything from this position !&#x0A;' x="368" y="13">
                                  <bitmap>media/images/positions/Pos_init.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="20">
                                    <ActuatorList model="nao">
                                      <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-60" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="60" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-25" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="40" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-25" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="40" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                </Box>
                                <Box name="Init" id="1" localization="8" tooltip='Robot will go to the position &quot;Init&#x0A;Position description : Nao is ready to do anything from this position !&#x0A;' x="715" y="51">
                                  <bitmap>media/images/positions/Pos_init.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="20">
                                    <ActuatorList model="nao">
                                      <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-60" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="60" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-25" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="40" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-25" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="40" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                </Box>
                                <Box name="Walk To" id="3" localization="8" tooltip="Make NAO walk to a configured point relative to its current location." x="1073" y="442">
                                  <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #~ self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        self.onStopped()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                  <Parameter name="Distance X (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0.2" min="-2" max="2" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="5" />
                                  <Parameter name="Distance Y (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-2" max="2" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="6" />
                                  <Parameter name="Theta (rad)" inherits_from_parent="0" content_type="2" value="1.3" default_value="0" min="-3.14" max="3.14" tooltip="The orientation in radians for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="7" />
                                  <Parameter name="Left arm enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate left arm motion during the walk to make it more realistic." id="8" />
                                  <Parameter name="Right arm enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate right arm motion during the walk to make it more realistic." id="9" />
                                  <Parameter name="Stop walk when foot contact is lost" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If this option is activated, NAO stops walking when he loses foot contact with&#x0A;the ground. Else, he just keeps walking." id="10" />
                                  <Timeline enable="0">
                                    <BehaviorLayer name="behavior_layer1">
                                      <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                          <Box name="Walk To Advanced" id="3" localization="8" tooltip="Make NAO walk to a configured point relative to his current location with specific gait parameters." x="195" y="73">
                                            <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.motion = ALProxy("ALMotion")
        footGaitConfigMin = self.motion.getFootGaitConfig("Min")
        footGaitConfigMax = self.motion.getFootGaitConfig("Max")
        self.dFootGaitConfig = {}
        for i in range(len(footGaitConfigMin)):
            # [0] = key ("MaxStepX" for ex)
            # [1] = min
            # [2] = max
            self.dFootGaitConfig[footGaitConfigMin[i][0]] = [footGaitConfigMin[i][1], footGaitConfigMax[i][1]]

    def onLoad(self):
        pass

    def onUnload(self):
        self.motion.setWalkTargetVelocity(0.0, 0.0, 0.0, 0.0)

    def onInput_onStart(self):
        # send walk configuration to ALMotion
        self.motion.setWalkArmsEnable(self.getParameter("Left arm enabled"), self.getParameter("Right arm enabled"))
        self.motion.setMotionConfig([["ENABLE_FOOT_CONTACT_PROTECTION",self.getParameter("Stop walk when foot contact is lost")]])
        for k, v in self.dFootGaitConfig.iteritems():
            for unit in ["m", "rad", "%"]:
                try: # try for each unit and do nothing if value in gaitConfig but not in parameters
                    param = self.getParameter( str(k) + " (" + unit + ")" )
                    if( unit == "%" ):
                        param = param / 100.
                    if( len(v) == 2 ):
                        v.append( param )
                    else:
                        v[2] = param
                    break
                except:
                    pass

        gaitConfig = []
        for k, v in self.dFootGaitConfig.iteritems():
            try:
                gaitConfig.append( [k, v[2]] )
            except: # if some value added in gaitConfig but not in parameters
                pass
        # active walk process
        self.motion.walkTo(self.getParameter("Distance X (m)"), self.getParameter("Distance Y (m)"), self.getParameter("Theta (rad)"), gaitConfig)
         # The walk is finished so output
        self.onStopped() #~ activate output of the box

    def onInput_onStop(self):
        self.onUnload()]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                            <Parameter name="Distance X (m)" inherits_from_parent="1" content_type="2" value="0.2" default_value="0.2" min="-2" max="2" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="5" />
                                            <Parameter name="Distance Y (m)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-2" max="2" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="6" />
                                            <Parameter name="Theta (rad)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-3.14" max="3.14" tooltip="The orientation in radians for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="7" />
                                            <Parameter name="Left arm enabled" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="Activate left arm motion during the walk to make it more realistic." id="8" />
                                            <Parameter name="Right arm enabled" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="Activate right arm motion during the walk to make it more realistic." id="9" />
                                            <Parameter name="Stop walk when foot contact is lost" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="If this option is activated, NAO stops walking when he loses foot contact with&#x0A;the ground. Else, he just keeps walking." id="10" />
                                            <Parameter name="MaxStepX (m)" inherits_from_parent="0" content_type="2" value="0.04" default_value="0.04" min="0.001" max="0.06" tooltip="Maximum length of forward/backward step." id="11" />
                                            <Parameter name="MaxStepY (m)" inherits_from_parent="0" content_type="2" value="0.14" default_value="0.14" min="0.101" max="0.16" tooltip="Maximum length of lateral step." id="12" />
                                            <Parameter name="MaxStepTheta (rad)" inherits_from_parent="0" content_type="2" value="0.349065" default_value="0.349065" min="0.001" max="0.523598" tooltip="Maximum length of rotational step." id="13" />
                                            <Parameter name="MaxStepFrequency (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Maximum step frequency." id="14" />
                                            <Parameter name="StepHeight (m)" inherits_from_parent="0" content_type="2" value="0.02" default_value="0.02" min="0.005" max="0.04" tooltip="Height of the step i.e. how high NAO put his feet up during the walk." id="15" />
                                            <Parameter name="TorsoWx (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-0.122173" max="0.122173" tooltip="Lateral angle of the torso during the walk.&#x0A;&#x0A;Note: A positive value means that NAO will be tilted to the right. A negative&#x0A;value means he is tilted to the left." id="16" />
                                            <Parameter name="TorsoWy (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-0.122173" max="0.122173" tooltip="Angle of the torso toward forward/backward during the walk.&#x0A;&#x0A;Note: A positive value means that NAO will be inclined forward. A negative&#x0A;value means he is inclined backward." id="17" />
                                            <Resource name="Legs" type="Lock" timeout="0" />
                                          </Box>
                                          <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="2" />
                                          <Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" />
                                        </Diagram>
                                      </BehaviorKeyframe>
                                    </BehaviorLayer>
                                  </Timeline>
                                  <Resource name="Legs" type="Lock" timeout="0" />
                                </Box>
                                <Box name="Init" id="2" localization="8" tooltip='Robot will go to the position &quot;Init&#x0A;Position description : Nao is ready to do anything from this position !&#x0A;' x="981" y="152">
                                  <bitmap>media/images/positions/Pos_init.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="20">
                                    <ActuatorList model="nao">
                                      <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-60" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="60" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-25" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="40" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-25" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="40" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                </Box>
                                <Box name="Walk To" id="4" localization="8" tooltip="Make NAO walk to a configured point relative to its current location." x="66" y="389">
                                  <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #~ self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        self.onStopped()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                  <Parameter name="Distance X (m)" inherits_from_parent="0" content_type="2" value="-0.1" default_value="0.2" min="-2" max="2" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="5" />
                                  <Parameter name="Distance Y (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-2" max="2" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="6" />
                                  <Parameter name="Theta (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-3.14" max="3.14" tooltip="The orientation in radians for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="7" />
                                  <Parameter name="Left arm enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate left arm motion during the walk to make it more realistic." id="8" />
                                  <Parameter name="Right arm enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate right arm motion during the walk to make it more realistic." id="9" />
                                  <Parameter name="Stop walk when foot contact is lost" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If this option is activated, NAO stops walking when he loses foot contact with&#x0A;the ground. Else, he just keeps walking." id="10" />
                                  <Timeline enable="0">
                                    <BehaviorLayer name="behavior_layer1">
                                      <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                          <Box name="Walk To Advanced" id="3" localization="8" tooltip="Make NAO walk to a configured point relative to his current location with specific gait parameters." x="195" y="73">
                                            <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.motion = ALProxy("ALMotion")
        footGaitConfigMin = self.motion.getFootGaitConfig("Min")
        footGaitConfigMax = self.motion.getFootGaitConfig("Max")
        self.dFootGaitConfig = {}
        for i in range(len(footGaitConfigMin)):
            # [0] = key ("MaxStepX" for ex)
            # [1] = min
            # [2] = max
            self.dFootGaitConfig[footGaitConfigMin[i][0]] = [footGaitConfigMin[i][1], footGaitConfigMax[i][1]]

    def onLoad(self):
        pass

    def onUnload(self):
        self.motion.setWalkTargetVelocity(0.0, 0.0, 0.0, 0.0)

    def onInput_onStart(self):
        # send walk configuration to ALMotion
        self.motion.setWalkArmsEnable(self.getParameter("Left arm enabled"), self.getParameter("Right arm enabled"))
        self.motion.setMotionConfig([["ENABLE_FOOT_CONTACT_PROTECTION",self.getParameter("Stop walk when foot contact is lost")]])
        for k, v in self.dFootGaitConfig.iteritems():
            for unit in ["m", "rad", "%"]:
                try: # try for each unit and do nothing if value in gaitConfig but not in parameters
                    param = self.getParameter( str(k) + " (" + unit + ")" )
                    if( unit == "%" ):
                        param = param / 100.
                    if( len(v) == 2 ):
                        v.append( param )
                    else:
                        v[2] = param
                    break
                except:
                    pass

        gaitConfig = []
        for k, v in self.dFootGaitConfig.iteritems():
            try:
                gaitConfig.append( [k, v[2]] )
            except: # if some value added in gaitConfig but not in parameters
                pass
        # active walk process
        self.motion.walkTo(self.getParameter("Distance X (m)"), self.getParameter("Distance Y (m)"), self.getParameter("Theta (rad)"), gaitConfig)
         # The walk is finished so output
        self.onStopped() #~ activate output of the box

    def onInput_onStop(self):
        self.onUnload()]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                            <Parameter name="Distance X (m)" inherits_from_parent="1" content_type="2" value="0.2" default_value="0.2" min="-2" max="2" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="5" />
                                            <Parameter name="Distance Y (m)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-2" max="2" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="6" />
                                            <Parameter name="Theta (rad)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-3.14" max="3.14" tooltip="The orientation in radians for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="7" />
                                            <Parameter name="Left arm enabled" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="Activate left arm motion during the walk to make it more realistic." id="8" />
                                            <Parameter name="Right arm enabled" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="Activate right arm motion during the walk to make it more realistic." id="9" />
                                            <Parameter name="Stop walk when foot contact is lost" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="If this option is activated, NAO stops walking when he loses foot contact with&#x0A;the ground. Else, he just keeps walking." id="10" />
                                            <Parameter name="MaxStepX (m)" inherits_from_parent="0" content_type="2" value="0.04" default_value="0.04" min="0.001" max="0.06" tooltip="Maximum length of forward/backward step." id="11" />
                                            <Parameter name="MaxStepY (m)" inherits_from_parent="0" content_type="2" value="0.14" default_value="0.14" min="0.101" max="0.16" tooltip="Maximum length of lateral step." id="12" />
                                            <Parameter name="MaxStepTheta (rad)" inherits_from_parent="0" content_type="2" value="0.349065" default_value="0.349065" min="0.001" max="0.523598" tooltip="Maximum length of rotational step." id="13" />
                                            <Parameter name="MaxStepFrequency (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Maximum step frequency." id="14" />
                                            <Parameter name="StepHeight (m)" inherits_from_parent="0" content_type="2" value="0.02" default_value="0.02" min="0.005" max="0.04" tooltip="Height of the step i.e. how high NAO put his feet up during the walk." id="15" />
                                            <Parameter name="TorsoWx (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-0.122173" max="0.122173" tooltip="Lateral angle of the torso during the walk.&#x0A;&#x0A;Note: A positive value means that NAO will be tilted to the right. A negative&#x0A;value means he is tilted to the left." id="16" />
                                            <Parameter name="TorsoWy (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-0.122173" max="0.122173" tooltip="Angle of the torso toward forward/backward during the walk.&#x0A;&#x0A;Note: A positive value means that NAO will be inclined forward. A negative&#x0A;value means he is inclined backward." id="17" />
                                            <Resource name="Legs" type="Lock" timeout="0" />
                                          </Box>
                                          <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="2" />
                                          <Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" />
                                        </Diagram>
                                      </BehaviorKeyframe>
                                    </BehaviorLayer>
                                  </Timeline>
                                  <Resource name="Legs" type="Lock" timeout="0" />
                                </Box>
                                <Box name="Pattern Images" id="5" localization="8" tooltip="Enter tooltip here" x="207" y="395">
                                  <bitmap>media/images/box/box-diagram.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import Image
import ImageDraw
import time
import os,sys
import cv2 as cv

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):

        flag = self.showNaoImage()
        if (flag == 1):
            global imNum
            imNum = imNum+1
            self.detectionGood()
            self.onUnload()
            #self.onStopped()
        else:
            self.detectionFailure()
            self.onUnload()
            #self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        #self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass

    def sayWord(self,s):
        ttsProxy=ALProxy("ALTextToSpeech")
        ttsProxy.say(s)


    def showNaoImage(self):

        camProxy = ALProxy("ALVideoDevice")
        resolution = 2    # VGA
        colorSpace = 11   # RGB
        found = 0

        videoClient = camProxy.subscribe("python_client", resolution, colorSpace, 5)

        t0 = time.time()

        naoImage = camProxy.getImageRemote(videoClient)

        # Get the image size and pixel array.
        imageWidth = naoImage[0]
        imageHeight = naoImage[1]
        array = naoImage[6]

        # Create a PIL Image from our pixel array.
        im = Image.fromstring("RGB", (imageWidth, imageHeight), array)

        # Create ipl Image to use with opencv
        cv_img = cv.CreateImageHeader(im.size, cv.IPL_DEPTH_8U, 3)  # RGB image
        cv.SetData(cv_img, im.tostring(), im.size[0]*3)
        cv.CvtColor(cv_img, cv_img, cv.CV_RGB2BGR)

        gray_image=cv.CreateImage(cv.GetSize(cv_img),8,1)
        cv.CvtColor(cv_img,gray_image,cv.CV_BGR2GRAY)


        (found,corners)=cv.FindChessboardCorners(gray_image,(7,5),cv.CV_CALIB_CB_ADAPTIVE_THRESH| cv.CV_CALIB_CB_FILTER_QUADS)
        if found == 1:

            self.sayWord("Corners Detected")

            self.sayWord("Saving Image")

        else:

            self.sayWord("Corners can not be detected")

            flag = 0
            camProxy.unsubscribe(videoClient)
            return flag


        t1 = time.time()

        # Time the image transfer.
        self.logger.info("acquisition delay "+str(t1 - t0))

        camProxy.unsubscribe(videoClient)


        self.logger.info(str(imNum))

        # Save the image.
        imName = "image"+str(imNum)+".jpg"
        im.save("/home/nao/SavedImages/"+imName)
        self.sayWord("Image"+str(imNum)+"Saved")

        flag = 1

        return flag]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="detectionFailure" type="1" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                  <Output name="detectionGood" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                </Box>
                                <Box name="Init" id="6" localization="8" tooltip='Robot will go to the position &quot;Init&#x0A;Position description : Nao is ready to do anything from this position !&#x0A;' x="683" y="217">
                                  <bitmap>media/images/positions/Pos_init.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="20">
                                    <ActuatorList model="nao">
                                      <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-60" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="60" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-25" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="40" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-25" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="40" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                </Box>
                                <Box name="Walk To" id="7" localization="8" tooltip="Make NAO walk to a configured point relative to its current location." x="517" y="15">
                                  <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #~ self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        self.onStopped()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                  <Parameter name="Distance X (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0.2" min="-2" max="2" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="5" />
                                  <Parameter name="Distance Y (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-2" max="2" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="6" />
                                  <Parameter name="Theta (rad)" inherits_from_parent="0" content_type="2" value="0.4" default_value="0" min="-3.14" max="3.14" tooltip="The orientation in radians for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="7" />
                                  <Parameter name="Left arm enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate left arm motion during the walk to make it more realistic." id="8" />
                                  <Parameter name="Right arm enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate right arm motion during the walk to make it more realistic." id="9" />
                                  <Parameter name="Stop walk when foot contact is lost" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If this option is activated, NAO stops walking when he loses foot contact with&#x0A;the ground. Else, he just keeps walking." id="10" />
                                  <Timeline enable="0">
                                    <BehaviorLayer name="behavior_layer1">
                                      <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                          <Box name="Walk To Advanced" id="3" localization="8" tooltip="Make NAO walk to a configured point relative to his current location with specific gait parameters." x="195" y="73">
                                            <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.motion = ALProxy("ALMotion")
        footGaitConfigMin = self.motion.getFootGaitConfig("Min")
        footGaitConfigMax = self.motion.getFootGaitConfig("Max")
        self.dFootGaitConfig = {}
        for i in range(len(footGaitConfigMin)):
            # [0] = key ("MaxStepX" for ex)
            # [1] = min
            # [2] = max
            self.dFootGaitConfig[footGaitConfigMin[i][0]] = [footGaitConfigMin[i][1], footGaitConfigMax[i][1]]

    def onLoad(self):
        pass

    def onUnload(self):
        self.motion.setWalkTargetVelocity(0.0, 0.0, 0.0, 0.0)

    def onInput_onStart(self):
        # send walk configuration to ALMotion
        self.motion.setWalkArmsEnable(self.getParameter("Left arm enabled"), self.getParameter("Right arm enabled"))
        self.motion.setMotionConfig([["ENABLE_FOOT_CONTACT_PROTECTION",self.getParameter("Stop walk when foot contact is lost")]])
        for k, v in self.dFootGaitConfig.iteritems():
            for unit in ["m", "rad", "%"]:
                try: # try for each unit and do nothing if value in gaitConfig but not in parameters
                    param = self.getParameter( str(k) + " (" + unit + ")" )
                    if( unit == "%" ):
                        param = param / 100.
                    if( len(v) == 2 ):
                        v.append( param )
                    else:
                        v[2] = param
                    break
                except:
                    pass

        gaitConfig = []
        for k, v in self.dFootGaitConfig.iteritems():
            try:
                gaitConfig.append( [k, v[2]] )
            except: # if some value added in gaitConfig but not in parameters
                pass
        # active walk process
        self.motion.walkTo(self.getParameter("Distance X (m)"), self.getParameter("Distance Y (m)"), self.getParameter("Theta (rad)"), gaitConfig)
         # The walk is finished so output
        self.onStopped() #~ activate output of the box

    def onInput_onStop(self):
        self.onUnload()]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                            <Parameter name="Distance X (m)" inherits_from_parent="1" content_type="2" value="0.2" default_value="0.2" min="-2" max="2" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="5" />
                                            <Parameter name="Distance Y (m)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-2" max="2" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="6" />
                                            <Parameter name="Theta (rad)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-3.14" max="3.14" tooltip="The orientation in radians for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="7" />
                                            <Parameter name="Left arm enabled" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="Activate left arm motion during the walk to make it more realistic." id="8" />
                                            <Parameter name="Right arm enabled" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="Activate right arm motion during the walk to make it more realistic." id="9" />
                                            <Parameter name="Stop walk when foot contact is lost" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="If this option is activated, NAO stops walking when he loses foot contact with&#x0A;the ground. Else, he just keeps walking." id="10" />
                                            <Parameter name="MaxStepX (m)" inherits_from_parent="0" content_type="2" value="0.04" default_value="0.04" min="0.001" max="0.06" tooltip="Maximum length of forward/backward step." id="11" />
                                            <Parameter name="MaxStepY (m)" inherits_from_parent="0" content_type="2" value="0.14" default_value="0.14" min="0.101" max="0.16" tooltip="Maximum length of lateral step." id="12" />
                                            <Parameter name="MaxStepTheta (rad)" inherits_from_parent="0" content_type="2" value="0.349065" default_value="0.349065" min="0.001" max="0.523598" tooltip="Maximum length of rotational step." id="13" />
                                            <Parameter name="MaxStepFrequency (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Maximum step frequency." id="14" />
                                            <Parameter name="StepHeight (m)" inherits_from_parent="0" content_type="2" value="0.02" default_value="0.02" min="0.005" max="0.04" tooltip="Height of the step i.e. how high NAO put his feet up during the walk." id="15" />
                                            <Parameter name="TorsoWx (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-0.122173" max="0.122173" tooltip="Lateral angle of the torso during the walk.&#x0A;&#x0A;Note: A positive value means that NAO will be tilted to the right. A negative&#x0A;value means he is tilted to the left." id="16" />
                                            <Parameter name="TorsoWy (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-0.122173" max="0.122173" tooltip="Angle of the torso toward forward/backward during the walk.&#x0A;&#x0A;Note: A positive value means that NAO will be inclined forward. A negative&#x0A;value means he is inclined backward." id="17" />
                                            <Resource name="Legs" type="Lock" timeout="0" />
                                          </Box>
                                          <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="2" />
                                          <Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" />
                                        </Diagram>
                                      </BehaviorKeyframe>
                                    </BehaviorLayer>
                                  </Timeline>
                                  <Resource name="Legs" type="Lock" timeout="0" />
                                </Box>
                                <Box name="Walk To" id="8" localization="8" tooltip="Make NAO walk to a configured point relative to its current location." x="866" y="80">
                                  <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #~ self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        self.onStopped()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                  <Parameter name="Distance X (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0.2" min="-2" max="2" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="5" />
                                  <Parameter name="Distance Y (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-2" max="2" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="6" />
                                  <Parameter name="Theta (rad)" inherits_from_parent="0" content_type="2" value="-0.4" default_value="0" min="-3.14" max="3.14" tooltip="The orientation in radians for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="7" />
                                  <Parameter name="Left arm enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate left arm motion during the walk to make it more realistic." id="8" />
                                  <Parameter name="Right arm enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate right arm motion during the walk to make it more realistic." id="9" />
                                  <Parameter name="Stop walk when foot contact is lost" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If this option is activated, NAO stops walking when he loses foot contact with&#x0A;the ground. Else, he just keeps walking." id="10" />
                                  <Timeline enable="0">
                                    <BehaviorLayer name="behavior_layer1">
                                      <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                          <Box name="Walk To Advanced" id="3" localization="8" tooltip="Make NAO walk to a configured point relative to his current location with specific gait parameters." x="195" y="73">
                                            <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.motion = ALProxy("ALMotion")
        footGaitConfigMin = self.motion.getFootGaitConfig("Min")
        footGaitConfigMax = self.motion.getFootGaitConfig("Max")
        self.dFootGaitConfig = {}
        for i in range(len(footGaitConfigMin)):
            # [0] = key ("MaxStepX" for ex)
            # [1] = min
            # [2] = max
            self.dFootGaitConfig[footGaitConfigMin[i][0]] = [footGaitConfigMin[i][1], footGaitConfigMax[i][1]]

    def onLoad(self):
        pass

    def onUnload(self):
        self.motion.setWalkTargetVelocity(0.0, 0.0, 0.0, 0.0)

    def onInput_onStart(self):
        # send walk configuration to ALMotion
        self.motion.setWalkArmsEnable(self.getParameter("Left arm enabled"), self.getParameter("Right arm enabled"))
        self.motion.setMotionConfig([["ENABLE_FOOT_CONTACT_PROTECTION",self.getParameter("Stop walk when foot contact is lost")]])
        for k, v in self.dFootGaitConfig.iteritems():
            for unit in ["m", "rad", "%"]:
                try: # try for each unit and do nothing if value in gaitConfig but not in parameters
                    param = self.getParameter( str(k) + " (" + unit + ")" )
                    if( unit == "%" ):
                        param = param / 100.
                    if( len(v) == 2 ):
                        v.append( param )
                    else:
                        v[2] = param
                    break
                except:
                    pass

        gaitConfig = []
        for k, v in self.dFootGaitConfig.iteritems():
            try:
                gaitConfig.append( [k, v[2]] )
            except: # if some value added in gaitConfig but not in parameters
                pass
        # active walk process
        self.motion.walkTo(self.getParameter("Distance X (m)"), self.getParameter("Distance Y (m)"), self.getParameter("Theta (rad)"), gaitConfig)
         # The walk is finished so output
        self.onStopped() #~ activate output of the box

    def onInput_onStop(self):
        self.onUnload()]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                            <Parameter name="Distance X (m)" inherits_from_parent="1" content_type="2" value="0.2" default_value="0.2" min="-2" max="2" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="5" />
                                            <Parameter name="Distance Y (m)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-2" max="2" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="6" />
                                            <Parameter name="Theta (rad)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-3.14" max="3.14" tooltip="The orientation in radians for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="7" />
                                            <Parameter name="Left arm enabled" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="Activate left arm motion during the walk to make it more realistic." id="8" />
                                            <Parameter name="Right arm enabled" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="Activate right arm motion during the walk to make it more realistic." id="9" />
                                            <Parameter name="Stop walk when foot contact is lost" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="If this option is activated, NAO stops walking when he loses foot contact with&#x0A;the ground. Else, he just keeps walking." id="10" />
                                            <Parameter name="MaxStepX (m)" inherits_from_parent="0" content_type="2" value="0.04" default_value="0.04" min="0.001" max="0.06" tooltip="Maximum length of forward/backward step." id="11" />
                                            <Parameter name="MaxStepY (m)" inherits_from_parent="0" content_type="2" value="0.14" default_value="0.14" min="0.101" max="0.16" tooltip="Maximum length of lateral step." id="12" />
                                            <Parameter name="MaxStepTheta (rad)" inherits_from_parent="0" content_type="2" value="0.349065" default_value="0.349065" min="0.001" max="0.523598" tooltip="Maximum length of rotational step." id="13" />
                                            <Parameter name="MaxStepFrequency (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Maximum step frequency." id="14" />
                                            <Parameter name="StepHeight (m)" inherits_from_parent="0" content_type="2" value="0.02" default_value="0.02" min="0.005" max="0.04" tooltip="Height of the step i.e. how high NAO put his feet up during the walk." id="15" />
                                            <Parameter name="TorsoWx (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-0.122173" max="0.122173" tooltip="Lateral angle of the torso during the walk.&#x0A;&#x0A;Note: A positive value means that NAO will be tilted to the right. A negative&#x0A;value means he is tilted to the left." id="16" />
                                            <Parameter name="TorsoWy (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-0.122173" max="0.122173" tooltip="Angle of the torso toward forward/backward during the walk.&#x0A;&#x0A;Note: A positive value means that NAO will be inclined forward. A negative&#x0A;value means he is inclined backward." id="17" />
                                            <Resource name="Legs" type="Lock" timeout="0" />
                                          </Box>
                                          <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="2" />
                                          <Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" />
                                        </Diagram>
                                      </BehaviorKeyframe>
                                    </BehaviorLayer>
                                  </Timeline>
                                  <Resource name="Legs" type="Lock" timeout="0" />
                                </Box>
                                <Box name="left" id="9" localization="8" tooltip='Robot will go to the position &quot;left&#x0A;Position description : &#x0A;' x="332" y="325">
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="20">
                                    <ActuatorList model="nao">
                                      <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                        <Key frame="20" value="26.0135" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-0.969217" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="83.3189" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="8.96255" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-52.5617" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-21.7948" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-62.4934" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                        <Key frame="20" value="0.2112" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="90.3551" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-14.0651" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="58.7093" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="37.9716" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="42.1856" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                        <Key frame="20" value="0.258" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-13.3571" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="2.46338" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="12.2194" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-4.13332" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="3.24959" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-2.81013" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-8.25942" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="11.5114" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-5.29" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="5.89115" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="6.77007" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                </Box>
                                <Box name="Pattern Images" id="10" localization="8" tooltip="Enter tooltip here" x="448" y="387">
                                  <bitmap>media/images/box/box-diagram.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import Image
import ImageDraw
import time
import os,sys
import cv2 as cv

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):

        flag = self.showNaoImage()
        if (flag == 1):
            global imNum
            imNum = imNum+1
            self.detectionGood()
            self.onUnload()
            #self.onStopped()
        else:
            self.detectionFailure()
            self.onUnload()
            #self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        #self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass

    def sayWord(self,s):
        ttsProxy=ALProxy("ALTextToSpeech")
        ttsProxy.say(s)


    def showNaoImage(self):

        camProxy = ALProxy("ALVideoDevice")
        resolution = 2    # VGA
        colorSpace = 11   # RGB
        found = 0

        videoClient = camProxy.subscribe("python_client", resolution, colorSpace, 5)

        t0 = time.time()

        naoImage = camProxy.getImageRemote(videoClient)

        # Get the image size and pixel array.
        imageWidth = naoImage[0]
        imageHeight = naoImage[1]
        array = naoImage[6]

        # Create a PIL Image from our pixel array.
        im = Image.fromstring("RGB", (imageWidth, imageHeight), array)

        # Create ipl Image to use with opencv
        cv_img = cv.CreateImageHeader(im.size, cv.IPL_DEPTH_8U, 3)  # RGB image
        cv.SetData(cv_img, im.tostring(), im.size[0]*3)
        cv.CvtColor(cv_img, cv_img, cv.CV_RGB2BGR)

        gray_image=cv.CreateImage(cv.GetSize(cv_img),8,1)
        cv.CvtColor(cv_img,gray_image,cv.CV_BGR2GRAY)


        (found,corners)=cv.FindChessboardCorners(gray_image,(7,5),cv.CV_CALIB_CB_ADAPTIVE_THRESH| cv.CV_CALIB_CB_FILTER_QUADS)
        if found == 1:

            self.sayWord("Corners Detected")

            self.sayWord("Saving Image")

        else:

            self.sayWord("Corners can not be detected")

            flag = 0
            camProxy.unsubscribe(videoClient)
            return flag


        t1 = time.time()

        # Time the image transfer.
        self.logger.info("acquisition delay "+str(t1 - t0))

        camProxy.unsubscribe(videoClient)


        self.logger.info(str(imNum))

        # Save the image.
        imName = "image"+str(imNum)+".jpg"
        im.save("/home/nao/SavedImages/"+imName)
        self.sayWord("Image"+str(imNum)+"Saved")

        flag = 1

        return flag]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="detectionFailure" type="1" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                  <Output name="detectionGood" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                </Box>
                                <Box name="right" id="13" localization="8" tooltip='Robot will go to the position &quot;right&#x0A;Position description : &#x0A;' x="604" y="492">
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="20">
                                    <ActuatorList model="nao">
                                      <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-32.9618" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-1.145" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="83.4068" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="8.96255" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-52.5617" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-21.7948" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-62.4934" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                        <Key frame="20" value="0.2108" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="90.3551" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-14.0651" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="58.7093" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="37.8837" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="42.1856" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                        <Key frame="20" value="0.258" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-13.445" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="2.46338" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="12.2194" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-4.13332" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="2.89802" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-2.81013" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-8.25942" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="11.1598" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-5.29" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="5.53958" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="6.77007" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                </Box>
                                <Box name="Init" id="17" localization="8" tooltip='Robot will go to the position &quot;Init&#x0A;Position description : Nao is ready to do anything from this position !&#x0A;' x="602" y="392">
                                  <bitmap>media/images/positions/Pos_init.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="20">
                                    <ActuatorList model="nao">
                                      <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-60" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="60" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-25" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="40" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-25" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="40" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                </Box>
                                <Box name="Pattern Images" id="18" localization="8" tooltip="Enter tooltip here" x="809" y="472">
                                  <bitmap>media/images/box/box-diagram.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import Image
import ImageDraw
import time
import os,sys
import cv2 as cv

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):

        flag = self.showNaoImage()
        if (flag == 1):
            global imNum
            imNum = imNum+1
            self.detectionGood()
            self.onUnload()
            #self.onStopped()
        else:
            self.detectionFailure()
            self.onUnload()
            #self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        #self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass

    def sayWord(self,s):
        ttsProxy=ALProxy("ALTextToSpeech")
        ttsProxy.say(s)


    def showNaoImage(self):

        camProxy = ALProxy("ALVideoDevice")
        resolution = 2    # VGA
        colorSpace = 11   # RGB
        found = 0

        videoClient = camProxy.subscribe("python_client", resolution, colorSpace, 5)

        t0 = time.time()

        naoImage = camProxy.getImageRemote(videoClient)

        # Get the image size and pixel array.
        imageWidth = naoImage[0]
        imageHeight = naoImage[1]
        array = naoImage[6]

        # Create a PIL Image from our pixel array.
        im = Image.fromstring("RGB", (imageWidth, imageHeight), array)

        # Create ipl Image to use with opencv
        cv_img = cv.CreateImageHeader(im.size, cv.IPL_DEPTH_8U, 3)  # RGB image
        cv.SetData(cv_img, im.tostring(), im.size[0]*3)
        cv.CvtColor(cv_img, cv_img, cv.CV_RGB2BGR)

        gray_image=cv.CreateImage(cv.GetSize(cv_img),8,1)
        cv.CvtColor(cv_img,gray_image,cv.CV_BGR2GRAY)


        (found,corners)=cv.FindChessboardCorners(gray_image,(7,5),cv.CV_CALIB_CB_ADAPTIVE_THRESH| cv.CV_CALIB_CB_FILTER_QUADS)
        if found == 1:

            self.sayWord("Corners Detected")

            self.sayWord("Saving Image")

        else:

            self.sayWord("Corners can not be detected")

            flag = 0
            camProxy.unsubscribe(videoClient)
            return flag


        t1 = time.time()

        # Time the image transfer.
        self.logger.info("acquisition delay "+str(t1 - t0))

        camProxy.unsubscribe(videoClient)


        self.logger.info(str(imNum))

        # Save the image.
        imName = "image"+str(imNum)+".jpg"
        im.save("/home/nao/SavedImages/"+imName)
        self.sayWord("Image"+str(imNum)+"Saved")

        flag = 1

        return flag]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="detectionFailure" type="1" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                  <Output name="detectionGood" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                </Box>
                                <Link inputowner="12" indexofinput="2" outputowner="11" indexofoutput="4" />
                                <Link inputowner="14" indexofinput="2" outputowner="12" indexofoutput="4" />
                                <Link inputowner="15" indexofinput="2" outputowner="14" indexofoutput="4" />
                                <Link inputowner="16" indexofinput="2" outputowner="15" indexofoutput="4" />
                                <Link inputowner="11" indexofinput="2" outputowner="0" indexofoutput="2" />
                                <Link inputowner="0" indexofinput="3" outputowner="11" indexofoutput="5" />
                                <Link inputowner="26" indexofinput="2" outputowner="14" indexofoutput="5" />
                                <Link inputowner="1" indexofinput="2" outputowner="16" indexofoutput="5" />
                                <Link inputowner="11" indexofinput="2" outputowner="3" indexofoutput="4" />
                                <Link inputowner="2" indexofinput="2" outputowner="16" indexofoutput="4" />
                                <Link inputowner="4" indexofinput="2" outputowner="2" indexofoutput="4" />
                                <Link inputowner="5" indexofinput="2" outputowner="4" indexofoutput="4" />
                                <Link inputowner="6" indexofinput="2" outputowner="5" indexofoutput="5" />
                                <Link inputowner="0" indexofinput="3" outputowner="6" indexofoutput="4" />
                                <Link inputowner="7" indexofinput="2" outputowner="26" indexofoutput="4" />
                                <Link inputowner="0" indexofinput="3" outputowner="7" indexofoutput="4" />
                                <Link inputowner="8" indexofinput="2" outputowner="1" indexofoutput="4" />
                                <Link inputowner="0" indexofinput="3" outputowner="8" indexofoutput="4" />
                                <Link inputowner="9" indexofinput="2" outputowner="5" indexofoutput="4" />
                                <Link inputowner="13" indexofinput="2" outputowner="10" indexofoutput="4" />
                                <Link inputowner="17" indexofinput="2" outputowner="10" indexofoutput="5" />
                                <Link inputowner="10" indexofinput="2" outputowner="9" indexofoutput="4" />
                                <Link inputowner="7" indexofinput="2" outputowner="17" indexofoutput="4" />
                                <Link inputowner="18" indexofinput="2" outputowner="13" indexofoutput="4" />
                                <Link inputowner="3" indexofinput="2" outputowner="18" indexofoutput="4" />
                                <Link inputowner="1" indexofinput="2" outputowner="18" indexofoutput="5" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                      </Box>
                      <Box name="PosesForImages" id="7" localization="8" tooltip="Normal Pose/HeadLeft/HeadRight" x="767" y="308">
                        <bitmap>media/images/box/box-diagram.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="Pattern Images_onStart" type="0" type_size="1" nature="2" inner="0" tooltip="This input has been automatically generated&#x0A;by converting several boxes into a single box." id="2" />
                        <Output name="PatternImages_detectionGood" type="0" type_size="1" nature="2" inner="0" tooltip="This output has been automatically generated&#x0A;by converting several boxes into a single box." id="3" />
                        <Timeline enable="0">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram scale="47.1937">
                                <Box name="Pattern Images" id="11" localization="8" tooltip="Enter tooltip here" x="110" y="180">
                                  <bitmap>media/images/box/box-diagram.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import Image
import ImageDraw
import time
import os,sys
import cv2 as cv

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):

        flag = self.showNaoImage()
        if (flag == 1):
            global imNum
            imNum = imNum+1
            self.detectionGood()
            self.onUnload()
            #self.onStopped()
        else:
            self.detectionFailure()
            self.onUnload()
            #self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        #self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass

    def sayWord(self,s):
        ttsProxy=ALProxy("ALTextToSpeech")
        ttsProxy.say(s)


    def showNaoImage(self):

        camProxy = ALProxy("ALVideoDevice")
        resolution = 2    # VGA
        colorSpace = 11   # RGB
        found = 0

        videoClient = camProxy.subscribe("python_client", resolution, colorSpace, 5)

        t0 = time.time()

        naoImage = camProxy.getImageRemote(videoClient)

        # Get the image size and pixel array.
        imageWidth = naoImage[0]
        imageHeight = naoImage[1]
        array = naoImage[6]

        # Create a PIL Image from our pixel array.
        im = Image.fromstring("RGB", (imageWidth, imageHeight), array)

        # Create ipl Image to use with opencv
        cv_img = cv.CreateImageHeader(im.size, cv.IPL_DEPTH_8U, 3)  # RGB image
        cv.SetData(cv_img, im.tostring(), im.size[0]*3)
        cv.CvtColor(cv_img, cv_img, cv.CV_RGB2BGR)

        gray_image=cv.CreateImage(cv.GetSize(cv_img),8,1)
        cv.CvtColor(cv_img,gray_image,cv.CV_BGR2GRAY)


        (found,corners)=cv.FindChessboardCorners(gray_image,(7,5),cv.CV_CALIB_CB_ADAPTIVE_THRESH| cv.CV_CALIB_CB_FILTER_QUADS)
        if found == 1:

            self.sayWord("Corners Detected")

            self.sayWord("Saving Image")

        else:

            self.sayWord("Corners can not be detected")

            flag = 0
            camProxy.unsubscribe(videoClient)
            return flag


        t1 = time.time()

        # Time the image transfer.
        self.logger.info("acquisition delay "+str(t1 - t0))

        camProxy.unsubscribe(videoClient)


        self.logger.info(str(imNum))

        # Save the image.
        imName = "image"+str(imNum)+".jpg"
        im.save("/home/nao/SavedImages/"+imName)
        self.sayWord("Image"+str(imNum)+"Saved")

        flag = 1

        return flag]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="detectionFailure" type="1" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                  <Output name="detectionGood" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                </Box>
                                <Box name="left" id="12" localization="8" tooltip='Robot will go to the position &quot;left&#x0A;Position description : &#x0A;' x="77" y="29">
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="20">
                                    <ActuatorList model="nao">
                                      <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                        <Key frame="20" value="26.0135" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-0.969217" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="83.3189" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="8.96255" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-52.5617" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-21.7948" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-62.4934" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                        <Key frame="20" value="0.2112" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="90.3551" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-14.0651" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="58.7093" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="37.9716" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="42.1856" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                        <Key frame="20" value="0.258" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-13.3571" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="2.46338" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="12.2194" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-4.13332" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="3.24959" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-2.81013" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-8.25942" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="11.5114" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-5.29" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="5.89115" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="6.77007" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                </Box>
                                <Box name="Pattern Images" id="14" localization="8" tooltip="Enter tooltip here" x="200" y="31">
                                  <bitmap>media/images/box/box-diagram.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import Image
import ImageDraw
import time
import os,sys
import cv2 as cv

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):

        flag = self.showNaoImage()
        if (flag == 1):
            global imNum
            imNum = imNum+1
            self.detectionGood()
            self.onUnload()
            #self.onStopped()
        else:
            self.detectionFailure()
            self.onUnload()
            #self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        #self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass

    def sayWord(self,s):
        ttsProxy=ALProxy("ALTextToSpeech")
        ttsProxy.say(s)


    def showNaoImage(self):

        camProxy = ALProxy("ALVideoDevice")
        resolution = 2    # VGA
        colorSpace = 11   # RGB
        found = 0

        videoClient = camProxy.subscribe("python_client", resolution, colorSpace, 5)

        t0 = time.time()

        naoImage = camProxy.getImageRemote(videoClient)

        # Get the image size and pixel array.
        imageWidth = naoImage[0]
        imageHeight = naoImage[1]
        array = naoImage[6]

        # Create a PIL Image from our pixel array.
        im = Image.fromstring("RGB", (imageWidth, imageHeight), array)

        # Create ipl Image to use with opencv
        cv_img = cv.CreateImageHeader(im.size, cv.IPL_DEPTH_8U, 3)  # RGB image
        cv.SetData(cv_img, im.tostring(), im.size[0]*3)
        cv.CvtColor(cv_img, cv_img, cv.CV_RGB2BGR)

        gray_image=cv.CreateImage(cv.GetSize(cv_img),8,1)
        cv.CvtColor(cv_img,gray_image,cv.CV_BGR2GRAY)


        (found,corners)=cv.FindChessboardCorners(gray_image,(7,5),cv.CV_CALIB_CB_ADAPTIVE_THRESH| cv.CV_CALIB_CB_FILTER_QUADS)
        if found == 1:

            self.sayWord("Corners Detected")

            self.sayWord("Saving Image")

        else:

            self.sayWord("Corners can not be detected")

            flag = 0
            camProxy.unsubscribe(videoClient)
            return flag


        t1 = time.time()

        # Time the image transfer.
        self.logger.info("acquisition delay "+str(t1 - t0))

        camProxy.unsubscribe(videoClient)


        self.logger.info(str(imNum))

        # Save the image.
        imName = "image"+str(imNum)+".jpg"
        im.save("/home/nao/SavedImages/"+imName)
        self.sayWord("Image"+str(imNum)+"Saved")

        flag = 1

        return flag]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="detectionFailure" type="1" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                  <Output name="detectionGood" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                </Box>
                                <Box name="right" id="15" localization="8" tooltip='Robot will go to the position &quot;right&#x0A;Position description : &#x0A;' x="370" y="113">
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="20">
                                    <ActuatorList model="nao">
                                      <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-32.9618" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-1.145" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="83.4068" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="8.96255" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-52.5617" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-21.7948" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-62.4934" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                        <Key frame="20" value="0.2108" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="90.3551" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-14.0651" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="58.7093" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="37.8837" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="42.1856" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                        <Key frame="20" value="0.258" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-13.445" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="2.46338" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="12.2194" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-4.13332" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="2.89802" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-2.81013" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-8.25942" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="11.1598" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-5.29" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="5.53958" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="6.77007" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                </Box>
                                <Box name="Pattern Images" id="16" localization="8" tooltip="Enter tooltip here" x="517" y="128">
                                  <bitmap>media/images/box/box-diagram.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import Image
import ImageDraw
import time
import os,sys
import cv2 as cv

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):

        flag = self.showNaoImage()
        if (flag == 1):
            global imNum
            imNum = imNum+1
            self.detectionGood()
            self.onUnload()
            #self.onStopped()
        else:
            self.detectionFailure()
            self.onUnload()
            #self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        #self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass

    def sayWord(self,s):
        ttsProxy=ALProxy("ALTextToSpeech")
        ttsProxy.say(s)


    def showNaoImage(self):

        camProxy = ALProxy("ALVideoDevice")
        resolution = 2    # VGA
        colorSpace = 11   # RGB
        found = 0

        videoClient = camProxy.subscribe("python_client", resolution, colorSpace, 5)

        t0 = time.time()

        naoImage = camProxy.getImageRemote(videoClient)

        # Get the image size and pixel array.
        imageWidth = naoImage[0]
        imageHeight = naoImage[1]
        array = naoImage[6]

        # Create a PIL Image from our pixel array.
        im = Image.fromstring("RGB", (imageWidth, imageHeight), array)

        # Create ipl Image to use with opencv
        cv_img = cv.CreateImageHeader(im.size, cv.IPL_DEPTH_8U, 3)  # RGB image
        cv.SetData(cv_img, im.tostring(), im.size[0]*3)
        cv.CvtColor(cv_img, cv_img, cv.CV_RGB2BGR)

        gray_image=cv.CreateImage(cv.GetSize(cv_img),8,1)
        cv.CvtColor(cv_img,gray_image,cv.CV_BGR2GRAY)


        (found,corners)=cv.FindChessboardCorners(gray_image,(7,5),cv.CV_CALIB_CB_ADAPTIVE_THRESH| cv.CV_CALIB_CB_FILTER_QUADS)
        if found == 1:

            self.sayWord("Corners Detected")

            self.sayWord("Saving Image")

        else:

            self.sayWord("Corners can not be detected")

            flag = 0
            camProxy.unsubscribe(videoClient)
            return flag


        t1 = time.time()

        # Time the image transfer.
        self.logger.info("acquisition delay "+str(t1 - t0))

        camProxy.unsubscribe(videoClient)


        self.logger.info(str(imNum))

        # Save the image.
        imName = "image"+str(imNum)+".jpg"
        im.save("/home/nao/SavedImages/"+imName)
        self.sayWord("Image"+str(imNum)+"Saved")

        flag = 1

        return flag]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="detectionFailure" type="1" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                  <Output name="detectionGood" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                </Box>
                                <Box name="Init" id="26" localization="8" tooltip='Robot will go to the position &quot;Init&#x0A;Position description : Nao is ready to do anything from this position !&#x0A;' x="368" y="13">
                                  <bitmap>media/images/positions/Pos_init.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="20">
                                    <ActuatorList model="nao">
                                      <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-60" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="60" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-25" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="40" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-25" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="40" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                </Box>
                                <Box name="Init" id="1" localization="8" tooltip='Robot will go to the position &quot;Init&#x0A;Position description : Nao is ready to do anything from this position !&#x0A;' x="715" y="51">
                                  <bitmap>media/images/positions/Pos_init.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="20">
                                    <ActuatorList model="nao">
                                      <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-60" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="60" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-25" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="40" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-25" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="40" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                </Box>
                                <Box name="Walk To" id="3" localization="8" tooltip="Make NAO walk to a configured point relative to its current location." x="1073" y="442">
                                  <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #~ self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        self.onStopped()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                  <Parameter name="Distance X (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0.2" min="-2" max="2" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="5" />
                                  <Parameter name="Distance Y (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-2" max="2" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="6" />
                                  <Parameter name="Theta (rad)" inherits_from_parent="0" content_type="2" value="1.3" default_value="0" min="-3.14" max="3.14" tooltip="The orientation in radians for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="7" />
                                  <Parameter name="Left arm enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate left arm motion during the walk to make it more realistic." id="8" />
                                  <Parameter name="Right arm enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate right arm motion during the walk to make it more realistic." id="9" />
                                  <Parameter name="Stop walk when foot contact is lost" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If this option is activated, NAO stops walking when he loses foot contact with&#x0A;the ground. Else, he just keeps walking." id="10" />
                                  <Timeline enable="0">
                                    <BehaviorLayer name="behavior_layer1">
                                      <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                          <Box name="Walk To Advanced" id="3" localization="8" tooltip="Make NAO walk to a configured point relative to his current location with specific gait parameters." x="195" y="73">
                                            <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.motion = ALProxy("ALMotion")
        footGaitConfigMin = self.motion.getFootGaitConfig("Min")
        footGaitConfigMax = self.motion.getFootGaitConfig("Max")
        self.dFootGaitConfig = {}
        for i in range(len(footGaitConfigMin)):
            # [0] = key ("MaxStepX" for ex)
            # [1] = min
            # [2] = max
            self.dFootGaitConfig[footGaitConfigMin[i][0]] = [footGaitConfigMin[i][1], footGaitConfigMax[i][1]]

    def onLoad(self):
        pass

    def onUnload(self):
        self.motion.setWalkTargetVelocity(0.0, 0.0, 0.0, 0.0)

    def onInput_onStart(self):
        # send walk configuration to ALMotion
        self.motion.setWalkArmsEnable(self.getParameter("Left arm enabled"), self.getParameter("Right arm enabled"))
        self.motion.setMotionConfig([["ENABLE_FOOT_CONTACT_PROTECTION",self.getParameter("Stop walk when foot contact is lost")]])
        for k, v in self.dFootGaitConfig.iteritems():
            for unit in ["m", "rad", "%"]:
                try: # try for each unit and do nothing if value in gaitConfig but not in parameters
                    param = self.getParameter( str(k) + " (" + unit + ")" )
                    if( unit == "%" ):
                        param = param / 100.
                    if( len(v) == 2 ):
                        v.append( param )
                    else:
                        v[2] = param
                    break
                except:
                    pass

        gaitConfig = []
        for k, v in self.dFootGaitConfig.iteritems():
            try:
                gaitConfig.append( [k, v[2]] )
            except: # if some value added in gaitConfig but not in parameters
                pass
        # active walk process
        self.motion.walkTo(self.getParameter("Distance X (m)"), self.getParameter("Distance Y (m)"), self.getParameter("Theta (rad)"), gaitConfig)
         # The walk is finished so output
        self.onStopped() #~ activate output of the box

    def onInput_onStop(self):
        self.onUnload()]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                            <Parameter name="Distance X (m)" inherits_from_parent="1" content_type="2" value="0.2" default_value="0.2" min="-2" max="2" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="5" />
                                            <Parameter name="Distance Y (m)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-2" max="2" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="6" />
                                            <Parameter name="Theta (rad)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-3.14" max="3.14" tooltip="The orientation in radians for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="7" />
                                            <Parameter name="Left arm enabled" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="Activate left arm motion during the walk to make it more realistic." id="8" />
                                            <Parameter name="Right arm enabled" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="Activate right arm motion during the walk to make it more realistic." id="9" />
                                            <Parameter name="Stop walk when foot contact is lost" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="If this option is activated, NAO stops walking when he loses foot contact with&#x0A;the ground. Else, he just keeps walking." id="10" />
                                            <Parameter name="MaxStepX (m)" inherits_from_parent="0" content_type="2" value="0.04" default_value="0.04" min="0.001" max="0.06" tooltip="Maximum length of forward/backward step." id="11" />
                                            <Parameter name="MaxStepY (m)" inherits_from_parent="0" content_type="2" value="0.14" default_value="0.14" min="0.101" max="0.16" tooltip="Maximum length of lateral step." id="12" />
                                            <Parameter name="MaxStepTheta (rad)" inherits_from_parent="0" content_type="2" value="0.349065" default_value="0.349065" min="0.001" max="0.523598" tooltip="Maximum length of rotational step." id="13" />
                                            <Parameter name="MaxStepFrequency (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Maximum step frequency." id="14" />
                                            <Parameter name="StepHeight (m)" inherits_from_parent="0" content_type="2" value="0.02" default_value="0.02" min="0.005" max="0.04" tooltip="Height of the step i.e. how high NAO put his feet up during the walk." id="15" />
                                            <Parameter name="TorsoWx (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-0.122173" max="0.122173" tooltip="Lateral angle of the torso during the walk.&#x0A;&#x0A;Note: A positive value means that NAO will be tilted to the right. A negative&#x0A;value means he is tilted to the left." id="16" />
                                            <Parameter name="TorsoWy (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-0.122173" max="0.122173" tooltip="Angle of the torso toward forward/backward during the walk.&#x0A;&#x0A;Note: A positive value means that NAO will be inclined forward. A negative&#x0A;value means he is inclined backward." id="17" />
                                            <Resource name="Legs" type="Lock" timeout="0" />
                                          </Box>
                                          <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="2" />
                                          <Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" />
                                        </Diagram>
                                      </BehaviorKeyframe>
                                    </BehaviorLayer>
                                  </Timeline>
                                  <Resource name="Legs" type="Lock" timeout="0" />
                                </Box>
                                <Box name="Init" id="2" localization="8" tooltip='Robot will go to the position &quot;Init&#x0A;Position description : Nao is ready to do anything from this position !&#x0A;' x="981" y="152">
                                  <bitmap>media/images/positions/Pos_init.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="20">
                                    <ActuatorList model="nao">
                                      <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-60" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="60" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-25" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="40" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-25" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="40" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                </Box>
                                <Box name="Walk To" id="4" localization="8" tooltip="Make NAO walk to a configured point relative to its current location." x="66" y="389">
                                  <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #~ self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        self.onStopped()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                  <Parameter name="Distance X (m)" inherits_from_parent="0" content_type="2" value="-0.1" default_value="0.2" min="-2" max="2" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="5" />
                                  <Parameter name="Distance Y (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-2" max="2" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="6" />
                                  <Parameter name="Theta (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-3.14" max="3.14" tooltip="The orientation in radians for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="7" />
                                  <Parameter name="Left arm enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate left arm motion during the walk to make it more realistic." id="8" />
                                  <Parameter name="Right arm enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate right arm motion during the walk to make it more realistic." id="9" />
                                  <Parameter name="Stop walk when foot contact is lost" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If this option is activated, NAO stops walking when he loses foot contact with&#x0A;the ground. Else, he just keeps walking." id="10" />
                                  <Timeline enable="0">
                                    <BehaviorLayer name="behavior_layer1">
                                      <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                          <Box name="Walk To Advanced" id="3" localization="8" tooltip="Make NAO walk to a configured point relative to his current location with specific gait parameters." x="195" y="73">
                                            <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.motion = ALProxy("ALMotion")
        footGaitConfigMin = self.motion.getFootGaitConfig("Min")
        footGaitConfigMax = self.motion.getFootGaitConfig("Max")
        self.dFootGaitConfig = {}
        for i in range(len(footGaitConfigMin)):
            # [0] = key ("MaxStepX" for ex)
            # [1] = min
            # [2] = max
            self.dFootGaitConfig[footGaitConfigMin[i][0]] = [footGaitConfigMin[i][1], footGaitConfigMax[i][1]]

    def onLoad(self):
        pass

    def onUnload(self):
        self.motion.setWalkTargetVelocity(0.0, 0.0, 0.0, 0.0)

    def onInput_onStart(self):
        # send walk configuration to ALMotion
        self.motion.setWalkArmsEnable(self.getParameter("Left arm enabled"), self.getParameter("Right arm enabled"))
        self.motion.setMotionConfig([["ENABLE_FOOT_CONTACT_PROTECTION",self.getParameter("Stop walk when foot contact is lost")]])
        for k, v in self.dFootGaitConfig.iteritems():
            for unit in ["m", "rad", "%"]:
                try: # try for each unit and do nothing if value in gaitConfig but not in parameters
                    param = self.getParameter( str(k) + " (" + unit + ")" )
                    if( unit == "%" ):
                        param = param / 100.
                    if( len(v) == 2 ):
                        v.append( param )
                    else:
                        v[2] = param
                    break
                except:
                    pass

        gaitConfig = []
        for k, v in self.dFootGaitConfig.iteritems():
            try:
                gaitConfig.append( [k, v[2]] )
            except: # if some value added in gaitConfig but not in parameters
                pass
        # active walk process
        self.motion.walkTo(self.getParameter("Distance X (m)"), self.getParameter("Distance Y (m)"), self.getParameter("Theta (rad)"), gaitConfig)
         # The walk is finished so output
        self.onStopped() #~ activate output of the box

    def onInput_onStop(self):
        self.onUnload()]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                            <Parameter name="Distance X (m)" inherits_from_parent="1" content_type="2" value="0.2" default_value="0.2" min="-2" max="2" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="5" />
                                            <Parameter name="Distance Y (m)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-2" max="2" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="6" />
                                            <Parameter name="Theta (rad)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-3.14" max="3.14" tooltip="The orientation in radians for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="7" />
                                            <Parameter name="Left arm enabled" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="Activate left arm motion during the walk to make it more realistic." id="8" />
                                            <Parameter name="Right arm enabled" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="Activate right arm motion during the walk to make it more realistic." id="9" />
                                            <Parameter name="Stop walk when foot contact is lost" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="If this option is activated, NAO stops walking when he loses foot contact with&#x0A;the ground. Else, he just keeps walking." id="10" />
                                            <Parameter name="MaxStepX (m)" inherits_from_parent="0" content_type="2" value="0.04" default_value="0.04" min="0.001" max="0.06" tooltip="Maximum length of forward/backward step." id="11" />
                                            <Parameter name="MaxStepY (m)" inherits_from_parent="0" content_type="2" value="0.14" default_value="0.14" min="0.101" max="0.16" tooltip="Maximum length of lateral step." id="12" />
                                            <Parameter name="MaxStepTheta (rad)" inherits_from_parent="0" content_type="2" value="0.349065" default_value="0.349065" min="0.001" max="0.523598" tooltip="Maximum length of rotational step." id="13" />
                                            <Parameter name="MaxStepFrequency (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Maximum step frequency." id="14" />
                                            <Parameter name="StepHeight (m)" inherits_from_parent="0" content_type="2" value="0.02" default_value="0.02" min="0.005" max="0.04" tooltip="Height of the step i.e. how high NAO put his feet up during the walk." id="15" />
                                            <Parameter name="TorsoWx (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-0.122173" max="0.122173" tooltip="Lateral angle of the torso during the walk.&#x0A;&#x0A;Note: A positive value means that NAO will be tilted to the right. A negative&#x0A;value means he is tilted to the left." id="16" />
                                            <Parameter name="TorsoWy (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-0.122173" max="0.122173" tooltip="Angle of the torso toward forward/backward during the walk.&#x0A;&#x0A;Note: A positive value means that NAO will be inclined forward. A negative&#x0A;value means he is inclined backward." id="17" />
                                            <Resource name="Legs" type="Lock" timeout="0" />
                                          </Box>
                                          <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="2" />
                                          <Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" />
                                        </Diagram>
                                      </BehaviorKeyframe>
                                    </BehaviorLayer>
                                  </Timeline>
                                  <Resource name="Legs" type="Lock" timeout="0" />
                                </Box>
                                <Box name="Pattern Images" id="5" localization="8" tooltip="Enter tooltip here" x="207" y="395">
                                  <bitmap>media/images/box/box-diagram.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import Image
import ImageDraw
import time
import os,sys
import cv2 as cv

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):

        flag = self.showNaoImage()
        if (flag == 1):
            global imNum
            imNum = imNum+1
            self.detectionGood()
            self.onUnload()
            #self.onStopped()
        else:
            self.detectionFailure()
            self.onUnload()
            #self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        #self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass

    def sayWord(self,s):
        ttsProxy=ALProxy("ALTextToSpeech")
        ttsProxy.say(s)


    def showNaoImage(self):

        camProxy = ALProxy("ALVideoDevice")
        resolution = 2    # VGA
        colorSpace = 11   # RGB
        found = 0

        videoClient = camProxy.subscribe("python_client", resolution, colorSpace, 5)

        t0 = time.time()

        naoImage = camProxy.getImageRemote(videoClient)

        # Get the image size and pixel array.
        imageWidth = naoImage[0]
        imageHeight = naoImage[1]
        array = naoImage[6]

        # Create a PIL Image from our pixel array.
        im = Image.fromstring("RGB", (imageWidth, imageHeight), array)

        # Create ipl Image to use with opencv
        cv_img = cv.CreateImageHeader(im.size, cv.IPL_DEPTH_8U, 3)  # RGB image
        cv.SetData(cv_img, im.tostring(), im.size[0]*3)
        cv.CvtColor(cv_img, cv_img, cv.CV_RGB2BGR)

        gray_image=cv.CreateImage(cv.GetSize(cv_img),8,1)
        cv.CvtColor(cv_img,gray_image,cv.CV_BGR2GRAY)


        (found,corners)=cv.FindChessboardCorners(gray_image,(7,5),cv.CV_CALIB_CB_ADAPTIVE_THRESH| cv.CV_CALIB_CB_FILTER_QUADS)
        if found == 1:

            self.sayWord("Corners Detected")

            self.sayWord("Saving Image")

        else:

            self.sayWord("Corners can not be detected")

            flag = 0
            camProxy.unsubscribe(videoClient)
            return flag


        t1 = time.time()

        # Time the image transfer.
        self.logger.info("acquisition delay "+str(t1 - t0))

        camProxy.unsubscribe(videoClient)


        self.logger.info(str(imNum))

        # Save the image.
        imName = "image"+str(imNum)+".jpg"
        im.save("/home/nao/SavedImages/"+imName)
        self.sayWord("Image"+str(imNum)+"Saved")

        flag = 1

        return flag]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="detectionFailure" type="1" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                  <Output name="detectionGood" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                </Box>
                                <Box name="Init" id="6" localization="8" tooltip='Robot will go to the position &quot;Init&#x0A;Position description : Nao is ready to do anything from this position !&#x0A;' x="683" y="217">
                                  <bitmap>media/images/positions/Pos_init.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="20">
                                    <ActuatorList model="nao">
                                      <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-60" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="60" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-25" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="40" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-25" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="40" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                </Box>
                                <Box name="Walk To" id="7" localization="8" tooltip="Make NAO walk to a configured point relative to its current location." x="517" y="15">
                                  <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #~ self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        self.onStopped()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                  <Parameter name="Distance X (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0.2" min="-2" max="2" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="5" />
                                  <Parameter name="Distance Y (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-2" max="2" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="6" />
                                  <Parameter name="Theta (rad)" inherits_from_parent="0" content_type="2" value="0.4" default_value="0" min="-3.14" max="3.14" tooltip="The orientation in radians for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="7" />
                                  <Parameter name="Left arm enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate left arm motion during the walk to make it more realistic." id="8" />
                                  <Parameter name="Right arm enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate right arm motion during the walk to make it more realistic." id="9" />
                                  <Parameter name="Stop walk when foot contact is lost" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If this option is activated, NAO stops walking when he loses foot contact with&#x0A;the ground. Else, he just keeps walking." id="10" />
                                  <Timeline enable="0">
                                    <BehaviorLayer name="behavior_layer1">
                                      <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                          <Box name="Walk To Advanced" id="3" localization="8" tooltip="Make NAO walk to a configured point relative to his current location with specific gait parameters." x="195" y="73">
                                            <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.motion = ALProxy("ALMotion")
        footGaitConfigMin = self.motion.getFootGaitConfig("Min")
        footGaitConfigMax = self.motion.getFootGaitConfig("Max")
        self.dFootGaitConfig = {}
        for i in range(len(footGaitConfigMin)):
            # [0] = key ("MaxStepX" for ex)
            # [1] = min
            # [2] = max
            self.dFootGaitConfig[footGaitConfigMin[i][0]] = [footGaitConfigMin[i][1], footGaitConfigMax[i][1]]

    def onLoad(self):
        pass

    def onUnload(self):
        self.motion.setWalkTargetVelocity(0.0, 0.0, 0.0, 0.0)

    def onInput_onStart(self):
        # send walk configuration to ALMotion
        self.motion.setWalkArmsEnable(self.getParameter("Left arm enabled"), self.getParameter("Right arm enabled"))
        self.motion.setMotionConfig([["ENABLE_FOOT_CONTACT_PROTECTION",self.getParameter("Stop walk when foot contact is lost")]])
        for k, v in self.dFootGaitConfig.iteritems():
            for unit in ["m", "rad", "%"]:
                try: # try for each unit and do nothing if value in gaitConfig but not in parameters
                    param = self.getParameter( str(k) + " (" + unit + ")" )
                    if( unit == "%" ):
                        param = param / 100.
                    if( len(v) == 2 ):
                        v.append( param )
                    else:
                        v[2] = param
                    break
                except:
                    pass

        gaitConfig = []
        for k, v in self.dFootGaitConfig.iteritems():
            try:
                gaitConfig.append( [k, v[2]] )
            except: # if some value added in gaitConfig but not in parameters
                pass
        # active walk process
        self.motion.walkTo(self.getParameter("Distance X (m)"), self.getParameter("Distance Y (m)"), self.getParameter("Theta (rad)"), gaitConfig)
         # The walk is finished so output
        self.onStopped() #~ activate output of the box

    def onInput_onStop(self):
        self.onUnload()]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                            <Parameter name="Distance X (m)" inherits_from_parent="1" content_type="2" value="0.2" default_value="0.2" min="-2" max="2" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="5" />
                                            <Parameter name="Distance Y (m)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-2" max="2" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="6" />
                                            <Parameter name="Theta (rad)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-3.14" max="3.14" tooltip="The orientation in radians for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="7" />
                                            <Parameter name="Left arm enabled" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="Activate left arm motion during the walk to make it more realistic." id="8" />
                                            <Parameter name="Right arm enabled" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="Activate right arm motion during the walk to make it more realistic." id="9" />
                                            <Parameter name="Stop walk when foot contact is lost" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="If this option is activated, NAO stops walking when he loses foot contact with&#x0A;the ground. Else, he just keeps walking." id="10" />
                                            <Parameter name="MaxStepX (m)" inherits_from_parent="0" content_type="2" value="0.04" default_value="0.04" min="0.001" max="0.06" tooltip="Maximum length of forward/backward step." id="11" />
                                            <Parameter name="MaxStepY (m)" inherits_from_parent="0" content_type="2" value="0.14" default_value="0.14" min="0.101" max="0.16" tooltip="Maximum length of lateral step." id="12" />
                                            <Parameter name="MaxStepTheta (rad)" inherits_from_parent="0" content_type="2" value="0.349065" default_value="0.349065" min="0.001" max="0.523598" tooltip="Maximum length of rotational step." id="13" />
                                            <Parameter name="MaxStepFrequency (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Maximum step frequency." id="14" />
                                            <Parameter name="StepHeight (m)" inherits_from_parent="0" content_type="2" value="0.02" default_value="0.02" min="0.005" max="0.04" tooltip="Height of the step i.e. how high NAO put his feet up during the walk." id="15" />
                                            <Parameter name="TorsoWx (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-0.122173" max="0.122173" tooltip="Lateral angle of the torso during the walk.&#x0A;&#x0A;Note: A positive value means that NAO will be tilted to the right. A negative&#x0A;value means he is tilted to the left." id="16" />
                                            <Parameter name="TorsoWy (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-0.122173" max="0.122173" tooltip="Angle of the torso toward forward/backward during the walk.&#x0A;&#x0A;Note: A positive value means that NAO will be inclined forward. A negative&#x0A;value means he is inclined backward." id="17" />
                                            <Resource name="Legs" type="Lock" timeout="0" />
                                          </Box>
                                          <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="2" />
                                          <Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" />
                                        </Diagram>
                                      </BehaviorKeyframe>
                                    </BehaviorLayer>
                                  </Timeline>
                                  <Resource name="Legs" type="Lock" timeout="0" />
                                </Box>
                                <Box name="Walk To" id="8" localization="8" tooltip="Make NAO walk to a configured point relative to its current location." x="866" y="80">
                                  <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #~ self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        self.onStopped()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                  <Parameter name="Distance X (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0.2" min="-2" max="2" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="5" />
                                  <Parameter name="Distance Y (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-2" max="2" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="6" />
                                  <Parameter name="Theta (rad)" inherits_from_parent="0" content_type="2" value="-0.4" default_value="0" min="-3.14" max="3.14" tooltip="The orientation in radians for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="7" />
                                  <Parameter name="Left arm enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate left arm motion during the walk to make it more realistic." id="8" />
                                  <Parameter name="Right arm enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate right arm motion during the walk to make it more realistic." id="9" />
                                  <Parameter name="Stop walk when foot contact is lost" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If this option is activated, NAO stops walking when he loses foot contact with&#x0A;the ground. Else, he just keeps walking." id="10" />
                                  <Timeline enable="0">
                                    <BehaviorLayer name="behavior_layer1">
                                      <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                          <Box name="Walk To Advanced" id="3" localization="8" tooltip="Make NAO walk to a configured point relative to his current location with specific gait parameters." x="195" y="73">
                                            <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.motion = ALProxy("ALMotion")
        footGaitConfigMin = self.motion.getFootGaitConfig("Min")
        footGaitConfigMax = self.motion.getFootGaitConfig("Max")
        self.dFootGaitConfig = {}
        for i in range(len(footGaitConfigMin)):
            # [0] = key ("MaxStepX" for ex)
            # [1] = min
            # [2] = max
            self.dFootGaitConfig[footGaitConfigMin[i][0]] = [footGaitConfigMin[i][1], footGaitConfigMax[i][1]]

    def onLoad(self):
        pass

    def onUnload(self):
        self.motion.setWalkTargetVelocity(0.0, 0.0, 0.0, 0.0)

    def onInput_onStart(self):
        # send walk configuration to ALMotion
        self.motion.setWalkArmsEnable(self.getParameter("Left arm enabled"), self.getParameter("Right arm enabled"))
        self.motion.setMotionConfig([["ENABLE_FOOT_CONTACT_PROTECTION",self.getParameter("Stop walk when foot contact is lost")]])
        for k, v in self.dFootGaitConfig.iteritems():
            for unit in ["m", "rad", "%"]:
                try: # try for each unit and do nothing if value in gaitConfig but not in parameters
                    param = self.getParameter( str(k) + " (" + unit + ")" )
                    if( unit == "%" ):
                        param = param / 100.
                    if( len(v) == 2 ):
                        v.append( param )
                    else:
                        v[2] = param
                    break
                except:
                    pass

        gaitConfig = []
        for k, v in self.dFootGaitConfig.iteritems():
            try:
                gaitConfig.append( [k, v[2]] )
            except: # if some value added in gaitConfig but not in parameters
                pass
        # active walk process
        self.motion.walkTo(self.getParameter("Distance X (m)"), self.getParameter("Distance Y (m)"), self.getParameter("Theta (rad)"), gaitConfig)
         # The walk is finished so output
        self.onStopped() #~ activate output of the box

    def onInput_onStop(self):
        self.onUnload()]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                            <Parameter name="Distance X (m)" inherits_from_parent="1" content_type="2" value="0.2" default_value="0.2" min="-2" max="2" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="5" />
                                            <Parameter name="Distance Y (m)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-2" max="2" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="6" />
                                            <Parameter name="Theta (rad)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-3.14" max="3.14" tooltip="The orientation in radians for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="7" />
                                            <Parameter name="Left arm enabled" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="Activate left arm motion during the walk to make it more realistic." id="8" />
                                            <Parameter name="Right arm enabled" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="Activate right arm motion during the walk to make it more realistic." id="9" />
                                            <Parameter name="Stop walk when foot contact is lost" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="If this option is activated, NAO stops walking when he loses foot contact with&#x0A;the ground. Else, he just keeps walking." id="10" />
                                            <Parameter name="MaxStepX (m)" inherits_from_parent="0" content_type="2" value="0.04" default_value="0.04" min="0.001" max="0.06" tooltip="Maximum length of forward/backward step." id="11" />
                                            <Parameter name="MaxStepY (m)" inherits_from_parent="0" content_type="2" value="0.14" default_value="0.14" min="0.101" max="0.16" tooltip="Maximum length of lateral step." id="12" />
                                            <Parameter name="MaxStepTheta (rad)" inherits_from_parent="0" content_type="2" value="0.349065" default_value="0.349065" min="0.001" max="0.523598" tooltip="Maximum length of rotational step." id="13" />
                                            <Parameter name="MaxStepFrequency (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Maximum step frequency." id="14" />
                                            <Parameter name="StepHeight (m)" inherits_from_parent="0" content_type="2" value="0.02" default_value="0.02" min="0.005" max="0.04" tooltip="Height of the step i.e. how high NAO put his feet up during the walk." id="15" />
                                            <Parameter name="TorsoWx (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-0.122173" max="0.122173" tooltip="Lateral angle of the torso during the walk.&#x0A;&#x0A;Note: A positive value means that NAO will be tilted to the right. A negative&#x0A;value means he is tilted to the left." id="16" />
                                            <Parameter name="TorsoWy (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-0.122173" max="0.122173" tooltip="Angle of the torso toward forward/backward during the walk.&#x0A;&#x0A;Note: A positive value means that NAO will be inclined forward. A negative&#x0A;value means he is inclined backward." id="17" />
                                            <Resource name="Legs" type="Lock" timeout="0" />
                                          </Box>
                                          <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="2" />
                                          <Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" />
                                        </Diagram>
                                      </BehaviorKeyframe>
                                    </BehaviorLayer>
                                  </Timeline>
                                  <Resource name="Legs" type="Lock" timeout="0" />
                                </Box>
                                <Box name="left" id="9" localization="8" tooltip='Robot will go to the position &quot;left&#x0A;Position description : &#x0A;' x="332" y="325">
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="20">
                                    <ActuatorList model="nao">
                                      <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                        <Key frame="20" value="26.0135" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-0.969217" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="83.3189" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="8.96255" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-52.5617" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-21.7948" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-62.4934" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                        <Key frame="20" value="0.2112" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="90.3551" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-14.0651" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="58.7093" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="37.9716" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="42.1856" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                        <Key frame="20" value="0.258" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-13.3571" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="2.46338" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="12.2194" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-4.13332" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="3.24959" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-2.81013" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-8.25942" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="11.5114" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-5.29" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="5.89115" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="6.77007" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                </Box>
                                <Box name="Pattern Images" id="10" localization="8" tooltip="Enter tooltip here" x="448" y="387">
                                  <bitmap>media/images/box/box-diagram.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import Image
import ImageDraw
import time
import os,sys
import cv2 as cv

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):

        flag = self.showNaoImage()
        if (flag == 1):
            global imNum
            imNum = imNum+1
            self.detectionGood()
            self.onUnload()
            #self.onStopped()
        else:
            self.detectionFailure()
            self.onUnload()
            #self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        #self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass

    def sayWord(self,s):
        ttsProxy=ALProxy("ALTextToSpeech")
        ttsProxy.say(s)


    def showNaoImage(self):

        camProxy = ALProxy("ALVideoDevice")
        resolution = 2    # VGA
        colorSpace = 11   # RGB
        found = 0

        videoClient = camProxy.subscribe("python_client", resolution, colorSpace, 5)

        t0 = time.time()

        naoImage = camProxy.getImageRemote(videoClient)

        # Get the image size and pixel array.
        imageWidth = naoImage[0]
        imageHeight = naoImage[1]
        array = naoImage[6]

        # Create a PIL Image from our pixel array.
        im = Image.fromstring("RGB", (imageWidth, imageHeight), array)

        # Create ipl Image to use with opencv
        cv_img = cv.CreateImageHeader(im.size, cv.IPL_DEPTH_8U, 3)  # RGB image
        cv.SetData(cv_img, im.tostring(), im.size[0]*3)
        cv.CvtColor(cv_img, cv_img, cv.CV_RGB2BGR)

        gray_image=cv.CreateImage(cv.GetSize(cv_img),8,1)
        cv.CvtColor(cv_img,gray_image,cv.CV_BGR2GRAY)


        (found,corners)=cv.FindChessboardCorners(gray_image,(7,5),cv.CV_CALIB_CB_ADAPTIVE_THRESH| cv.CV_CALIB_CB_FILTER_QUADS)
        if found == 1:

            self.sayWord("Corners Detected")

            self.sayWord("Saving Image")

        else:

            self.sayWord("Corners can not be detected")

            flag = 0
            camProxy.unsubscribe(videoClient)
            return flag


        t1 = time.time()

        # Time the image transfer.
        self.logger.info("acquisition delay "+str(t1 - t0))

        camProxy.unsubscribe(videoClient)


        self.logger.info(str(imNum))

        # Save the image.
        imName = "image"+str(imNum)+".jpg"
        im.save("/home/nao/SavedImages/"+imName)
        self.sayWord("Image"+str(imNum)+"Saved")

        flag = 1

        return flag]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="detectionFailure" type="1" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                  <Output name="detectionGood" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                </Box>
                                <Box name="right" id="13" localization="8" tooltip='Robot will go to the position &quot;right&#x0A;Position description : &#x0A;' x="604" y="492">
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="20">
                                    <ActuatorList model="nao">
                                      <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-32.9618" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-1.145" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="83.4068" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="8.96255" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-52.5617" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-21.7948" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-62.4934" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                        <Key frame="20" value="0.2108" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="90.3551" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-14.0651" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="58.7093" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="37.8837" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="42.1856" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                        <Key frame="20" value="0.258" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-13.445" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="2.46338" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="12.2194" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-4.13332" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="2.89802" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-2.81013" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-8.25942" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="11.1598" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-5.29" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="5.53958" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="6.77007" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                </Box>
                                <Box name="Init" id="17" localization="8" tooltip='Robot will go to the position &quot;Init&#x0A;Position description : Nao is ready to do anything from this position !&#x0A;' x="602" y="392">
                                  <bitmap>media/images/positions/Pos_init.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="20">
                                    <ActuatorList model="nao">
                                      <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-60" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="60" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-25" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="40" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-25" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="40" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                </Box>
                                <Box name="Pattern Images" id="18" localization="8" tooltip="Enter tooltip here" x="809" y="472">
                                  <bitmap>media/images/box/box-diagram.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import Image
import ImageDraw
import time
import os,sys
import cv2 as cv

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):

        flag = self.showNaoImage()
        if (flag == 1):
            global imNum
            imNum = imNum+1
            self.detectionGood()
            self.onUnload()
            #self.onStopped()
        else:
            self.detectionFailure()
            self.onUnload()
            #self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        #self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass

    def sayWord(self,s):
        ttsProxy=ALProxy("ALTextToSpeech")
        ttsProxy.say(s)


    def showNaoImage(self):

        camProxy = ALProxy("ALVideoDevice")
        resolution = 2    # VGA
        colorSpace = 11   # RGB
        found = 0

        videoClient = camProxy.subscribe("python_client", resolution, colorSpace, 5)

        t0 = time.time()

        naoImage = camProxy.getImageRemote(videoClient)

        # Get the image size and pixel array.
        imageWidth = naoImage[0]
        imageHeight = naoImage[1]
        array = naoImage[6]

        # Create a PIL Image from our pixel array.
        im = Image.fromstring("RGB", (imageWidth, imageHeight), array)

        # Create ipl Image to use with opencv
        cv_img = cv.CreateImageHeader(im.size, cv.IPL_DEPTH_8U, 3)  # RGB image
        cv.SetData(cv_img, im.tostring(), im.size[0]*3)
        cv.CvtColor(cv_img, cv_img, cv.CV_RGB2BGR)

        gray_image=cv.CreateImage(cv.GetSize(cv_img),8,1)
        cv.CvtColor(cv_img,gray_image,cv.CV_BGR2GRAY)


        (found,corners)=cv.FindChessboardCorners(gray_image,(7,5),cv.CV_CALIB_CB_ADAPTIVE_THRESH| cv.CV_CALIB_CB_FILTER_QUADS)
        if found == 1:

            self.sayWord("Corners Detected")

            self.sayWord("Saving Image")

        else:

            self.sayWord("Corners can not be detected")

            flag = 0
            camProxy.unsubscribe(videoClient)
            return flag


        t1 = time.time()

        # Time the image transfer.
        self.logger.info("acquisition delay "+str(t1 - t0))

        camProxy.unsubscribe(videoClient)


        self.logger.info(str(imNum))

        # Save the image.
        imName = "image"+str(imNum)+".jpg"
        im.save("/home/nao/SavedImages/"+imName)
        self.sayWord("Image"+str(imNum)+"Saved")

        flag = 1

        return flag]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="detectionFailure" type="1" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                  <Output name="detectionGood" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                </Box>
                                <Link inputowner="12" indexofinput="2" outputowner="11" indexofoutput="4" />
                                <Link inputowner="14" indexofinput="2" outputowner="12" indexofoutput="4" />
                                <Link inputowner="15" indexofinput="2" outputowner="14" indexofoutput="4" />
                                <Link inputowner="16" indexofinput="2" outputowner="15" indexofoutput="4" />
                                <Link inputowner="11" indexofinput="2" outputowner="0" indexofoutput="2" />
                                <Link inputowner="0" indexofinput="3" outputowner="11" indexofoutput="5" />
                                <Link inputowner="26" indexofinput="2" outputowner="14" indexofoutput="5" />
                                <Link inputowner="1" indexofinput="2" outputowner="16" indexofoutput="5" />
                                <Link inputowner="11" indexofinput="2" outputowner="3" indexofoutput="4" />
                                <Link inputowner="2" indexofinput="2" outputowner="16" indexofoutput="4" />
                                <Link inputowner="4" indexofinput="2" outputowner="2" indexofoutput="4" />
                                <Link inputowner="5" indexofinput="2" outputowner="4" indexofoutput="4" />
                                <Link inputowner="6" indexofinput="2" outputowner="5" indexofoutput="5" />
                                <Link inputowner="0" indexofinput="3" outputowner="6" indexofoutput="4" />
                                <Link inputowner="7" indexofinput="2" outputowner="26" indexofoutput="4" />
                                <Link inputowner="0" indexofinput="3" outputowner="7" indexofoutput="4" />
                                <Link inputowner="8" indexofinput="2" outputowner="1" indexofoutput="4" />
                                <Link inputowner="0" indexofinput="3" outputowner="8" indexofoutput="4" />
                                <Link inputowner="9" indexofinput="2" outputowner="5" indexofoutput="4" />
                                <Link inputowner="13" indexofinput="2" outputowner="10" indexofoutput="4" />
                                <Link inputowner="17" indexofinput="2" outputowner="10" indexofoutput="5" />
                                <Link inputowner="10" indexofinput="2" outputowner="9" indexofoutput="4" />
                                <Link inputowner="7" indexofinput="2" outputowner="17" indexofoutput="4" />
                                <Link inputowner="18" indexofinput="2" outputowner="13" indexofoutput="4" />
                                <Link inputowner="3" indexofinput="2" outputowner="18" indexofoutput="4" />
                                <Link inputowner="1" indexofinput="2" outputowner="18" indexofoutput="5" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                      </Box>
                      <Box name="PosesForImages" id="14" localization="8" tooltip="Normal Pose/HeadLeft/HeadRight" x="964" y="11">
                        <bitmap>media/images/box/box-diagram.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="Pattern Images_onStart" type="0" type_size="1" nature="2" inner="0" tooltip="This input has been automatically generated&#x0A;by converting several boxes into a single box." id="2" />
                        <Output name="PatternImages_detectionGood" type="0" type_size="1" nature="2" inner="0" tooltip="This output has been automatically generated&#x0A;by converting several boxes into a single box." id="3" />
                        <Timeline enable="0">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram scale="47.1937">
                                <Box name="Pattern Images" id="11" localization="8" tooltip="Enter tooltip here" x="110" y="180">
                                  <bitmap>media/images/box/box-diagram.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import Image
import ImageDraw
import time
import os,sys
import cv2 as cv

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):

        flag = self.showNaoImage()
        if (flag == 1):
            global imNum
            imNum = imNum+1
            self.detectionGood()
            self.onUnload()
            #self.onStopped()
        else:
            self.detectionFailure()
            self.onUnload()
            #self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        #self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass

    def sayWord(self,s):
        ttsProxy=ALProxy("ALTextToSpeech")
        ttsProxy.say(s)


    def showNaoImage(self):

        camProxy = ALProxy("ALVideoDevice")
        resolution = 2    # VGA
        colorSpace = 11   # RGB
        found = 0

        videoClient = camProxy.subscribe("python_client", resolution, colorSpace, 5)

        t0 = time.time()

        naoImage = camProxy.getImageRemote(videoClient)

        # Get the image size and pixel array.
        imageWidth = naoImage[0]
        imageHeight = naoImage[1]
        array = naoImage[6]

        # Create a PIL Image from our pixel array.
        im = Image.fromstring("RGB", (imageWidth, imageHeight), array)

        # Create ipl Image to use with opencv
        cv_img = cv.CreateImageHeader(im.size, cv.IPL_DEPTH_8U, 3)  # RGB image
        cv.SetData(cv_img, im.tostring(), im.size[0]*3)
        cv.CvtColor(cv_img, cv_img, cv.CV_RGB2BGR)

        gray_image=cv.CreateImage(cv.GetSize(cv_img),8,1)
        cv.CvtColor(cv_img,gray_image,cv.CV_BGR2GRAY)


        (found,corners)=cv.FindChessboardCorners(gray_image,(7,5),cv.CV_CALIB_CB_ADAPTIVE_THRESH| cv.CV_CALIB_CB_FILTER_QUADS)
        if found == 1:

            self.sayWord("Corners Detected")

            self.sayWord("Saving Image")

        else:

            self.sayWord("Corners can not be detected")

            flag = 0
            camProxy.unsubscribe(videoClient)
            return flag


        t1 = time.time()

        # Time the image transfer.
        self.logger.info("acquisition delay "+str(t1 - t0))

        camProxy.unsubscribe(videoClient)


        self.logger.info(str(imNum))

        # Save the image.
        imName = "image"+str(imNum)+".jpg"
        im.save("/home/nao/SavedImages/"+imName)
        self.sayWord("Image"+str(imNum)+"Saved")

        flag = 1

        return flag]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="detectionFailure" type="1" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                  <Output name="detectionGood" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                </Box>
                                <Box name="left" id="12" localization="8" tooltip='Robot will go to the position &quot;left&#x0A;Position description : &#x0A;' x="77" y="29">
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="20">
                                    <ActuatorList model="nao">
                                      <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                        <Key frame="20" value="26.0135" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-0.969217" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="83.3189" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="8.96255" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-52.5617" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-21.7948" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-62.4934" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                        <Key frame="20" value="0.2112" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="90.3551" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-14.0651" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="58.7093" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="37.9716" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="42.1856" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                        <Key frame="20" value="0.258" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-13.3571" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="2.46338" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="12.2194" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-4.13332" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="3.24959" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-2.81013" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-8.25942" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="11.5114" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-5.29" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="5.89115" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="6.77007" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                </Box>
                                <Box name="Pattern Images" id="14" localization="8" tooltip="Enter tooltip here" x="200" y="31">
                                  <bitmap>media/images/box/box-diagram.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import Image
import ImageDraw
import time
import os,sys
import cv2 as cv

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):

        flag = self.showNaoImage()
        if (flag == 1):
            global imNum
            imNum = imNum+1
            self.detectionGood()
            self.onUnload()
            #self.onStopped()
        else:
            self.detectionFailure()
            self.onUnload()
            #self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        #self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass

    def sayWord(self,s):
        ttsProxy=ALProxy("ALTextToSpeech")
        ttsProxy.say(s)


    def showNaoImage(self):

        camProxy = ALProxy("ALVideoDevice")
        resolution = 2    # VGA
        colorSpace = 11   # RGB
        found = 0

        videoClient = camProxy.subscribe("python_client", resolution, colorSpace, 5)

        t0 = time.time()

        naoImage = camProxy.getImageRemote(videoClient)

        # Get the image size and pixel array.
        imageWidth = naoImage[0]
        imageHeight = naoImage[1]
        array = naoImage[6]

        # Create a PIL Image from our pixel array.
        im = Image.fromstring("RGB", (imageWidth, imageHeight), array)

        # Create ipl Image to use with opencv
        cv_img = cv.CreateImageHeader(im.size, cv.IPL_DEPTH_8U, 3)  # RGB image
        cv.SetData(cv_img, im.tostring(), im.size[0]*3)
        cv.CvtColor(cv_img, cv_img, cv.CV_RGB2BGR)

        gray_image=cv.CreateImage(cv.GetSize(cv_img),8,1)
        cv.CvtColor(cv_img,gray_image,cv.CV_BGR2GRAY)


        (found,corners)=cv.FindChessboardCorners(gray_image,(7,5),cv.CV_CALIB_CB_ADAPTIVE_THRESH| cv.CV_CALIB_CB_FILTER_QUADS)
        if found == 1:

            self.sayWord("Corners Detected")

            self.sayWord("Saving Image")

        else:

            self.sayWord("Corners can not be detected")

            flag = 0
            camProxy.unsubscribe(videoClient)
            return flag


        t1 = time.time()

        # Time the image transfer.
        self.logger.info("acquisition delay "+str(t1 - t0))

        camProxy.unsubscribe(videoClient)


        self.logger.info(str(imNum))

        # Save the image.
        imName = "image"+str(imNum)+".jpg"
        im.save("/home/nao/SavedImages/"+imName)
        self.sayWord("Image"+str(imNum)+"Saved")

        flag = 1

        return flag]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="detectionFailure" type="1" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                  <Output name="detectionGood" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                </Box>
                                <Box name="right" id="15" localization="8" tooltip='Robot will go to the position &quot;right&#x0A;Position description : &#x0A;' x="370" y="113">
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="20">
                                    <ActuatorList model="nao">
                                      <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-32.9618" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-1.145" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="83.4068" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="8.96255" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-52.5617" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-21.7948" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-62.4934" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                        <Key frame="20" value="0.2108" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="90.3551" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-14.0651" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="58.7093" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="37.8837" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="42.1856" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                        <Key frame="20" value="0.258" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-13.445" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="2.46338" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="12.2194" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-4.13332" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="2.89802" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-2.81013" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-8.25942" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="11.1598" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-5.29" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="5.53958" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="6.77007" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                </Box>
                                <Box name="Pattern Images" id="16" localization="8" tooltip="Enter tooltip here" x="517" y="128">
                                  <bitmap>media/images/box/box-diagram.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import Image
import ImageDraw
import time
import os,sys
import cv2 as cv

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):

        flag = self.showNaoImage()
        if (flag == 1):
            global imNum
            imNum = imNum+1
            self.detectionGood()
            self.onUnload()
            #self.onStopped()
        else:
            self.detectionFailure()
            self.onUnload()
            #self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        #self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass

    def sayWord(self,s):
        ttsProxy=ALProxy("ALTextToSpeech")
        ttsProxy.say(s)


    def showNaoImage(self):

        camProxy = ALProxy("ALVideoDevice")
        resolution = 2    # VGA
        colorSpace = 11   # RGB
        found = 0

        videoClient = camProxy.subscribe("python_client", resolution, colorSpace, 5)

        t0 = time.time()

        naoImage = camProxy.getImageRemote(videoClient)

        # Get the image size and pixel array.
        imageWidth = naoImage[0]
        imageHeight = naoImage[1]
        array = naoImage[6]

        # Create a PIL Image from our pixel array.
        im = Image.fromstring("RGB", (imageWidth, imageHeight), array)

        # Create ipl Image to use with opencv
        cv_img = cv.CreateImageHeader(im.size, cv.IPL_DEPTH_8U, 3)  # RGB image
        cv.SetData(cv_img, im.tostring(), im.size[0]*3)
        cv.CvtColor(cv_img, cv_img, cv.CV_RGB2BGR)

        gray_image=cv.CreateImage(cv.GetSize(cv_img),8,1)
        cv.CvtColor(cv_img,gray_image,cv.CV_BGR2GRAY)


        (found,corners)=cv.FindChessboardCorners(gray_image,(7,5),cv.CV_CALIB_CB_ADAPTIVE_THRESH| cv.CV_CALIB_CB_FILTER_QUADS)
        if found == 1:

            self.sayWord("Corners Detected")

            self.sayWord("Saving Image")

        else:

            self.sayWord("Corners can not be detected")

            flag = 0
            camProxy.unsubscribe(videoClient)
            return flag


        t1 = time.time()

        # Time the image transfer.
        self.logger.info("acquisition delay "+str(t1 - t0))

        camProxy.unsubscribe(videoClient)


        self.logger.info(str(imNum))

        # Save the image.
        imName = "image"+str(imNum)+".jpg"
        im.save("/home/nao/SavedImages/"+imName)
        self.sayWord("Image"+str(imNum)+"Saved")

        flag = 1

        return flag]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="detectionFailure" type="1" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                  <Output name="detectionGood" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                </Box>
                                <Box name="Init" id="26" localization="8" tooltip='Robot will go to the position &quot;Init&#x0A;Position description : Nao is ready to do anything from this position !&#x0A;' x="368" y="13">
                                  <bitmap>media/images/positions/Pos_init.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="20">
                                    <ActuatorList model="nao">
                                      <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-60" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="60" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-25" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="40" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-25" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="40" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                </Box>
                                <Box name="Init" id="1" localization="8" tooltip='Robot will go to the position &quot;Init&#x0A;Position description : Nao is ready to do anything from this position !&#x0A;' x="715" y="51">
                                  <bitmap>media/images/positions/Pos_init.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="20">
                                    <ActuatorList model="nao">
                                      <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-60" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="60" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-25" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="40" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-25" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="40" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                </Box>
                                <Box name="Walk To" id="3" localization="8" tooltip="Make NAO walk to a configured point relative to its current location." x="1073" y="442">
                                  <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #~ self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        self.onStopped()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                  <Parameter name="Distance X (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0.2" min="-2" max="2" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="5" />
                                  <Parameter name="Distance Y (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-2" max="2" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="6" />
                                  <Parameter name="Theta (rad)" inherits_from_parent="0" content_type="2" value="1.3" default_value="0" min="-3.14" max="3.14" tooltip="The orientation in radians for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="7" />
                                  <Parameter name="Left arm enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate left arm motion during the walk to make it more realistic." id="8" />
                                  <Parameter name="Right arm enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate right arm motion during the walk to make it more realistic." id="9" />
                                  <Parameter name="Stop walk when foot contact is lost" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If this option is activated, NAO stops walking when he loses foot contact with&#x0A;the ground. Else, he just keeps walking." id="10" />
                                  <Timeline enable="0">
                                    <BehaviorLayer name="behavior_layer1">
                                      <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                          <Box name="Walk To Advanced" id="3" localization="8" tooltip="Make NAO walk to a configured point relative to his current location with specific gait parameters." x="195" y="73">
                                            <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.motion = ALProxy("ALMotion")
        footGaitConfigMin = self.motion.getFootGaitConfig("Min")
        footGaitConfigMax = self.motion.getFootGaitConfig("Max")
        self.dFootGaitConfig = {}
        for i in range(len(footGaitConfigMin)):
            # [0] = key ("MaxStepX" for ex)
            # [1] = min
            # [2] = max
            self.dFootGaitConfig[footGaitConfigMin[i][0]] = [footGaitConfigMin[i][1], footGaitConfigMax[i][1]]

    def onLoad(self):
        pass

    def onUnload(self):
        self.motion.setWalkTargetVelocity(0.0, 0.0, 0.0, 0.0)

    def onInput_onStart(self):
        # send walk configuration to ALMotion
        self.motion.setWalkArmsEnable(self.getParameter("Left arm enabled"), self.getParameter("Right arm enabled"))
        self.motion.setMotionConfig([["ENABLE_FOOT_CONTACT_PROTECTION",self.getParameter("Stop walk when foot contact is lost")]])
        for k, v in self.dFootGaitConfig.iteritems():
            for unit in ["m", "rad", "%"]:
                try: # try for each unit and do nothing if value in gaitConfig but not in parameters
                    param = self.getParameter( str(k) + " (" + unit + ")" )
                    if( unit == "%" ):
                        param = param / 100.
                    if( len(v) == 2 ):
                        v.append( param )
                    else:
                        v[2] = param
                    break
                except:
                    pass

        gaitConfig = []
        for k, v in self.dFootGaitConfig.iteritems():
            try:
                gaitConfig.append( [k, v[2]] )
            except: # if some value added in gaitConfig but not in parameters
                pass
        # active walk process
        self.motion.walkTo(self.getParameter("Distance X (m)"), self.getParameter("Distance Y (m)"), self.getParameter("Theta (rad)"), gaitConfig)
         # The walk is finished so output
        self.onStopped() #~ activate output of the box

    def onInput_onStop(self):
        self.onUnload()]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                            <Parameter name="Distance X (m)" inherits_from_parent="1" content_type="2" value="0.2" default_value="0.2" min="-2" max="2" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="5" />
                                            <Parameter name="Distance Y (m)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-2" max="2" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="6" />
                                            <Parameter name="Theta (rad)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-3.14" max="3.14" tooltip="The orientation in radians for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="7" />
                                            <Parameter name="Left arm enabled" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="Activate left arm motion during the walk to make it more realistic." id="8" />
                                            <Parameter name="Right arm enabled" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="Activate right arm motion during the walk to make it more realistic." id="9" />
                                            <Parameter name="Stop walk when foot contact is lost" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="If this option is activated, NAO stops walking when he loses foot contact with&#x0A;the ground. Else, he just keeps walking." id="10" />
                                            <Parameter name="MaxStepX (m)" inherits_from_parent="0" content_type="2" value="0.04" default_value="0.04" min="0.001" max="0.06" tooltip="Maximum length of forward/backward step." id="11" />
                                            <Parameter name="MaxStepY (m)" inherits_from_parent="0" content_type="2" value="0.14" default_value="0.14" min="0.101" max="0.16" tooltip="Maximum length of lateral step." id="12" />
                                            <Parameter name="MaxStepTheta (rad)" inherits_from_parent="0" content_type="2" value="0.349065" default_value="0.349065" min="0.001" max="0.523598" tooltip="Maximum length of rotational step." id="13" />
                                            <Parameter name="MaxStepFrequency (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Maximum step frequency." id="14" />
                                            <Parameter name="StepHeight (m)" inherits_from_parent="0" content_type="2" value="0.02" default_value="0.02" min="0.005" max="0.04" tooltip="Height of the step i.e. how high NAO put his feet up during the walk." id="15" />
                                            <Parameter name="TorsoWx (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-0.122173" max="0.122173" tooltip="Lateral angle of the torso during the walk.&#x0A;&#x0A;Note: A positive value means that NAO will be tilted to the right. A negative&#x0A;value means he is tilted to the left." id="16" />
                                            <Parameter name="TorsoWy (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-0.122173" max="0.122173" tooltip="Angle of the torso toward forward/backward during the walk.&#x0A;&#x0A;Note: A positive value means that NAO will be inclined forward. A negative&#x0A;value means he is inclined backward." id="17" />
                                            <Resource name="Legs" type="Lock" timeout="0" />
                                          </Box>
                                          <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="2" />
                                          <Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" />
                                        </Diagram>
                                      </BehaviorKeyframe>
                                    </BehaviorLayer>
                                  </Timeline>
                                  <Resource name="Legs" type="Lock" timeout="0" />
                                </Box>
                                <Box name="Init" id="2" localization="8" tooltip='Robot will go to the position &quot;Init&#x0A;Position description : Nao is ready to do anything from this position !&#x0A;' x="981" y="152">
                                  <bitmap>media/images/positions/Pos_init.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="20">
                                    <ActuatorList model="nao">
                                      <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-60" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="60" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-25" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="40" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-25" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="40" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                </Box>
                                <Box name="Walk To" id="4" localization="8" tooltip="Make NAO walk to a configured point relative to its current location." x="66" y="389">
                                  <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #~ self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        self.onStopped()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                  <Parameter name="Distance X (m)" inherits_from_parent="0" content_type="2" value="-0.1" default_value="0.2" min="-2" max="2" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="5" />
                                  <Parameter name="Distance Y (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-2" max="2" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="6" />
                                  <Parameter name="Theta (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-3.14" max="3.14" tooltip="The orientation in radians for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="7" />
                                  <Parameter name="Left arm enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate left arm motion during the walk to make it more realistic." id="8" />
                                  <Parameter name="Right arm enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate right arm motion during the walk to make it more realistic." id="9" />
                                  <Parameter name="Stop walk when foot contact is lost" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If this option is activated, NAO stops walking when he loses foot contact with&#x0A;the ground. Else, he just keeps walking." id="10" />
                                  <Timeline enable="0">
                                    <BehaviorLayer name="behavior_layer1">
                                      <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                          <Box name="Walk To Advanced" id="3" localization="8" tooltip="Make NAO walk to a configured point relative to his current location with specific gait parameters." x="195" y="73">
                                            <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.motion = ALProxy("ALMotion")
        footGaitConfigMin = self.motion.getFootGaitConfig("Min")
        footGaitConfigMax = self.motion.getFootGaitConfig("Max")
        self.dFootGaitConfig = {}
        for i in range(len(footGaitConfigMin)):
            # [0] = key ("MaxStepX" for ex)
            # [1] = min
            # [2] = max
            self.dFootGaitConfig[footGaitConfigMin[i][0]] = [footGaitConfigMin[i][1], footGaitConfigMax[i][1]]

    def onLoad(self):
        pass

    def onUnload(self):
        self.motion.setWalkTargetVelocity(0.0, 0.0, 0.0, 0.0)

    def onInput_onStart(self):
        # send walk configuration to ALMotion
        self.motion.setWalkArmsEnable(self.getParameter("Left arm enabled"), self.getParameter("Right arm enabled"))
        self.motion.setMotionConfig([["ENABLE_FOOT_CONTACT_PROTECTION",self.getParameter("Stop walk when foot contact is lost")]])
        for k, v in self.dFootGaitConfig.iteritems():
            for unit in ["m", "rad", "%"]:
                try: # try for each unit and do nothing if value in gaitConfig but not in parameters
                    param = self.getParameter( str(k) + " (" + unit + ")" )
                    if( unit == "%" ):
                        param = param / 100.
                    if( len(v) == 2 ):
                        v.append( param )
                    else:
                        v[2] = param
                    break
                except:
                    pass

        gaitConfig = []
        for k, v in self.dFootGaitConfig.iteritems():
            try:
                gaitConfig.append( [k, v[2]] )
            except: # if some value added in gaitConfig but not in parameters
                pass
        # active walk process
        self.motion.walkTo(self.getParameter("Distance X (m)"), self.getParameter("Distance Y (m)"), self.getParameter("Theta (rad)"), gaitConfig)
         # The walk is finished so output
        self.onStopped() #~ activate output of the box

    def onInput_onStop(self):
        self.onUnload()]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                            <Parameter name="Distance X (m)" inherits_from_parent="1" content_type="2" value="0.2" default_value="0.2" min="-2" max="2" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="5" />
                                            <Parameter name="Distance Y (m)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-2" max="2" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="6" />
                                            <Parameter name="Theta (rad)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-3.14" max="3.14" tooltip="The orientation in radians for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="7" />
                                            <Parameter name="Left arm enabled" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="Activate left arm motion during the walk to make it more realistic." id="8" />
                                            <Parameter name="Right arm enabled" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="Activate right arm motion during the walk to make it more realistic." id="9" />
                                            <Parameter name="Stop walk when foot contact is lost" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="If this option is activated, NAO stops walking when he loses foot contact with&#x0A;the ground. Else, he just keeps walking." id="10" />
                                            <Parameter name="MaxStepX (m)" inherits_from_parent="0" content_type="2" value="0.04" default_value="0.04" min="0.001" max="0.06" tooltip="Maximum length of forward/backward step." id="11" />
                                            <Parameter name="MaxStepY (m)" inherits_from_parent="0" content_type="2" value="0.14" default_value="0.14" min="0.101" max="0.16" tooltip="Maximum length of lateral step." id="12" />
                                            <Parameter name="MaxStepTheta (rad)" inherits_from_parent="0" content_type="2" value="0.349065" default_value="0.349065" min="0.001" max="0.523598" tooltip="Maximum length of rotational step." id="13" />
                                            <Parameter name="MaxStepFrequency (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Maximum step frequency." id="14" />
                                            <Parameter name="StepHeight (m)" inherits_from_parent="0" content_type="2" value="0.02" default_value="0.02" min="0.005" max="0.04" tooltip="Height of the step i.e. how high NAO put his feet up during the walk." id="15" />
                                            <Parameter name="TorsoWx (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-0.122173" max="0.122173" tooltip="Lateral angle of the torso during the walk.&#x0A;&#x0A;Note: A positive value means that NAO will be tilted to the right. A negative&#x0A;value means he is tilted to the left." id="16" />
                                            <Parameter name="TorsoWy (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-0.122173" max="0.122173" tooltip="Angle of the torso toward forward/backward during the walk.&#x0A;&#x0A;Note: A positive value means that NAO will be inclined forward. A negative&#x0A;value means he is inclined backward." id="17" />
                                            <Resource name="Legs" type="Lock" timeout="0" />
                                          </Box>
                                          <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="2" />
                                          <Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" />
                                        </Diagram>
                                      </BehaviorKeyframe>
                                    </BehaviorLayer>
                                  </Timeline>
                                  <Resource name="Legs" type="Lock" timeout="0" />
                                </Box>
                                <Box name="Pattern Images" id="5" localization="8" tooltip="Enter tooltip here" x="207" y="395">
                                  <bitmap>media/images/box/box-diagram.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import Image
import ImageDraw
import time
import os,sys
import cv2 as cv

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):

        flag = self.showNaoImage()
        if (flag == 1):
            global imNum
            imNum = imNum+1
            self.detectionGood()
            self.onUnload()
            #self.onStopped()
        else:
            self.detectionFailure()
            self.onUnload()
            #self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        #self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass

    def sayWord(self,s):
        ttsProxy=ALProxy("ALTextToSpeech")
        ttsProxy.say(s)


    def showNaoImage(self):

        camProxy = ALProxy("ALVideoDevice")
        resolution = 2    # VGA
        colorSpace = 11   # RGB
        found = 0

        videoClient = camProxy.subscribe("python_client", resolution, colorSpace, 5)

        t0 = time.time()

        naoImage = camProxy.getImageRemote(videoClient)

        # Get the image size and pixel array.
        imageWidth = naoImage[0]
        imageHeight = naoImage[1]
        array = naoImage[6]

        # Create a PIL Image from our pixel array.
        im = Image.fromstring("RGB", (imageWidth, imageHeight), array)

        # Create ipl Image to use with opencv
        cv_img = cv.CreateImageHeader(im.size, cv.IPL_DEPTH_8U, 3)  # RGB image
        cv.SetData(cv_img, im.tostring(), im.size[0]*3)
        cv.CvtColor(cv_img, cv_img, cv.CV_RGB2BGR)

        gray_image=cv.CreateImage(cv.GetSize(cv_img),8,1)
        cv.CvtColor(cv_img,gray_image,cv.CV_BGR2GRAY)


        (found,corners)=cv.FindChessboardCorners(gray_image,(7,5),cv.CV_CALIB_CB_ADAPTIVE_THRESH| cv.CV_CALIB_CB_FILTER_QUADS)
        if found == 1:

            self.sayWord("Corners Detected")

            self.sayWord("Saving Image")

        else:

            self.sayWord("Corners can not be detected")

            flag = 0
            camProxy.unsubscribe(videoClient)
            return flag


        t1 = time.time()

        # Time the image transfer.
        self.logger.info("acquisition delay "+str(t1 - t0))

        camProxy.unsubscribe(videoClient)


        self.logger.info(str(imNum))

        # Save the image.
        imName = "image"+str(imNum)+".jpg"
        im.save("/home/nao/SavedImages/"+imName)
        self.sayWord("Image"+str(imNum)+"Saved")

        flag = 1

        return flag]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="detectionFailure" type="1" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                  <Output name="detectionGood" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                </Box>
                                <Box name="Init" id="6" localization="8" tooltip='Robot will go to the position &quot;Init&#x0A;Position description : Nao is ready to do anything from this position !&#x0A;' x="683" y="217">
                                  <bitmap>media/images/positions/Pos_init.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="20">
                                    <ActuatorList model="nao">
                                      <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-60" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="60" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-25" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="40" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-25" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="40" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                </Box>
                                <Box name="Walk To" id="7" localization="8" tooltip="Make NAO walk to a configured point relative to its current location." x="517" y="15">
                                  <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #~ self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        self.onStopped()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                  <Parameter name="Distance X (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0.2" min="-2" max="2" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="5" />
                                  <Parameter name="Distance Y (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-2" max="2" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="6" />
                                  <Parameter name="Theta (rad)" inherits_from_parent="0" content_type="2" value="0.4" default_value="0" min="-3.14" max="3.14" tooltip="The orientation in radians for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="7" />
                                  <Parameter name="Left arm enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate left arm motion during the walk to make it more realistic." id="8" />
                                  <Parameter name="Right arm enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate right arm motion during the walk to make it more realistic." id="9" />
                                  <Parameter name="Stop walk when foot contact is lost" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If this option is activated, NAO stops walking when he loses foot contact with&#x0A;the ground. Else, he just keeps walking." id="10" />
                                  <Timeline enable="0">
                                    <BehaviorLayer name="behavior_layer1">
                                      <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                          <Box name="Walk To Advanced" id="3" localization="8" tooltip="Make NAO walk to a configured point relative to his current location with specific gait parameters." x="195" y="73">
                                            <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.motion = ALProxy("ALMotion")
        footGaitConfigMin = self.motion.getFootGaitConfig("Min")
        footGaitConfigMax = self.motion.getFootGaitConfig("Max")
        self.dFootGaitConfig = {}
        for i in range(len(footGaitConfigMin)):
            # [0] = key ("MaxStepX" for ex)
            # [1] = min
            # [2] = max
            self.dFootGaitConfig[footGaitConfigMin[i][0]] = [footGaitConfigMin[i][1], footGaitConfigMax[i][1]]

    def onLoad(self):
        pass

    def onUnload(self):
        self.motion.setWalkTargetVelocity(0.0, 0.0, 0.0, 0.0)

    def onInput_onStart(self):
        # send walk configuration to ALMotion
        self.motion.setWalkArmsEnable(self.getParameter("Left arm enabled"), self.getParameter("Right arm enabled"))
        self.motion.setMotionConfig([["ENABLE_FOOT_CONTACT_PROTECTION",self.getParameter("Stop walk when foot contact is lost")]])
        for k, v in self.dFootGaitConfig.iteritems():
            for unit in ["m", "rad", "%"]:
                try: # try for each unit and do nothing if value in gaitConfig but not in parameters
                    param = self.getParameter( str(k) + " (" + unit + ")" )
                    if( unit == "%" ):
                        param = param / 100.
                    if( len(v) == 2 ):
                        v.append( param )
                    else:
                        v[2] = param
                    break
                except:
                    pass

        gaitConfig = []
        for k, v in self.dFootGaitConfig.iteritems():
            try:
                gaitConfig.append( [k, v[2]] )
            except: # if some value added in gaitConfig but not in parameters
                pass
        # active walk process
        self.motion.walkTo(self.getParameter("Distance X (m)"), self.getParameter("Distance Y (m)"), self.getParameter("Theta (rad)"), gaitConfig)
         # The walk is finished so output
        self.onStopped() #~ activate output of the box

    def onInput_onStop(self):
        self.onUnload()]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                            <Parameter name="Distance X (m)" inherits_from_parent="1" content_type="2" value="0.2" default_value="0.2" min="-2" max="2" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="5" />
                                            <Parameter name="Distance Y (m)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-2" max="2" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="6" />
                                            <Parameter name="Theta (rad)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-3.14" max="3.14" tooltip="The orientation in radians for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="7" />
                                            <Parameter name="Left arm enabled" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="Activate left arm motion during the walk to make it more realistic." id="8" />
                                            <Parameter name="Right arm enabled" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="Activate right arm motion during the walk to make it more realistic." id="9" />
                                            <Parameter name="Stop walk when foot contact is lost" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="If this option is activated, NAO stops walking when he loses foot contact with&#x0A;the ground. Else, he just keeps walking." id="10" />
                                            <Parameter name="MaxStepX (m)" inherits_from_parent="0" content_type="2" value="0.04" default_value="0.04" min="0.001" max="0.06" tooltip="Maximum length of forward/backward step." id="11" />
                                            <Parameter name="MaxStepY (m)" inherits_from_parent="0" content_type="2" value="0.14" default_value="0.14" min="0.101" max="0.16" tooltip="Maximum length of lateral step." id="12" />
                                            <Parameter name="MaxStepTheta (rad)" inherits_from_parent="0" content_type="2" value="0.349065" default_value="0.349065" min="0.001" max="0.523598" tooltip="Maximum length of rotational step." id="13" />
                                            <Parameter name="MaxStepFrequency (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Maximum step frequency." id="14" />
                                            <Parameter name="StepHeight (m)" inherits_from_parent="0" content_type="2" value="0.02" default_value="0.02" min="0.005" max="0.04" tooltip="Height of the step i.e. how high NAO put his feet up during the walk." id="15" />
                                            <Parameter name="TorsoWx (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-0.122173" max="0.122173" tooltip="Lateral angle of the torso during the walk.&#x0A;&#x0A;Note: A positive value means that NAO will be tilted to the right. A negative&#x0A;value means he is tilted to the left." id="16" />
                                            <Parameter name="TorsoWy (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-0.122173" max="0.122173" tooltip="Angle of the torso toward forward/backward during the walk.&#x0A;&#x0A;Note: A positive value means that NAO will be inclined forward. A negative&#x0A;value means he is inclined backward." id="17" />
                                            <Resource name="Legs" type="Lock" timeout="0" />
                                          </Box>
                                          <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="2" />
                                          <Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" />
                                        </Diagram>
                                      </BehaviorKeyframe>
                                    </BehaviorLayer>
                                  </Timeline>
                                  <Resource name="Legs" type="Lock" timeout="0" />
                                </Box>
                                <Box name="Walk To" id="8" localization="8" tooltip="Make NAO walk to a configured point relative to its current location." x="866" y="80">
                                  <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #~ self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        self.onStopped()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                  <Parameter name="Distance X (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0.2" min="-2" max="2" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="5" />
                                  <Parameter name="Distance Y (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-2" max="2" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="6" />
                                  <Parameter name="Theta (rad)" inherits_from_parent="0" content_type="2" value="-0.4" default_value="0" min="-3.14" max="3.14" tooltip="The orientation in radians for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="7" />
                                  <Parameter name="Left arm enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate left arm motion during the walk to make it more realistic." id="8" />
                                  <Parameter name="Right arm enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate right arm motion during the walk to make it more realistic." id="9" />
                                  <Parameter name="Stop walk when foot contact is lost" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If this option is activated, NAO stops walking when he loses foot contact with&#x0A;the ground. Else, he just keeps walking." id="10" />
                                  <Timeline enable="0">
                                    <BehaviorLayer name="behavior_layer1">
                                      <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                          <Box name="Walk To Advanced" id="3" localization="8" tooltip="Make NAO walk to a configured point relative to his current location with specific gait parameters." x="195" y="73">
                                            <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.motion = ALProxy("ALMotion")
        footGaitConfigMin = self.motion.getFootGaitConfig("Min")
        footGaitConfigMax = self.motion.getFootGaitConfig("Max")
        self.dFootGaitConfig = {}
        for i in range(len(footGaitConfigMin)):
            # [0] = key ("MaxStepX" for ex)
            # [1] = min
            # [2] = max
            self.dFootGaitConfig[footGaitConfigMin[i][0]] = [footGaitConfigMin[i][1], footGaitConfigMax[i][1]]

    def onLoad(self):
        pass

    def onUnload(self):
        self.motion.setWalkTargetVelocity(0.0, 0.0, 0.0, 0.0)

    def onInput_onStart(self):
        # send walk configuration to ALMotion
        self.motion.setWalkArmsEnable(self.getParameter("Left arm enabled"), self.getParameter("Right arm enabled"))
        self.motion.setMotionConfig([["ENABLE_FOOT_CONTACT_PROTECTION",self.getParameter("Stop walk when foot contact is lost")]])
        for k, v in self.dFootGaitConfig.iteritems():
            for unit in ["m", "rad", "%"]:
                try: # try for each unit and do nothing if value in gaitConfig but not in parameters
                    param = self.getParameter( str(k) + " (" + unit + ")" )
                    if( unit == "%" ):
                        param = param / 100.
                    if( len(v) == 2 ):
                        v.append( param )
                    else:
                        v[2] = param
                    break
                except:
                    pass

        gaitConfig = []
        for k, v in self.dFootGaitConfig.iteritems():
            try:
                gaitConfig.append( [k, v[2]] )
            except: # if some value added in gaitConfig but not in parameters
                pass
        # active walk process
        self.motion.walkTo(self.getParameter("Distance X (m)"), self.getParameter("Distance Y (m)"), self.getParameter("Theta (rad)"), gaitConfig)
         # The walk is finished so output
        self.onStopped() #~ activate output of the box

    def onInput_onStop(self):
        self.onUnload()]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                            <Parameter name="Distance X (m)" inherits_from_parent="1" content_type="2" value="0.2" default_value="0.2" min="-2" max="2" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="5" />
                                            <Parameter name="Distance Y (m)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-2" max="2" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="6" />
                                            <Parameter name="Theta (rad)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-3.14" max="3.14" tooltip="The orientation in radians for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="7" />
                                            <Parameter name="Left arm enabled" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="Activate left arm motion during the walk to make it more realistic." id="8" />
                                            <Parameter name="Right arm enabled" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="Activate right arm motion during the walk to make it more realistic." id="9" />
                                            <Parameter name="Stop walk when foot contact is lost" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="If this option is activated, NAO stops walking when he loses foot contact with&#x0A;the ground. Else, he just keeps walking." id="10" />
                                            <Parameter name="MaxStepX (m)" inherits_from_parent="0" content_type="2" value="0.04" default_value="0.04" min="0.001" max="0.06" tooltip="Maximum length of forward/backward step." id="11" />
                                            <Parameter name="MaxStepY (m)" inherits_from_parent="0" content_type="2" value="0.14" default_value="0.14" min="0.101" max="0.16" tooltip="Maximum length of lateral step." id="12" />
                                            <Parameter name="MaxStepTheta (rad)" inherits_from_parent="0" content_type="2" value="0.349065" default_value="0.349065" min="0.001" max="0.523598" tooltip="Maximum length of rotational step." id="13" />
                                            <Parameter name="MaxStepFrequency (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Maximum step frequency." id="14" />
                                            <Parameter name="StepHeight (m)" inherits_from_parent="0" content_type="2" value="0.02" default_value="0.02" min="0.005" max="0.04" tooltip="Height of the step i.e. how high NAO put his feet up during the walk." id="15" />
                                            <Parameter name="TorsoWx (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-0.122173" max="0.122173" tooltip="Lateral angle of the torso during the walk.&#x0A;&#x0A;Note: A positive value means that NAO will be tilted to the right. A negative&#x0A;value means he is tilted to the left." id="16" />
                                            <Parameter name="TorsoWy (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-0.122173" max="0.122173" tooltip="Angle of the torso toward forward/backward during the walk.&#x0A;&#x0A;Note: A positive value means that NAO will be inclined forward. A negative&#x0A;value means he is inclined backward." id="17" />
                                            <Resource name="Legs" type="Lock" timeout="0" />
                                          </Box>
                                          <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="2" />
                                          <Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" />
                                        </Diagram>
                                      </BehaviorKeyframe>
                                    </BehaviorLayer>
                                  </Timeline>
                                  <Resource name="Legs" type="Lock" timeout="0" />
                                </Box>
                                <Box name="left" id="9" localization="8" tooltip='Robot will go to the position &quot;left&#x0A;Position description : &#x0A;' x="332" y="325">
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="20">
                                    <ActuatorList model="nao">
                                      <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                        <Key frame="20" value="26.0135" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-0.969217" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="83.3189" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="8.96255" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-52.5617" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-21.7948" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-62.4934" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                        <Key frame="20" value="0.2112" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="90.3551" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-14.0651" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="58.7093" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="37.9716" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="42.1856" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                        <Key frame="20" value="0.258" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-13.3571" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="2.46338" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="12.2194" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-4.13332" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="3.24959" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-2.81013" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-8.25942" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="11.5114" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-5.29" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="5.89115" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="6.77007" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                </Box>
                                <Box name="Pattern Images" id="10" localization="8" tooltip="Enter tooltip here" x="448" y="387">
                                  <bitmap>media/images/box/box-diagram.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import Image
import ImageDraw
import time
import os,sys
import cv2 as cv

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):

        flag = self.showNaoImage()
        if (flag == 1):
            global imNum
            imNum = imNum+1
            self.detectionGood()
            self.onUnload()
            #self.onStopped()
        else:
            self.detectionFailure()
            self.onUnload()
            #self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        #self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass

    def sayWord(self,s):
        ttsProxy=ALProxy("ALTextToSpeech")
        ttsProxy.say(s)


    def showNaoImage(self):

        camProxy = ALProxy("ALVideoDevice")
        resolution = 2    # VGA
        colorSpace = 11   # RGB
        found = 0

        videoClient = camProxy.subscribe("python_client", resolution, colorSpace, 5)

        t0 = time.time()

        naoImage = camProxy.getImageRemote(videoClient)

        # Get the image size and pixel array.
        imageWidth = naoImage[0]
        imageHeight = naoImage[1]
        array = naoImage[6]

        # Create a PIL Image from our pixel array.
        im = Image.fromstring("RGB", (imageWidth, imageHeight), array)

        # Create ipl Image to use with opencv
        cv_img = cv.CreateImageHeader(im.size, cv.IPL_DEPTH_8U, 3)  # RGB image
        cv.SetData(cv_img, im.tostring(), im.size[0]*3)
        cv.CvtColor(cv_img, cv_img, cv.CV_RGB2BGR)

        gray_image=cv.CreateImage(cv.GetSize(cv_img),8,1)
        cv.CvtColor(cv_img,gray_image,cv.CV_BGR2GRAY)


        (found,corners)=cv.FindChessboardCorners(gray_image,(7,5),cv.CV_CALIB_CB_ADAPTIVE_THRESH| cv.CV_CALIB_CB_FILTER_QUADS)
        if found == 1:

            self.sayWord("Corners Detected")

            self.sayWord("Saving Image")

        else:

            self.sayWord("Corners can not be detected")

            flag = 0
            camProxy.unsubscribe(videoClient)
            return flag


        t1 = time.time()

        # Time the image transfer.
        self.logger.info("acquisition delay "+str(t1 - t0))

        camProxy.unsubscribe(videoClient)


        self.logger.info(str(imNum))

        # Save the image.
        imName = "image"+str(imNum)+".jpg"
        im.save("/home/nao/SavedImages/"+imName)
        self.sayWord("Image"+str(imNum)+"Saved")

        flag = 1

        return flag]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="detectionFailure" type="1" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                  <Output name="detectionGood" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                </Box>
                                <Box name="right" id="13" localization="8" tooltip='Robot will go to the position &quot;right&#x0A;Position description : &#x0A;' x="604" y="492">
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="20">
                                    <ActuatorList model="nao">
                                      <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-32.9618" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-1.145" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="83.4068" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="8.96255" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-52.5617" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-21.7948" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-62.4934" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                        <Key frame="20" value="0.2108" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="90.3551" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-14.0651" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="58.7093" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="37.8837" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="42.1856" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                        <Key frame="20" value="0.258" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-13.445" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="2.46338" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="12.2194" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-4.13332" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="2.89802" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-2.81013" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-8.25942" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="11.1598" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-5.29" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="5.53958" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="6.77007" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                </Box>
                                <Box name="Init" id="17" localization="8" tooltip='Robot will go to the position &quot;Init&#x0A;Position description : Nao is ready to do anything from this position !&#x0A;' x="602" y="392">
                                  <bitmap>media/images/positions/Pos_init.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="20">
                                    <ActuatorList model="nao">
                                      <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="-80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-60" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                        <Key frame="20" value="80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                        <Key frame="20" value="-20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                        <Key frame="20" value="80" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                        <Key frame="20" value="60" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-25" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="40" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                        <Key frame="20" value="-25" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                        <Key frame="20" value="40" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                        <Key frame="20" value="-20" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                        <Key frame="20" value="0" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                </Box>
                                <Box name="Pattern Images" id="18" localization="8" tooltip="Enter tooltip here" x="809" y="472">
                                  <bitmap>media/images/box/box-diagram.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import Image
import ImageDraw
import time
import os,sys
import cv2 as cv

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):

        flag = self.showNaoImage()
        if (flag == 1):
            global imNum
            imNum = imNum+1
            self.detectionGood()
            self.onUnload()
            #self.onStopped()
        else:
            self.detectionFailure()
            self.onUnload()
            #self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        #self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass

    def sayWord(self,s):
        ttsProxy=ALProxy("ALTextToSpeech")
        ttsProxy.say(s)


    def showNaoImage(self):

        camProxy = ALProxy("ALVideoDevice")
        resolution = 2    # VGA
        colorSpace = 11   # RGB
        found = 0

        videoClient = camProxy.subscribe("python_client", resolution, colorSpace, 5)

        t0 = time.time()

        naoImage = camProxy.getImageRemote(videoClient)

        # Get the image size and pixel array.
        imageWidth = naoImage[0]
        imageHeight = naoImage[1]
        array = naoImage[6]

        # Create a PIL Image from our pixel array.
        im = Image.fromstring("RGB", (imageWidth, imageHeight), array)

        # Create ipl Image to use with opencv
        cv_img = cv.CreateImageHeader(im.size, cv.IPL_DEPTH_8U, 3)  # RGB image
        cv.SetData(cv_img, im.tostring(), im.size[0]*3)
        cv.CvtColor(cv_img, cv_img, cv.CV_RGB2BGR)

        gray_image=cv.CreateImage(cv.GetSize(cv_img),8,1)
        cv.CvtColor(cv_img,gray_image,cv.CV_BGR2GRAY)


        (found,corners)=cv.FindChessboardCorners(gray_image,(7,5),cv.CV_CALIB_CB_ADAPTIVE_THRESH| cv.CV_CALIB_CB_FILTER_QUADS)
        if found == 1:

            self.sayWord("Corners Detected")

            self.sayWord("Saving Image")

        else:

            self.sayWord("Corners can not be detected")

            flag = 0
            camProxy.unsubscribe(videoClient)
            return flag


        t1 = time.time()

        # Time the image transfer.
        self.logger.info("acquisition delay "+str(t1 - t0))

        camProxy.unsubscribe(videoClient)


        self.logger.info(str(imNum))

        # Save the image.
        imName = "image"+str(imNum)+".jpg"
        im.save("/home/nao/SavedImages/"+imName)
        self.sayWord("Image"+str(imNum)+"Saved")

        flag = 1

        return flag]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="detectionFailure" type="1" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                  <Output name="detectionGood" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                </Box>
                                <Link inputowner="12" indexofinput="2" outputowner="11" indexofoutput="4" />
                                <Link inputowner="14" indexofinput="2" outputowner="12" indexofoutput="4" />
                                <Link inputowner="15" indexofinput="2" outputowner="14" indexofoutput="4" />
                                <Link inputowner="16" indexofinput="2" outputowner="15" indexofoutput="4" />
                                <Link inputowner="11" indexofinput="2" outputowner="0" indexofoutput="2" />
                                <Link inputowner="0" indexofinput="3" outputowner="11" indexofoutput="5" />
                                <Link inputowner="26" indexofinput="2" outputowner="14" indexofoutput="5" />
                                <Link inputowner="1" indexofinput="2" outputowner="16" indexofoutput="5" />
                                <Link inputowner="11" indexofinput="2" outputowner="3" indexofoutput="4" />
                                <Link inputowner="2" indexofinput="2" outputowner="16" indexofoutput="4" />
                                <Link inputowner="4" indexofinput="2" outputowner="2" indexofoutput="4" />
                                <Link inputowner="5" indexofinput="2" outputowner="4" indexofoutput="4" />
                                <Link inputowner="6" indexofinput="2" outputowner="5" indexofoutput="5" />
                                <Link inputowner="0" indexofinput="3" outputowner="6" indexofoutput="4" />
                                <Link inputowner="7" indexofinput="2" outputowner="26" indexofoutput="4" />
                                <Link inputowner="0" indexofinput="3" outputowner="7" indexofoutput="4" />
                                <Link inputowner="8" indexofinput="2" outputowner="1" indexofoutput="4" />
                                <Link inputowner="0" indexofinput="3" outputowner="8" indexofoutput="4" />
                                <Link inputowner="9" indexofinput="2" outputowner="5" indexofoutput="4" />
                                <Link inputowner="13" indexofinput="2" outputowner="10" indexofoutput="4" />
                                <Link inputowner="17" indexofinput="2" outputowner="10" indexofoutput="5" />
                                <Link inputowner="10" indexofinput="2" outputowner="9" indexofoutput="4" />
                                <Link inputowner="7" indexofinput="2" outputowner="17" indexofoutput="4" />
                                <Link inputowner="18" indexofinput="2" outputowner="13" indexofoutput="4" />
                                <Link inputowner="3" indexofinput="2" outputowner="18" indexofoutput="4" />
                                <Link inputowner="1" indexofinput="2" outputowner="18" indexofoutput="5" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                      </Box>
                      <Link inputowner="8" indexofinput="2" outputowner="15" indexofoutput="4" />
                      <Link inputowner="9" indexofinput="2" outputowner="1" indexofoutput="4" />
                      <Link inputowner="19" indexofinput="2" outputowner="4" indexofoutput="4" />
                      <Link inputowner="12" indexofinput="2" outputowner="20" indexofoutput="4" />
                      <Link inputowner="34" indexofinput="2" outputowner="33" indexofoutput="4" />
                      <Link inputowner="25" indexofinput="2" outputowner="13" indexofoutput="4" />
                      <Link inputowner="21" indexofinput="2" outputowner="12" indexofoutput="4" />
                      <Link inputowner="23" indexofinput="2" outputowner="21" indexofoutput="3" />
                      <Link inputowner="35" indexofinput="2" outputowner="23" indexofoutput="4" />
                      <Link inputowner="24" indexofinput="2" outputowner="34" indexofoutput="4" />
                      <Link inputowner="32" indexofinput="2" outputowner="31" indexofoutput="4" />
                      <Link inputowner="38" indexofinput="2" outputowner="32" indexofoutput="4" />
                      <Link inputowner="31" indexofinput="2" outputowner="35" indexofoutput="4" />
                      <Link inputowner="26" indexofinput="2" outputowner="38" indexofoutput="3" />
                      <Link inputowner="10" indexofinput="2" outputowner="17" indexofoutput="4" />
                      <Link inputowner="46" indexofinput="2" outputowner="44" indexofoutput="4" />
                      <Link inputowner="45" indexofinput="2" outputowner="46" indexofoutput="4" />
                      <Link inputowner="11" indexofinput="2" outputowner="8" indexofoutput="4" />
                      <Link inputowner="1" indexofinput="2" outputowner="11" indexofoutput="3" />
                      <Link inputowner="48" indexofinput="2" outputowner="3" indexofoutput="4" />
                      <Link inputowner="15" indexofinput="2" outputowner="25" indexofoutput="3" />
                      <Link inputowner="13" indexofinput="2" outputowner="0" indexofoutput="2" />
                      <Link inputowner="0" indexofinput="3" outputowner="24" indexofoutput="3" />
                      <Link inputowner="2" indexofinput="2" outputowner="9" indexofoutput="4" />
                      <Link inputowner="4" indexofinput="2" outputowner="2" indexofoutput="3" />
                      <Link inputowner="20" indexofinput="2" outputowner="5" indexofoutput="3" />
                      <Link inputowner="5" indexofinput="2" outputowner="19" indexofoutput="4" />
                      <Link inputowner="6" indexofinput="2" outputowner="26" indexofoutput="4" />
                      <Link inputowner="3" indexofinput="2" outputowner="6" indexofoutput="3" />
                      <Link inputowner="7" indexofinput="2" outputowner="48" indexofoutput="4" />
                      <Link inputowner="17" indexofinput="2" outputowner="7" indexofoutput="3" />
                      <Link inputowner="33" indexofinput="2" outputowner="14" indexofoutput="3" />
                      <Link inputowner="14" indexofinput="2" outputowner="10" indexofoutput="4" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
              </Timeline>
            </Box>
            <Box name="Walk To" id="5" localization="8" tooltip="Make NAO walk to a configured point relative to its current location." x="797" y="247">
              <bitmap>media/images/box/movement/walk_forward.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #~ self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        self.onStopped()]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
              <Parameter name="Distance X (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0.2" min="-2" max="2" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="5" />
              <Parameter name="Distance Y (m)" inherits_from_parent="0" content_type="2" value="0.4" default_value="0" min="-2" max="2" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="6" />
              <Parameter name="Theta (rad)" inherits_from_parent="0" content_type="2" value="-0.2" default_value="0" min="-3.14" max="3.14" tooltip="The orientation in radians for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="7" />
              <Parameter name="Left arm enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate left arm motion during the walk to make it more realistic." id="8" />
              <Parameter name="Right arm enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate right arm motion during the walk to make it more realistic." id="9" />
              <Parameter name="Stop walk when foot contact is lost" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If this option is activated, NAO stops walking when he loses foot contact with&#x0A;the ground. Else, he just keeps walking." id="10" />
              <Timeline enable="0">
                <BehaviorLayer name="behavior_layer1">
                  <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram>
                      <Box name="Walk To Advanced" id="3" localization="8" tooltip="Make NAO walk to a configured point relative to his current location with specific gait parameters." x="195" y="73">
                        <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.motion = ALProxy("ALMotion")
        footGaitConfigMin = self.motion.getFootGaitConfig("Min")
        footGaitConfigMax = self.motion.getFootGaitConfig("Max")
        self.dFootGaitConfig = {}
        for i in range(len(footGaitConfigMin)):
            # [0] = key ("MaxStepX" for ex)
            # [1] = min
            # [2] = max
            self.dFootGaitConfig[footGaitConfigMin[i][0]] = [footGaitConfigMin[i][1], footGaitConfigMax[i][1]]

    def onLoad(self):
        pass

    def onUnload(self):
        self.motion.setWalkTargetVelocity(0.0, 0.0, 0.0, 0.0)

    def onInput_onStart(self):
        # send walk configuration to ALMotion
        self.motion.setWalkArmsEnable(self.getParameter("Left arm enabled"), self.getParameter("Right arm enabled"))
        self.motion.setMotionConfig([["ENABLE_FOOT_CONTACT_PROTECTION",self.getParameter("Stop walk when foot contact is lost")]])
        for k, v in self.dFootGaitConfig.iteritems():
            for unit in ["m", "rad", "%"]:
                try: # try for each unit and do nothing if value in gaitConfig but not in parameters
                    param = self.getParameter( str(k) + " (" + unit + ")" )
                    if( unit == "%" ):
                        param = param / 100.
                    if( len(v) == 2 ):
                        v.append( param )
                    else:
                        v[2] = param
                    break
                except:
                    pass

        gaitConfig = []
        for k, v in self.dFootGaitConfig.iteritems():
            try:
                gaitConfig.append( [k, v[2]] )
            except: # if some value added in gaitConfig but not in parameters
                pass
        # active walk process
        self.motion.walkTo(self.getParameter("Distance X (m)"), self.getParameter("Distance Y (m)"), self.getParameter("Theta (rad)"), gaitConfig)
         # The walk is finished so output
        self.onStopped() #~ activate output of the box

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                        <Parameter name="Distance X (m)" inherits_from_parent="1" content_type="2" value="0" default_value="0.2" min="-2" max="2" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="5" />
                        <Parameter name="Distance Y (m)" inherits_from_parent="1" content_type="2" value="0.2" default_value="0" min="-2" max="2" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="6" />
                        <Parameter name="Theta (rad)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-3.14" max="3.14" tooltip="The orientation in radians for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="7" />
                        <Parameter name="Left arm enabled" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="Activate left arm motion during the walk to make it more realistic." id="8" />
                        <Parameter name="Right arm enabled" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="Activate right arm motion during the walk to make it more realistic." id="9" />
                        <Parameter name="Stop walk when foot contact is lost" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="If this option is activated, NAO stops walking when he loses foot contact with&#x0A;the ground. Else, he just keeps walking." id="10" />
                        <Parameter name="MaxStepX (m)" inherits_from_parent="0" content_type="2" value="0.022804" default_value="0.04" min="0.001" max="0.06" tooltip="Maximum length of forward/backward step." id="11" />
                        <Parameter name="MaxStepY (m)" inherits_from_parent="0" content_type="2" value="0.126652" default_value="0.14" min="0.101" max="0.16" tooltip="Maximum length of lateral step." id="12" />
                        <Parameter name="MaxStepTheta (rad)" inherits_from_parent="0" content_type="2" value="0.228217" default_value="0.349065" min="0.001" max="0.523598" tooltip="Maximum length of rotational step." id="13" />
                        <Parameter name="MaxStepFrequency (%)" inherits_from_parent="0" content_type="1" value="49" default_value="100" min="0" max="100" tooltip="Maximum step frequency." id="14" />
                        <Parameter name="StepHeight (m)" inherits_from_parent="0" content_type="2" value="0.02" default_value="0.02" min="0.005" max="0.04" tooltip="Height of the step i.e. how high NAO put his feet up during the walk." id="15" />
                        <Parameter name="TorsoWx (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-0.122173" max="0.122173" tooltip="Lateral angle of the torso during the walk.&#x0A;&#x0A;Note: A positive value means that NAO will be tilted to the right. A negative&#x0A;value means he is tilted to the left." id="16" />
                        <Parameter name="TorsoWy (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-0.122173" max="0.122173" tooltip="Angle of the torso toward forward/backward during the walk.&#x0A;&#x0A;Note: A positive value means that NAO will be inclined forward. A negative&#x0A;value means he is inclined backward." id="17" />
                        <Resource name="Legs" type="Lock" timeout="0" />
                      </Box>
                      <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="2" />
                      <Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
              </Timeline>
              <Resource name="Legs" type="Lock" timeout="0" />
            </Box>
            <Box name="Wait" id="14" localization="8" tooltip="Wait a moment before sending a signal on the output. The wait can be stopped any&#x0A;time. You may restart it any time, and it will start again." x="627" y="179">
              <bitmap>media/images/box/wait.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[import threading

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.tb = False

    def onUnload(self):
        if( self.tb ):
            self.tb.cancel()
            self.tb = False

    def triggerOutput( self, rPeriod = 1 ):
        self.onUnload() # to clean everything
        self.timerOutput()

    def startTimer( self, rPeriod = 1 ):
        if( self.tb ):
            self.tb.cancel()
        self.tb = threading.Timer( rPeriod, self.triggerOutput, [rPeriod] )
        self.tb.start()

    def onInput_onStart(self):
        self.startTimer( self.getParameter("Timeout (s)") )

    def onInput_onStop(self):
        bRunning = self.tb
        self.onUnload()
        if( bRunning ):
            self.timerOutput()]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
              <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is ellapsed, or if the box is stopped." id="4" />
              <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="3" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
            </Box>
            <Box name="Wait (1)" id="27" localization="8" tooltip="Wait a moment before sending a signal on the output. The wait can be stopped any&#x0A;time. You may restart it any time, and it will start again." x="799" y="344">
              <bitmap>media/images/box/wait.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[import threading

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.tb = False

    def onUnload(self):
        if( self.tb ):
            self.tb.cancel()
            self.tb = False

    def triggerOutput( self, rPeriod = 1 ):
        self.onUnload() # to clean everything
        self.timerOutput()

    def startTimer( self, rPeriod = 1 ):
        if( self.tb ):
            self.tb.cancel()
        self.tb = threading.Timer( rPeriod, self.triggerOutput, [rPeriod] )
        self.tb.start()

    def onInput_onStart(self):
        self.startTimer( self.getParameter("Timeout (s)") )

    def onInput_onStop(self):
        bRunning = self.tb
        self.onUnload()
        if( bRunning ):
            self.timerOutput()]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
              <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is ellapsed, or if the box is stopped." id="4" />
              <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="3" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
            </Box>
            <Box name="Wait (2)" id="29" localization="8" tooltip="Wait a moment before sending a signal on the output. The wait can be stopped any&#x0A;time. You may restart it any time, and it will start again." x="963" y="347">
              <bitmap>media/images/box/wait.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[import threading

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.tb = False

    def onUnload(self):
        if( self.tb ):
            self.tb.cancel()
            self.tb = False

    def triggerOutput( self, rPeriod = 1 ):
        self.onUnload() # to clean everything
        self.timerOutput()

    def startTimer( self, rPeriod = 1 ):
        if( self.tb ):
            self.tb.cancel()
        self.tb = threading.Timer( rPeriod, self.triggerOutput, [rPeriod] )
        self.tb.start()

    def onInput_onStart(self):
        self.startTimer( self.getParameter("Timeout (s)") )

    def onInput_onStop(self):
        bRunning = self.tb
        self.onUnload()
        if( bRunning ):
            self.timerOutput()]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
              <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is ellapsed, or if the box is stopped." id="4" />
              <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="3" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
            </Box>
            <Box name="SetTorsoHeadPose" id="30" localization="8" tooltip="Enter tooltip here" x="961" y="248">
              <bitmap>media/images/box/box-diagram.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.motion = ALProxy("ALMotion")
        self.name= 'Torso'
        self.headnames  = ['HeadYaw', 'HeadPitch']
        self.space= 2#SPACE_NAO
        self.fractionMaxSpeed = 0.1
        self.axisMask = 63
        print self.motion.getSummary()

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #~ self.onStopped() #~ activate output of the box

        #Set Torso Pose
        X=self.getParameter("XPosition")
        Y=self.getParameter("YPosition")
        Z=self.getParameter("ZPosition")
        WX=self.getParameter("WXAngle")
        WY=self.getParameter("WYAngle")
        WZ=self.getParameter("WZAngle")
        position =[X, Y, Z, WX, WY , WZ]
        self.motion.setPosition(self.name, self.space, position, self.fractionMaxSpeed, self.axisMask)

        #time.sleep(5.0)

        # Set head angles, using a fraction of max speed
        HeadYawAngle=self.getParameter("HeadYawAngle")
        HeadPitchAngle=self.getParameter("HeadPitchAngle")
        angles  = [HeadYawAngle, HeadPitchAngle]
        self.motion.setAngles(self.headnames, angles, self.fractionMaxSpeed)

        self.onStopped()

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
              <Output name="Myoutput" type="2" type_size="1" nature="2" inner="0" tooltip="" id="5" />
              <Parameter name="XPosition" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-0.5" max="0.5" tooltip="" id="6" />
              <Parameter name="YPosition" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-0.5" max="0.5" tooltip="" id="7" />
              <Parameter name="ZPosition" inherits_from_parent="0" content_type="2" value="0.25" default_value="0.25" min="0.22" max="0.3" tooltip="" id="8" />
              <Parameter name="WXAngle" inherits_from_parent="0" content_type="2" value="0.16" default_value="0" min="-1" max="1" tooltip="" id="9" />
              <Parameter name="WYAngle" inherits_from_parent="0" content_type="2" value="0.08" default_value="0" min="-1" max="1" tooltip="" id="10" />
              <Parameter name="WZAngle" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="" id="11" />
              <Parameter name="HeadYawAngle" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="" id="12" />
              <Parameter name="HeadPitchAngle" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="" id="13" />
            </Box>
            <Box name="Walk To (1)" id="2" localization="8" tooltip="Make NAO walk to a configured point relative to its current location." x="634" y="273">
              <bitmap>media/images/box/movement/walk_forward.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #~ self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        self.onStopped()]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
              <Parameter name="Distance X (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0.2" min="-2" max="2" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="5" />
              <Parameter name="Distance Y (m)" inherits_from_parent="0" content_type="2" value="0.4" default_value="0" min="-2" max="2" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="6" />
              <Parameter name="Theta (rad)" inherits_from_parent="0" content_type="2" value="-0.2" default_value="0" min="-3.14" max="3.14" tooltip="The orientation in radians for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="7" />
              <Parameter name="Left arm enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate left arm motion during the walk to make it more realistic." id="8" />
              <Parameter name="Right arm enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate right arm motion during the walk to make it more realistic." id="9" />
              <Parameter name="Stop walk when foot contact is lost" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If this option is activated, NAO stops walking when he loses foot contact with&#x0A;the ground. Else, he just keeps walking." id="10" />
              <Timeline enable="0">
                <BehaviorLayer name="behavior_layer1">
                  <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram>
                      <Box name="Walk To Advanced" id="3" localization="8" tooltip="Make NAO walk to a configured point relative to his current location with specific gait parameters." x="195" y="73">
                        <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.motion = ALProxy("ALMotion")
        footGaitConfigMin = self.motion.getFootGaitConfig("Min")
        footGaitConfigMax = self.motion.getFootGaitConfig("Max")
        self.dFootGaitConfig = {}
        for i in range(len(footGaitConfigMin)):
            # [0] = key ("MaxStepX" for ex)
            # [1] = min
            # [2] = max
            self.dFootGaitConfig[footGaitConfigMin[i][0]] = [footGaitConfigMin[i][1], footGaitConfigMax[i][1]]

    def onLoad(self):
        pass

    def onUnload(self):
        self.motion.setWalkTargetVelocity(0.0, 0.0, 0.0, 0.0)

    def onInput_onStart(self):
        # send walk configuration to ALMotion
        self.motion.setWalkArmsEnable(self.getParameter("Left arm enabled"), self.getParameter("Right arm enabled"))
        self.motion.setMotionConfig([["ENABLE_FOOT_CONTACT_PROTECTION",self.getParameter("Stop walk when foot contact is lost")]])
        for k, v in self.dFootGaitConfig.iteritems():
            for unit in ["m", "rad", "%"]:
                try: # try for each unit and do nothing if value in gaitConfig but not in parameters
                    param = self.getParameter( str(k) + " (" + unit + ")" )
                    if( unit == "%" ):
                        param = param / 100.
                    if( len(v) == 2 ):
                        v.append( param )
                    else:
                        v[2] = param
                    break
                except:
                    pass

        gaitConfig = []
        for k, v in self.dFootGaitConfig.iteritems():
            try:
                gaitConfig.append( [k, v[2]] )
            except: # if some value added in gaitConfig but not in parameters
                pass
        # active walk process
        self.motion.walkTo(self.getParameter("Distance X (m)"), self.getParameter("Distance Y (m)"), self.getParameter("Theta (rad)"), gaitConfig)
         # The walk is finished so output
        self.onStopped() #~ activate output of the box

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                        <Parameter name="Distance X (m)" inherits_from_parent="1" content_type="2" value="0" default_value="0.2" min="-2" max="2" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="5" />
                        <Parameter name="Distance Y (m)" inherits_from_parent="1" content_type="2" value="0.2" default_value="0" min="-2" max="2" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="6" />
                        <Parameter name="Theta (rad)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-3.14" max="3.14" tooltip="The orientation in radians for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="7" />
                        <Parameter name="Left arm enabled" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="Activate left arm motion during the walk to make it more realistic." id="8" />
                        <Parameter name="Right arm enabled" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="Activate right arm motion during the walk to make it more realistic." id="9" />
                        <Parameter name="Stop walk when foot contact is lost" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="If this option is activated, NAO stops walking when he loses foot contact with&#x0A;the ground. Else, he just keeps walking." id="10" />
                        <Parameter name="MaxStepX (m)" inherits_from_parent="0" content_type="2" value="0.022804" default_value="0.04" min="0.001" max="0.06" tooltip="Maximum length of forward/backward step." id="11" />
                        <Parameter name="MaxStepY (m)" inherits_from_parent="0" content_type="2" value="0.126652" default_value="0.14" min="0.101" max="0.16" tooltip="Maximum length of lateral step." id="12" />
                        <Parameter name="MaxStepTheta (rad)" inherits_from_parent="0" content_type="2" value="0.228217" default_value="0.349065" min="0.001" max="0.523598" tooltip="Maximum length of rotational step." id="13" />
                        <Parameter name="MaxStepFrequency (%)" inherits_from_parent="0" content_type="1" value="49" default_value="100" min="0" max="100" tooltip="Maximum step frequency." id="14" />
                        <Parameter name="StepHeight (m)" inherits_from_parent="0" content_type="2" value="0.02" default_value="0.02" min="0.005" max="0.04" tooltip="Height of the step i.e. how high NAO put his feet up during the walk." id="15" />
                        <Parameter name="TorsoWx (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-0.122173" max="0.122173" tooltip="Lateral angle of the torso during the walk.&#x0A;&#x0A;Note: A positive value means that NAO will be tilted to the right. A negative&#x0A;value means he is tilted to the left." id="16" />
                        <Parameter name="TorsoWy (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-0.122173" max="0.122173" tooltip="Angle of the torso toward forward/backward during the walk.&#x0A;&#x0A;Note: A positive value means that NAO will be inclined forward. A negative&#x0A;value means he is inclined backward." id="17" />
                        <Resource name="Legs" type="Lock" timeout="0" />
                      </Box>
                      <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="2" />
                      <Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
              </Timeline>
              <Resource name="Legs" type="Lock" timeout="0" />
            </Box>
            <Box name="PosesForImages" id="7" localization="8" tooltip="Normal Pose/HeadLeft/HeadRight" x="968" y="445">
              <bitmap>media/images/box/box-diagram.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="Pattern Images_onStart" type="0" type_size="1" nature="2" inner="0" tooltip="This input has been automatically generated&#x0A;by converting several boxes into a single box." id="2" />
              <Output name="PatternImages_detectionGood" type="0" type_size="1" nature="2" inner="0" tooltip="This output has been automatically generated&#x0A;by converting several boxes into a single box." id="3" />
              <Timeline enable="0">
                <BehaviorLayer name="behavior_layer1">
                  <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram>
                      <Box name="Pattern Images" id="11" localization="8" tooltip="Enter tooltip here" x="196" y="93">
                        <bitmap>media/images/box/box-diagram.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import Image
import ImageDraw
import time
import os,sys
import cv2 as cv

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):

        flag = self.showNaoImage()
        if (flag == 1):
            global imNum
            imNum = imNum+1
            self.detectionGood()
            self.onUnload()
            #self.onStopped()
        else:
            self.detectionFailure()
            self.onUnload()
            #self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        #self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass

    def sayWord(self,s):
        ttsProxy=ALProxy("ALTextToSpeech")
        ttsProxy.say(s)


    def showNaoImage(self):

        camProxy = ALProxy("ALVideoDevice")
        resolution = 2    # VGA
        colorSpace = 11   # RGB
        found = 0

        videoClient = camProxy.subscribe("python_client", resolution, colorSpace, 5)

        t0 = time.time()

        naoImage = camProxy.getImageRemote(videoClient)

        # Get the image size and pixel array.
        imageWidth = naoImage[0]
        imageHeight = naoImage[1]
        array = naoImage[6]

        # Create a PIL Image from our pixel array.
        im = Image.fromstring("RGB", (imageWidth, imageHeight), array)

        # Create ipl Image to use with opencv
        cv_img = cv.CreateImageHeader(im.size, cv.IPL_DEPTH_8U, 3)  # RGB image
        cv.SetData(cv_img, im.tostring(), im.size[0]*3)
        cv.CvtColor(cv_img, cv_img, cv.CV_RGB2BGR)

        gray_image=cv.CreateImage(cv.GetSize(cv_img),8,1)
        cv.CvtColor(cv_img,gray_image,cv.CV_BGR2GRAY)


        (found,corners)=cv.FindChessboardCorners(gray_image,(7,5),cv.CV_CALIB_CB_ADAPTIVE_THRESH| cv.CV_CALIB_CB_FILTER_QUADS)
        if found == 1:

            self.sayWord("Corners Detected")

            self.sayWord("Saving Image")

        else:

            self.sayWord("Corners can not be detected")

            flag = 0
            camProxy.unsubscribe(videoClient)
            return flag


        t1 = time.time()

        # Time the image transfer.
        self.logger.info("acquisition delay "+str(t1 - t0))

        camProxy.unsubscribe(videoClient)


        self.logger.info(str(imNum))

        # Save the image.
        imName = "image"+str(imNum)+".jpg"
        im.save("/home/nao/SavedImages/"+imName)
        self.sayWord("Image"+str(imNum)+"Saved")

        flag = 1

        return flag]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="detectionFailure" type="1" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                        <Output name="detectionGood" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                      </Box>
                      <Box name="Say" id="2" localization="8" tooltip="Say some text. Note that you must open the box to enter the text." x="369" y="150">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean." id="6" />
                        <Timeline enable="0">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram>
                                <Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="422" y="65">
                                  <bitmap>media/images/box/interaction/say.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                  <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                  <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                </Box>
                                <Box name="Localized Text" id="5" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="114" y="68">
                                  <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.sentences = {
			"Chinese" : " 你好 ",
			"English" : " Changing position ",
			"French" : " Bonjour ",
			"German" : " Hallo ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요  ",
			"Portuguese" : " Olá ",
			"Spanish" : " Hola ",
		}

	def onLoad(self):
		self.tts = self.session().service("ALTextToSpeech")

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
                                    </content>
                                  </script>
                                  <pluginContent>
                                    <chinese uiName="‎普通话 (Mandarin Chinese)" languageName="Chinese">
                                      <![CDATA[你好]]>
                                    </chinese>
                                    <english uiName="‎American English (American English)" languageName="English">
                                      <![CDATA[Changing position]]>
                                    </english>
                                    <french uiName="‎Français (French)" languageName="French">
                                      <![CDATA[Bonjour]]>
                                    </french>
                                    <german uiName="‎Deutsch (German)" languageName="German">
                                      <![CDATA[Hallo]]>
                                    </german>
                                    <italian uiName="‎Italiano (Italian)" languageName="Italian">
                                      <![CDATA[Ciao]]>
                                    </italian>
                                    <japanese uiName="‎日本語 (Japanese)" languageName="Japanese">
                                      <![CDATA[こんにちは]]>
                                    </japanese>
                                    <korean uiName="‎한국어 (Korean)" languageName="Korean">
                                      <![CDATA[안녕하세요 ]]>
                                    </korean>
                                    <portuguese uiName="‎Português (Portuguese)" languageName="Portuguese">
                                      <![CDATA[Olá]]>
                                    </portuguese>
                                    <spanish uiName="‎Español (Spanish)" languageName="Spanish">
                                      <![CDATA[Hola]]>
                                    </spanish>
                                    <language>english</language>
                                  </pluginContent>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                  <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                </Box>
                                <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" />
                                <Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                      </Box>
                      <Link inputowner="11" indexofinput="2" outputowner="0" indexofoutput="2" />
                      <Link inputowner="0" indexofinput="3" outputowner="11" indexofoutput="5" />
                      <Link inputowner="2" indexofinput="2" outputowner="11" indexofoutput="4" />
                      <Link inputowner="0" indexofinput="3" outputowner="2" indexofoutput="4" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
              </Timeline>
            </Box>
            <Box name="PosesForImages (1)" id="6" localization="8" tooltip="Normal Pose/HeadLeft/HeadRight" x="788" y="147">
              <bitmap>media/images/box/box-diagram.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="Pattern Images_onStart" type="0" type_size="1" nature="2" inner="0" tooltip="This input has been automatically generated&#x0A;by converting several boxes into a single box." id="2" />
              <Output name="PatternImages_detectionGood" type="0" type_size="1" nature="2" inner="0" tooltip="This output has been automatically generated&#x0A;by converting several boxes into a single box." id="3" />
              <Timeline enable="0">
                <BehaviorLayer name="behavior_layer1">
                  <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram scale="52.9732">
                      <Box name="Pattern Images" id="11" localization="8" tooltip="Enter tooltip here" x="74" y="194">
                        <bitmap>media/images/box/box-diagram.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import Image
import ImageDraw
import time
import os,sys
import cv2 as cv

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):

        flag = self.showNaoImage()
        if (flag == 1):
            global imNum
            imNum = imNum+1
            self.detectionGood()
            self.onUnload()
            #self.onStopped()
        else:
            self.detectionFailure()
            self.onUnload()
            #self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        #self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass

    def sayWord(self,s):
        ttsProxy=ALProxy("ALTextToSpeech")
        ttsProxy.say(s)


    def showNaoImage(self):

        camProxy = ALProxy("ALVideoDevice")
        resolution = 2    # VGA
        colorSpace = 11   # RGB
        found = 0

        videoClient = camProxy.subscribe("python_client", resolution, colorSpace, 5)

        t0 = time.time()

        naoImage = camProxy.getImageRemote(videoClient)

        # Get the image size and pixel array.
        imageWidth = naoImage[0]
        imageHeight = naoImage[1]
        array = naoImage[6]

        # Create a PIL Image from our pixel array.
        im = Image.fromstring("RGB", (imageWidth, imageHeight), array)

        # Create ipl Image to use with opencv
        cv_img = cv.CreateImageHeader(im.size, cv.IPL_DEPTH_8U, 3)  # RGB image
        cv.SetData(cv_img, im.tostring(), im.size[0]*3)
        cv.CvtColor(cv_img, cv_img, cv.CV_RGB2BGR)

        gray_image=cv.CreateImage(cv.GetSize(cv_img),8,1)
        cv.CvtColor(cv_img,gray_image,cv.CV_BGR2GRAY)


        (found,corners)=cv.FindChessboardCorners(gray_image,(7,5),cv.CV_CALIB_CB_ADAPTIVE_THRESH| cv.CV_CALIB_CB_FILTER_QUADS)
        if found == 1:

            self.sayWord("Corners Detected")

            self.sayWord("Saving Image")

        else:

            self.sayWord("Corners can not be detected")

            flag = 0
            camProxy.unsubscribe(videoClient)
            return flag


        t1 = time.time()

        # Time the image transfer.
        self.logger.info("acquisition delay "+str(t1 - t0))

        camProxy.unsubscribe(videoClient)


        self.logger.info(str(imNum))

        # Save the image.
        imName = "image"+str(imNum)+".jpg"
        im.save("/home/nao/SavedImages/"+imName)
        self.sayWord("Image"+str(imNum)+"Saved")

        flag = 1

        return flag]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="detectionFailure" type="1" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                        <Output name="detectionGood" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                      </Box>
                      <Box name="left" id="12" localization="8" tooltip='Robot will go to the position &quot;left&#x0A;Position description : &#x0A;' x="99" y="33">
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="20">
                          <ActuatorList model="nao">
                            <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                              <Key frame="20" value="26.0135" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                              <Key frame="20" value="-0.969217" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                              <Key frame="20" value="83.3189" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                              <Key frame="20" value="8.96255" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                              <Key frame="20" value="-52.5617" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                              <Key frame="20" value="-21.7948" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                              <Key frame="20" value="-62.4934" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                              <Key frame="20" value="0.2112" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                              <Key frame="20" value="90.3551" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                              <Key frame="20" value="-14.0651" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                              <Key frame="20" value="58.7093" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                              <Key frame="20" value="37.9716" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                              <Key frame="20" value="42.1856" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                              <Key frame="20" value="0.258" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                              <Key frame="20" value="-13.3571" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                              <Key frame="20" value="2.46338" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                              <Key frame="20" value="12.2194" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                              <Key frame="20" value="-4.13332" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                              <Key frame="20" value="3.24959" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                              <Key frame="20" value="-2.81013" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                              <Key frame="20" value="-8.25942" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                              <Key frame="20" value="11.5114" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                              <Key frame="20" value="-5.29" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                              <Key frame="20" value="5.89115" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                              <Key frame="20" value="6.77007" />
                            </ActuatorCurve>
                          </ActuatorList>
                        </Timeline>
                      </Box>
                      <Box name="Pattern Images" id="14" localization="8" tooltip="Enter tooltip here" x="216" y="28">
                        <bitmap>media/images/box/box-diagram.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import Image
import ImageDraw
import time
import os,sys
import cv2 as cv

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):

        flag = self.showNaoImage()
        if (flag == 1):
            global imNum
            imNum = imNum+1
            self.detectionGood()
            self.onUnload()
            #self.onStopped()
        else:
            self.detectionFailure()
            self.onUnload()
            #self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        #self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass

    def sayWord(self,s):
        ttsProxy=ALProxy("ALTextToSpeech")
        ttsProxy.say(s)


    def showNaoImage(self):

        camProxy = ALProxy("ALVideoDevice")
        resolution = 2    # VGA
        colorSpace = 11   # RGB
        found = 0

        videoClient = camProxy.subscribe("python_client", resolution, colorSpace, 5)

        t0 = time.time()

        naoImage = camProxy.getImageRemote(videoClient)

        # Get the image size and pixel array.
        imageWidth = naoImage[0]
        imageHeight = naoImage[1]
        array = naoImage[6]

        # Create a PIL Image from our pixel array.
        im = Image.fromstring("RGB", (imageWidth, imageHeight), array)

        # Create ipl Image to use with opencv
        cv_img = cv.CreateImageHeader(im.size, cv.IPL_DEPTH_8U, 3)  # RGB image
        cv.SetData(cv_img, im.tostring(), im.size[0]*3)
        cv.CvtColor(cv_img, cv_img, cv.CV_RGB2BGR)

        gray_image=cv.CreateImage(cv.GetSize(cv_img),8,1)
        cv.CvtColor(cv_img,gray_image,cv.CV_BGR2GRAY)


        (found,corners)=cv.FindChessboardCorners(gray_image,(7,5),cv.CV_CALIB_CB_ADAPTIVE_THRESH| cv.CV_CALIB_CB_FILTER_QUADS)
        if found == 1:

            self.sayWord("Corners Detected")

            self.sayWord("Saving Image")

        else:

            self.sayWord("Corners can not be detected")

            flag = 0
            camProxy.unsubscribe(videoClient)
            return flag


        t1 = time.time()

        # Time the image transfer.
        self.logger.info("acquisition delay "+str(t1 - t0))

        camProxy.unsubscribe(videoClient)


        self.logger.info(str(imNum))

        # Save the image.
        imName = "image"+str(imNum)+".jpg"
        im.save("/home/nao/SavedImages/"+imName)
        self.sayWord("Image"+str(imNum)+"Saved")

        flag = 1

        return flag]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="detectionFailure" type="1" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                        <Output name="detectionGood" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                      </Box>
                      <Box name="right" id="15" localization="8" tooltip='Robot will go to the position &quot;right&#x0A;Position description : &#x0A;' x="370" y="113">
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="20">
                          <ActuatorList model="nao">
                            <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                              <Key frame="20" value="-32.9618" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                              <Key frame="20" value="-1.145" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                              <Key frame="20" value="83.4068" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                              <Key frame="20" value="8.96255" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                              <Key frame="20" value="-52.5617" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                              <Key frame="20" value="-21.7948" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                              <Key frame="20" value="-62.4934" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                              <Key frame="20" value="0.2108" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                              <Key frame="20" value="90.3551" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                              <Key frame="20" value="-14.0651" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                              <Key frame="20" value="58.7093" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                              <Key frame="20" value="37.8837" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                              <Key frame="20" value="42.1856" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                              <Key frame="20" value="0.258" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                              <Key frame="20" value="-13.445" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                              <Key frame="20" value="2.46338" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                              <Key frame="20" value="12.2194" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                              <Key frame="20" value="-4.13332" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                              <Key frame="20" value="2.89802" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                              <Key frame="20" value="-2.81013" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                              <Key frame="20" value="-8.25942" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                              <Key frame="20" value="11.1598" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                              <Key frame="20" value="-5.29" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                              <Key frame="20" value="5.53958" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                              <Key frame="20" value="6.77007" />
                            </ActuatorCurve>
                          </ActuatorList>
                        </Timeline>
                      </Box>
                      <Box name="Pattern Images" id="16" localization="8" tooltip="Enter tooltip here" x="532" y="115">
                        <bitmap>media/images/box/box-diagram.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import Image
import ImageDraw
import time
import os,sys
import cv2 as cv

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):

        flag = self.showNaoImage()
        if (flag == 1):
            global imNum
            imNum = imNum+1
            self.detectionGood()
            self.onUnload()
            #self.onStopped()
        else:
            self.detectionFailure()
            self.onUnload()
            #self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        #self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass

    def sayWord(self,s):
        ttsProxy=ALProxy("ALTextToSpeech")
        ttsProxy.say(s)


    def showNaoImage(self):

        camProxy = ALProxy("ALVideoDevice")
        resolution = 2    # VGA
        colorSpace = 11   # RGB
        found = 0

        videoClient = camProxy.subscribe("python_client", resolution, colorSpace, 5)

        t0 = time.time()

        naoImage = camProxy.getImageRemote(videoClient)

        # Get the image size and pixel array.
        imageWidth = naoImage[0]
        imageHeight = naoImage[1]
        array = naoImage[6]

        # Create a PIL Image from our pixel array.
        im = Image.fromstring("RGB", (imageWidth, imageHeight), array)

        # Create ipl Image to use with opencv
        cv_img = cv.CreateImageHeader(im.size, cv.IPL_DEPTH_8U, 3)  # RGB image
        cv.SetData(cv_img, im.tostring(), im.size[0]*3)
        cv.CvtColor(cv_img, cv_img, cv.CV_RGB2BGR)

        gray_image=cv.CreateImage(cv.GetSize(cv_img),8,1)
        cv.CvtColor(cv_img,gray_image,cv.CV_BGR2GRAY)


        (found,corners)=cv.FindChessboardCorners(gray_image,(7,5),cv.CV_CALIB_CB_ADAPTIVE_THRESH| cv.CV_CALIB_CB_FILTER_QUADS)
        if found == 1:

            self.sayWord("Corners Detected")

            self.sayWord("Saving Image")

        else:

            self.sayWord("Corners can not be detected")

            flag = 0
            camProxy.unsubscribe(videoClient)
            return flag


        t1 = time.time()

        # Time the image transfer.
        self.logger.info("acquisition delay "+str(t1 - t0))

        camProxy.unsubscribe(videoClient)


        self.logger.info(str(imNum))

        # Save the image.
        imName = "image"+str(imNum)+".jpg"
        im.save("/home/nao/SavedImages/"+imName)
        self.sayWord("Image"+str(imNum)+"Saved")

        flag = 1

        return flag]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="detectionFailure" type="1" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                        <Output name="detectionGood" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                      </Box>
                      <Box name="Init" id="26" localization="8" tooltip='Robot will go to the position &quot;Init&#x0A;Position description : Nao is ready to do anything from this position !&#x0A;' x="368" y="13">
                        <bitmap>media/images/positions/Pos_init.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="20">
                          <ActuatorList model="nao">
                            <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                              <Key frame="20" value="80" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                              <Key frame="20" value="20" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                              <Key frame="20" value="-80" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                              <Key frame="20" value="-60" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                              <Key frame="20" value="80" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                              <Key frame="20" value="-20" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                              <Key frame="20" value="80" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                              <Key frame="20" value="60" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                              <Key frame="20" value="-25" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                              <Key frame="20" value="40" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                              <Key frame="20" value="-20" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                              <Key frame="20" value="-25" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                              <Key frame="20" value="40" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                              <Key frame="20" value="-20" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                          </ActuatorList>
                        </Timeline>
                      </Box>
                      <Box name="Init" id="1" localization="8" tooltip='Robot will go to the position &quot;Init&#x0A;Position description : Nao is ready to do anything from this position !&#x0A;' x="715" y="51">
                        <bitmap>media/images/positions/Pos_init.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="20">
                          <ActuatorList model="nao">
                            <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                              <Key frame="20" value="80" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                              <Key frame="20" value="20" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                              <Key frame="20" value="-80" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                              <Key frame="20" value="-60" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                              <Key frame="20" value="80" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                              <Key frame="20" value="-20" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                              <Key frame="20" value="80" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                              <Key frame="20" value="60" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                              <Key frame="20" value="-25" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                              <Key frame="20" value="40" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                              <Key frame="20" value="-20" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                              <Key frame="20" value="-25" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                              <Key frame="20" value="40" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                              <Key frame="20" value="-20" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                          </ActuatorList>
                        </Timeline>
                      </Box>
                      <Box name="Walk To" id="3" localization="8" tooltip="Make NAO walk to a configured point relative to its current location." x="918" y="442">
                        <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #~ self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        self.onStopped()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                        <Parameter name="Distance X (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0.2" min="-2" max="2" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="5" />
                        <Parameter name="Distance Y (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-2" max="2" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="6" />
                        <Parameter name="Theta (rad)" inherits_from_parent="0" content_type="2" value="1.3" default_value="0" min="-3.14" max="3.14" tooltip="The orientation in radians for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="7" />
                        <Parameter name="Left arm enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate left arm motion during the walk to make it more realistic." id="8" />
                        <Parameter name="Right arm enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate right arm motion during the walk to make it more realistic." id="9" />
                        <Parameter name="Stop walk when foot contact is lost" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If this option is activated, NAO stops walking when he loses foot contact with&#x0A;the ground. Else, he just keeps walking." id="10" />
                        <Timeline enable="0">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram>
                                <Box name="Walk To Advanced" id="3" localization="8" tooltip="Make NAO walk to a configured point relative to his current location with specific gait parameters." x="195" y="73">
                                  <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.motion = ALProxy("ALMotion")
        footGaitConfigMin = self.motion.getFootGaitConfig("Min")
        footGaitConfigMax = self.motion.getFootGaitConfig("Max")
        self.dFootGaitConfig = {}
        for i in range(len(footGaitConfigMin)):
            # [0] = key ("MaxStepX" for ex)
            # [1] = min
            # [2] = max
            self.dFootGaitConfig[footGaitConfigMin[i][0]] = [footGaitConfigMin[i][1], footGaitConfigMax[i][1]]

    def onLoad(self):
        pass

    def onUnload(self):
        self.motion.setWalkTargetVelocity(0.0, 0.0, 0.0, 0.0)

    def onInput_onStart(self):
        # send walk configuration to ALMotion
        self.motion.setWalkArmsEnable(self.getParameter("Left arm enabled"), self.getParameter("Right arm enabled"))
        self.motion.setMotionConfig([["ENABLE_FOOT_CONTACT_PROTECTION",self.getParameter("Stop walk when foot contact is lost")]])
        for k, v in self.dFootGaitConfig.iteritems():
            for unit in ["m", "rad", "%"]:
                try: # try for each unit and do nothing if value in gaitConfig but not in parameters
                    param = self.getParameter( str(k) + " (" + unit + ")" )
                    if( unit == "%" ):
                        param = param / 100.
                    if( len(v) == 2 ):
                        v.append( param )
                    else:
                        v[2] = param
                    break
                except:
                    pass

        gaitConfig = []
        for k, v in self.dFootGaitConfig.iteritems():
            try:
                gaitConfig.append( [k, v[2]] )
            except: # if some value added in gaitConfig but not in parameters
                pass
        # active walk process
        self.motion.walkTo(self.getParameter("Distance X (m)"), self.getParameter("Distance Y (m)"), self.getParameter("Theta (rad)"), gaitConfig)
         # The walk is finished so output
        self.onStopped() #~ activate output of the box

    def onInput_onStop(self):
        self.onUnload()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                  <Parameter name="Distance X (m)" inherits_from_parent="1" content_type="2" value="0.2" default_value="0.2" min="-2" max="2" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="5" />
                                  <Parameter name="Distance Y (m)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-2" max="2" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="6" />
                                  <Parameter name="Theta (rad)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-3.14" max="3.14" tooltip="The orientation in radians for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="7" />
                                  <Parameter name="Left arm enabled" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="Activate left arm motion during the walk to make it more realistic." id="8" />
                                  <Parameter name="Right arm enabled" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="Activate right arm motion during the walk to make it more realistic." id="9" />
                                  <Parameter name="Stop walk when foot contact is lost" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="If this option is activated, NAO stops walking when he loses foot contact with&#x0A;the ground. Else, he just keeps walking." id="10" />
                                  <Parameter name="MaxStepX (m)" inherits_from_parent="0" content_type="2" value="0.04" default_value="0.04" min="0.001" max="0.06" tooltip="Maximum length of forward/backward step." id="11" />
                                  <Parameter name="MaxStepY (m)" inherits_from_parent="0" content_type="2" value="0.14" default_value="0.14" min="0.101" max="0.16" tooltip="Maximum length of lateral step." id="12" />
                                  <Parameter name="MaxStepTheta (rad)" inherits_from_parent="0" content_type="2" value="0.349065" default_value="0.349065" min="0.001" max="0.523598" tooltip="Maximum length of rotational step." id="13" />
                                  <Parameter name="MaxStepFrequency (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Maximum step frequency." id="14" />
                                  <Parameter name="StepHeight (m)" inherits_from_parent="0" content_type="2" value="0.02" default_value="0.02" min="0.005" max="0.04" tooltip="Height of the step i.e. how high NAO put his feet up during the walk." id="15" />
                                  <Parameter name="TorsoWx (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-0.122173" max="0.122173" tooltip="Lateral angle of the torso during the walk.&#x0A;&#x0A;Note: A positive value means that NAO will be tilted to the right. A negative&#x0A;value means he is tilted to the left." id="16" />
                                  <Parameter name="TorsoWy (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-0.122173" max="0.122173" tooltip="Angle of the torso toward forward/backward during the walk.&#x0A;&#x0A;Note: A positive value means that NAO will be inclined forward. A negative&#x0A;value means he is inclined backward." id="17" />
                                  <Resource name="Legs" type="Lock" timeout="0" />
                                </Box>
                                <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="2" />
                                <Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                        <Resource name="Legs" type="Lock" timeout="0" />
                      </Box>
                      <Box name="Init" id="2" localization="8" tooltip='Robot will go to the position &quot;Init&#x0A;Position description : Nao is ready to do anything from this position !&#x0A;' x="945" y="213">
                        <bitmap>media/images/positions/Pos_init.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="20">
                          <ActuatorList model="nao">
                            <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                              <Key frame="20" value="80" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                              <Key frame="20" value="20" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                              <Key frame="20" value="-80" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                              <Key frame="20" value="-60" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                              <Key frame="20" value="80" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                              <Key frame="20" value="-20" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                              <Key frame="20" value="80" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                              <Key frame="20" value="60" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                              <Key frame="20" value="-25" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                              <Key frame="20" value="40" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                              <Key frame="20" value="-20" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                              <Key frame="20" value="-25" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                              <Key frame="20" value="40" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                              <Key frame="20" value="-20" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                          </ActuatorList>
                        </Timeline>
                      </Box>
                      <Box name="Walk To" id="4" localization="8" tooltip="Make NAO walk to a configured point relative to its current location." x="66" y="389">
                        <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #~ self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        self.onStopped()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                        <Parameter name="Distance X (m)" inherits_from_parent="0" content_type="2" value="-0.1" default_value="0.2" min="-2" max="2" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="5" />
                        <Parameter name="Distance Y (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-2" max="2" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="6" />
                        <Parameter name="Theta (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-3.14" max="3.14" tooltip="The orientation in radians for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="7" />
                        <Parameter name="Left arm enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate left arm motion during the walk to make it more realistic." id="8" />
                        <Parameter name="Right arm enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate right arm motion during the walk to make it more realistic." id="9" />
                        <Parameter name="Stop walk when foot contact is lost" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If this option is activated, NAO stops walking when he loses foot contact with&#x0A;the ground. Else, he just keeps walking." id="10" />
                        <Timeline enable="0">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram>
                                <Box name="Walk To Advanced" id="3" localization="8" tooltip="Make NAO walk to a configured point relative to his current location with specific gait parameters." x="195" y="73">
                                  <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.motion = ALProxy("ALMotion")
        footGaitConfigMin = self.motion.getFootGaitConfig("Min")
        footGaitConfigMax = self.motion.getFootGaitConfig("Max")
        self.dFootGaitConfig = {}
        for i in range(len(footGaitConfigMin)):
            # [0] = key ("MaxStepX" for ex)
            # [1] = min
            # [2] = max
            self.dFootGaitConfig[footGaitConfigMin[i][0]] = [footGaitConfigMin[i][1], footGaitConfigMax[i][1]]

    def onLoad(self):
        pass

    def onUnload(self):
        self.motion.setWalkTargetVelocity(0.0, 0.0, 0.0, 0.0)

    def onInput_onStart(self):
        # send walk configuration to ALMotion
        self.motion.setWalkArmsEnable(self.getParameter("Left arm enabled"), self.getParameter("Right arm enabled"))
        self.motion.setMotionConfig([["ENABLE_FOOT_CONTACT_PROTECTION",self.getParameter("Stop walk when foot contact is lost")]])
        for k, v in self.dFootGaitConfig.iteritems():
            for unit in ["m", "rad", "%"]:
                try: # try for each unit and do nothing if value in gaitConfig but not in parameters
                    param = self.getParameter( str(k) + " (" + unit + ")" )
                    if( unit == "%" ):
                        param = param / 100.
                    if( len(v) == 2 ):
                        v.append( param )
                    else:
                        v[2] = param
                    break
                except:
                    pass

        gaitConfig = []
        for k, v in self.dFootGaitConfig.iteritems():
            try:
                gaitConfig.append( [k, v[2]] )
            except: # if some value added in gaitConfig but not in parameters
                pass
        # active walk process
        self.motion.walkTo(self.getParameter("Distance X (m)"), self.getParameter("Distance Y (m)"), self.getParameter("Theta (rad)"), gaitConfig)
         # The walk is finished so output
        self.onStopped() #~ activate output of the box

    def onInput_onStop(self):
        self.onUnload()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                  <Parameter name="Distance X (m)" inherits_from_parent="1" content_type="2" value="0.2" default_value="0.2" min="-2" max="2" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="5" />
                                  <Parameter name="Distance Y (m)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-2" max="2" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="6" />
                                  <Parameter name="Theta (rad)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-3.14" max="3.14" tooltip="The orientation in radians for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="7" />
                                  <Parameter name="Left arm enabled" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="Activate left arm motion during the walk to make it more realistic." id="8" />
                                  <Parameter name="Right arm enabled" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="Activate right arm motion during the walk to make it more realistic." id="9" />
                                  <Parameter name="Stop walk when foot contact is lost" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="If this option is activated, NAO stops walking when he loses foot contact with&#x0A;the ground. Else, he just keeps walking." id="10" />
                                  <Parameter name="MaxStepX (m)" inherits_from_parent="0" content_type="2" value="0.04" default_value="0.04" min="0.001" max="0.06" tooltip="Maximum length of forward/backward step." id="11" />
                                  <Parameter name="MaxStepY (m)" inherits_from_parent="0" content_type="2" value="0.14" default_value="0.14" min="0.101" max="0.16" tooltip="Maximum length of lateral step." id="12" />
                                  <Parameter name="MaxStepTheta (rad)" inherits_from_parent="0" content_type="2" value="0.349065" default_value="0.349065" min="0.001" max="0.523598" tooltip="Maximum length of rotational step." id="13" />
                                  <Parameter name="MaxStepFrequency (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Maximum step frequency." id="14" />
                                  <Parameter name="StepHeight (m)" inherits_from_parent="0" content_type="2" value="0.02" default_value="0.02" min="0.005" max="0.04" tooltip="Height of the step i.e. how high NAO put his feet up during the walk." id="15" />
                                  <Parameter name="TorsoWx (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-0.122173" max="0.122173" tooltip="Lateral angle of the torso during the walk.&#x0A;&#x0A;Note: A positive value means that NAO will be tilted to the right. A negative&#x0A;value means he is tilted to the left." id="16" />
                                  <Parameter name="TorsoWy (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-0.122173" max="0.122173" tooltip="Angle of the torso toward forward/backward during the walk.&#x0A;&#x0A;Note: A positive value means that NAO will be inclined forward. A negative&#x0A;value means he is inclined backward." id="17" />
                                  <Resource name="Legs" type="Lock" timeout="0" />
                                </Box>
                                <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="2" />
                                <Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                        <Resource name="Legs" type="Lock" timeout="0" />
                      </Box>
                      <Box name="Pattern Images" id="5" localization="8" tooltip="Enter tooltip here" x="207" y="395">
                        <bitmap>media/images/box/box-diagram.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import Image
import ImageDraw
import time
import os,sys
import cv2 as cv

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):

        flag = self.showNaoImage()
        if (flag == 1):
            global imNum
            imNum = imNum+1
            self.detectionGood()
            self.onUnload()
            #self.onStopped()
        else:
            self.detectionFailure()
            self.onUnload()
            #self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        #self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass

    def sayWord(self,s):
        ttsProxy=ALProxy("ALTextToSpeech")
        ttsProxy.say(s)


    def showNaoImage(self):

        camProxy = ALProxy("ALVideoDevice")
        resolution = 2    # VGA
        colorSpace = 11   # RGB
        found = 0

        videoClient = camProxy.subscribe("python_client", resolution, colorSpace, 5)

        t0 = time.time()

        naoImage = camProxy.getImageRemote(videoClient)

        # Get the image size and pixel array.
        imageWidth = naoImage[0]
        imageHeight = naoImage[1]
        array = naoImage[6]

        # Create a PIL Image from our pixel array.
        im = Image.fromstring("RGB", (imageWidth, imageHeight), array)

        # Create ipl Image to use with opencv
        cv_img = cv.CreateImageHeader(im.size, cv.IPL_DEPTH_8U, 3)  # RGB image
        cv.SetData(cv_img, im.tostring(), im.size[0]*3)
        cv.CvtColor(cv_img, cv_img, cv.CV_RGB2BGR)

        gray_image=cv.CreateImage(cv.GetSize(cv_img),8,1)
        cv.CvtColor(cv_img,gray_image,cv.CV_BGR2GRAY)


        (found,corners)=cv.FindChessboardCorners(gray_image,(7,5),cv.CV_CALIB_CB_ADAPTIVE_THRESH| cv.CV_CALIB_CB_FILTER_QUADS)
        if found == 1:

            self.sayWord("Corners Detected")

            self.sayWord("Saving Image")

        else:

            self.sayWord("Corners can not be detected")

            flag = 0
            camProxy.unsubscribe(videoClient)
            return flag


        t1 = time.time()

        # Time the image transfer.
        self.logger.info("acquisition delay "+str(t1 - t0))

        camProxy.unsubscribe(videoClient)


        self.logger.info(str(imNum))

        # Save the image.
        imName = "image"+str(imNum)+".jpg"
        im.save("/home/nao/SavedImages/"+imName)
        self.sayWord("Image"+str(imNum)+"Saved")

        flag = 1

        return flag]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="detectionFailure" type="1" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                        <Output name="detectionGood" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                      </Box>
                      <Box name="Init" id="6" localization="8" tooltip='Robot will go to the position &quot;Init&#x0A;Position description : Nao is ready to do anything from this position !&#x0A;' x="683" y="217">
                        <bitmap>media/images/positions/Pos_init.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="20">
                          <ActuatorList model="nao">
                            <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                              <Key frame="20" value="80" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                              <Key frame="20" value="20" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                              <Key frame="20" value="-80" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                              <Key frame="20" value="-60" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                              <Key frame="20" value="80" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                              <Key frame="20" value="-20" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                              <Key frame="20" value="80" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                              <Key frame="20" value="60" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                              <Key frame="20" value="-25" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                              <Key frame="20" value="40" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                              <Key frame="20" value="-20" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                              <Key frame="20" value="-25" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                              <Key frame="20" value="40" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                              <Key frame="20" value="-20" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                          </ActuatorList>
                        </Timeline>
                      </Box>
                      <Box name="Walk To" id="7" localization="8" tooltip="Make NAO walk to a configured point relative to its current location." x="517" y="15">
                        <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #~ self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        self.onStopped()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                        <Parameter name="Distance X (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0.2" min="-2" max="2" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="5" />
                        <Parameter name="Distance Y (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-2" max="2" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="6" />
                        <Parameter name="Theta (rad)" inherits_from_parent="0" content_type="2" value="0.4" default_value="0" min="-3.14" max="3.14" tooltip="The orientation in radians for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="7" />
                        <Parameter name="Left arm enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate left arm motion during the walk to make it more realistic." id="8" />
                        <Parameter name="Right arm enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate right arm motion during the walk to make it more realistic." id="9" />
                        <Parameter name="Stop walk when foot contact is lost" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If this option is activated, NAO stops walking when he loses foot contact with&#x0A;the ground. Else, he just keeps walking." id="10" />
                        <Timeline enable="0">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram>
                                <Box name="Walk To Advanced" id="3" localization="8" tooltip="Make NAO walk to a configured point relative to his current location with specific gait parameters." x="195" y="73">
                                  <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.motion = ALProxy("ALMotion")
        footGaitConfigMin = self.motion.getFootGaitConfig("Min")
        footGaitConfigMax = self.motion.getFootGaitConfig("Max")
        self.dFootGaitConfig = {}
        for i in range(len(footGaitConfigMin)):
            # [0] = key ("MaxStepX" for ex)
            # [1] = min
            # [2] = max
            self.dFootGaitConfig[footGaitConfigMin[i][0]] = [footGaitConfigMin[i][1], footGaitConfigMax[i][1]]

    def onLoad(self):
        pass

    def onUnload(self):
        self.motion.setWalkTargetVelocity(0.0, 0.0, 0.0, 0.0)

    def onInput_onStart(self):
        # send walk configuration to ALMotion
        self.motion.setWalkArmsEnable(self.getParameter("Left arm enabled"), self.getParameter("Right arm enabled"))
        self.motion.setMotionConfig([["ENABLE_FOOT_CONTACT_PROTECTION",self.getParameter("Stop walk when foot contact is lost")]])
        for k, v in self.dFootGaitConfig.iteritems():
            for unit in ["m", "rad", "%"]:
                try: # try for each unit and do nothing if value in gaitConfig but not in parameters
                    param = self.getParameter( str(k) + " (" + unit + ")" )
                    if( unit == "%" ):
                        param = param / 100.
                    if( len(v) == 2 ):
                        v.append( param )
                    else:
                        v[2] = param
                    break
                except:
                    pass

        gaitConfig = []
        for k, v in self.dFootGaitConfig.iteritems():
            try:
                gaitConfig.append( [k, v[2]] )
            except: # if some value added in gaitConfig but not in parameters
                pass
        # active walk process
        self.motion.walkTo(self.getParameter("Distance X (m)"), self.getParameter("Distance Y (m)"), self.getParameter("Theta (rad)"), gaitConfig)
         # The walk is finished so output
        self.onStopped() #~ activate output of the box

    def onInput_onStop(self):
        self.onUnload()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                  <Parameter name="Distance X (m)" inherits_from_parent="1" content_type="2" value="0.2" default_value="0.2" min="-2" max="2" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="5" />
                                  <Parameter name="Distance Y (m)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-2" max="2" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="6" />
                                  <Parameter name="Theta (rad)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-3.14" max="3.14" tooltip="The orientation in radians for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="7" />
                                  <Parameter name="Left arm enabled" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="Activate left arm motion during the walk to make it more realistic." id="8" />
                                  <Parameter name="Right arm enabled" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="Activate right arm motion during the walk to make it more realistic." id="9" />
                                  <Parameter name="Stop walk when foot contact is lost" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="If this option is activated, NAO stops walking when he loses foot contact with&#x0A;the ground. Else, he just keeps walking." id="10" />
                                  <Parameter name="MaxStepX (m)" inherits_from_parent="0" content_type="2" value="0.04" default_value="0.04" min="0.001" max="0.06" tooltip="Maximum length of forward/backward step." id="11" />
                                  <Parameter name="MaxStepY (m)" inherits_from_parent="0" content_type="2" value="0.14" default_value="0.14" min="0.101" max="0.16" tooltip="Maximum length of lateral step." id="12" />
                                  <Parameter name="MaxStepTheta (rad)" inherits_from_parent="0" content_type="2" value="0.349065" default_value="0.349065" min="0.001" max="0.523598" tooltip="Maximum length of rotational step." id="13" />
                                  <Parameter name="MaxStepFrequency (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Maximum step frequency." id="14" />
                                  <Parameter name="StepHeight (m)" inherits_from_parent="0" content_type="2" value="0.02" default_value="0.02" min="0.005" max="0.04" tooltip="Height of the step i.e. how high NAO put his feet up during the walk." id="15" />
                                  <Parameter name="TorsoWx (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-0.122173" max="0.122173" tooltip="Lateral angle of the torso during the walk.&#x0A;&#x0A;Note: A positive value means that NAO will be tilted to the right. A negative&#x0A;value means he is tilted to the left." id="16" />
                                  <Parameter name="TorsoWy (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-0.122173" max="0.122173" tooltip="Angle of the torso toward forward/backward during the walk.&#x0A;&#x0A;Note: A positive value means that NAO will be inclined forward. A negative&#x0A;value means he is inclined backward." id="17" />
                                  <Resource name="Legs" type="Lock" timeout="0" />
                                </Box>
                                <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="2" />
                                <Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                        <Resource name="Legs" type="Lock" timeout="0" />
                      </Box>
                      <Box name="Walk To" id="8" localization="8" tooltip="Make NAO walk to a configured point relative to its current location." x="866" y="80">
                        <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #~ self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        self.onStopped()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                        <Parameter name="Distance X (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0.2" min="-2" max="2" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="5" />
                        <Parameter name="Distance Y (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-2" max="2" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="6" />
                        <Parameter name="Theta (rad)" inherits_from_parent="0" content_type="2" value="-0.4" default_value="0" min="-3.14" max="3.14" tooltip="The orientation in radians for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="7" />
                        <Parameter name="Left arm enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate left arm motion during the walk to make it more realistic." id="8" />
                        <Parameter name="Right arm enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate right arm motion during the walk to make it more realistic." id="9" />
                        <Parameter name="Stop walk when foot contact is lost" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If this option is activated, NAO stops walking when he loses foot contact with&#x0A;the ground. Else, he just keeps walking." id="10" />
                        <Timeline enable="0">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram>
                                <Box name="Walk To Advanced" id="3" localization="8" tooltip="Make NAO walk to a configured point relative to his current location with specific gait parameters." x="195" y="73">
                                  <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.motion = ALProxy("ALMotion")
        footGaitConfigMin = self.motion.getFootGaitConfig("Min")
        footGaitConfigMax = self.motion.getFootGaitConfig("Max")
        self.dFootGaitConfig = {}
        for i in range(len(footGaitConfigMin)):
            # [0] = key ("MaxStepX" for ex)
            # [1] = min
            # [2] = max
            self.dFootGaitConfig[footGaitConfigMin[i][0]] = [footGaitConfigMin[i][1], footGaitConfigMax[i][1]]

    def onLoad(self):
        pass

    def onUnload(self):
        self.motion.setWalkTargetVelocity(0.0, 0.0, 0.0, 0.0)

    def onInput_onStart(self):
        # send walk configuration to ALMotion
        self.motion.setWalkArmsEnable(self.getParameter("Left arm enabled"), self.getParameter("Right arm enabled"))
        self.motion.setMotionConfig([["ENABLE_FOOT_CONTACT_PROTECTION",self.getParameter("Stop walk when foot contact is lost")]])
        for k, v in self.dFootGaitConfig.iteritems():
            for unit in ["m", "rad", "%"]:
                try: # try for each unit and do nothing if value in gaitConfig but not in parameters
                    param = self.getParameter( str(k) + " (" + unit + ")" )
                    if( unit == "%" ):
                        param = param / 100.
                    if( len(v) == 2 ):
                        v.append( param )
                    else:
                        v[2] = param
                    break
                except:
                    pass

        gaitConfig = []
        for k, v in self.dFootGaitConfig.iteritems():
            try:
                gaitConfig.append( [k, v[2]] )
            except: # if some value added in gaitConfig but not in parameters
                pass
        # active walk process
        self.motion.walkTo(self.getParameter("Distance X (m)"), self.getParameter("Distance Y (m)"), self.getParameter("Theta (rad)"), gaitConfig)
         # The walk is finished so output
        self.onStopped() #~ activate output of the box

    def onInput_onStop(self):
        self.onUnload()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                  <Parameter name="Distance X (m)" inherits_from_parent="1" content_type="2" value="0.2" default_value="0.2" min="-2" max="2" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="5" />
                                  <Parameter name="Distance Y (m)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-2" max="2" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="6" />
                                  <Parameter name="Theta (rad)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-3.14" max="3.14" tooltip="The orientation in radians for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="7" />
                                  <Parameter name="Left arm enabled" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="Activate left arm motion during the walk to make it more realistic." id="8" />
                                  <Parameter name="Right arm enabled" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="Activate right arm motion during the walk to make it more realistic." id="9" />
                                  <Parameter name="Stop walk when foot contact is lost" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="If this option is activated, NAO stops walking when he loses foot contact with&#x0A;the ground. Else, he just keeps walking." id="10" />
                                  <Parameter name="MaxStepX (m)" inherits_from_parent="0" content_type="2" value="0.04" default_value="0.04" min="0.001" max="0.06" tooltip="Maximum length of forward/backward step." id="11" />
                                  <Parameter name="MaxStepY (m)" inherits_from_parent="0" content_type="2" value="0.14" default_value="0.14" min="0.101" max="0.16" tooltip="Maximum length of lateral step." id="12" />
                                  <Parameter name="MaxStepTheta (rad)" inherits_from_parent="0" content_type="2" value="0.349065" default_value="0.349065" min="0.001" max="0.523598" tooltip="Maximum length of rotational step." id="13" />
                                  <Parameter name="MaxStepFrequency (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Maximum step frequency." id="14" />
                                  <Parameter name="StepHeight (m)" inherits_from_parent="0" content_type="2" value="0.02" default_value="0.02" min="0.005" max="0.04" tooltip="Height of the step i.e. how high NAO put his feet up during the walk." id="15" />
                                  <Parameter name="TorsoWx (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-0.122173" max="0.122173" tooltip="Lateral angle of the torso during the walk.&#x0A;&#x0A;Note: A positive value means that NAO will be tilted to the right. A negative&#x0A;value means he is tilted to the left." id="16" />
                                  <Parameter name="TorsoWy (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-0.122173" max="0.122173" tooltip="Angle of the torso toward forward/backward during the walk.&#x0A;&#x0A;Note: A positive value means that NAO will be inclined forward. A negative&#x0A;value means he is inclined backward." id="17" />
                                  <Resource name="Legs" type="Lock" timeout="0" />
                                </Box>
                                <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="2" />
                                <Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                        <Resource name="Legs" type="Lock" timeout="0" />
                      </Box>
                      <Box name="left" id="9" localization="8" tooltip='Robot will go to the position &quot;left&#x0A;Position description : &#x0A;' x="343" y="346">
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="20">
                          <ActuatorList model="nao">
                            <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                              <Key frame="20" value="26.0135" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                              <Key frame="20" value="-0.969217" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                              <Key frame="20" value="83.3189" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                              <Key frame="20" value="8.96255" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                              <Key frame="20" value="-52.5617" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                              <Key frame="20" value="-21.7948" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                              <Key frame="20" value="-62.4934" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                              <Key frame="20" value="0.2112" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                              <Key frame="20" value="90.3551" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                              <Key frame="20" value="-14.0651" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                              <Key frame="20" value="58.7093" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                              <Key frame="20" value="37.9716" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                              <Key frame="20" value="42.1856" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                              <Key frame="20" value="0.258" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                              <Key frame="20" value="-13.3571" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                              <Key frame="20" value="2.46338" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                              <Key frame="20" value="12.2194" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                              <Key frame="20" value="-4.13332" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                              <Key frame="20" value="3.24959" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                              <Key frame="20" value="-2.81013" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                              <Key frame="20" value="-8.25942" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                              <Key frame="20" value="11.5114" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                              <Key frame="20" value="-5.29" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                              <Key frame="20" value="5.89115" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                              <Key frame="20" value="6.77007" />
                            </ActuatorCurve>
                          </ActuatorList>
                        </Timeline>
                      </Box>
                      <Box name="Pattern Images" id="10" localization="8" tooltip="Enter tooltip here" x="463" y="408">
                        <bitmap>media/images/box/box-diagram.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import Image
import ImageDraw
import time
import os,sys
import cv2 as cv

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):

        flag = self.showNaoImage()
        if (flag == 1):
            global imNum
            imNum = imNum+1
            self.detectionGood()
            self.onUnload()
            #self.onStopped()
        else:
            self.detectionFailure()
            self.onUnload()
            #self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        #self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass

    def sayWord(self,s):
        ttsProxy=ALProxy("ALTextToSpeech")
        ttsProxy.say(s)


    def showNaoImage(self):

        camProxy = ALProxy("ALVideoDevice")
        resolution = 2    # VGA
        colorSpace = 11   # RGB
        found = 0

        videoClient = camProxy.subscribe("python_client", resolution, colorSpace, 5)

        t0 = time.time()

        naoImage = camProxy.getImageRemote(videoClient)

        # Get the image size and pixel array.
        imageWidth = naoImage[0]
        imageHeight = naoImage[1]
        array = naoImage[6]

        # Create a PIL Image from our pixel array.
        im = Image.fromstring("RGB", (imageWidth, imageHeight), array)

        # Create ipl Image to use with opencv
        cv_img = cv.CreateImageHeader(im.size, cv.IPL_DEPTH_8U, 3)  # RGB image
        cv.SetData(cv_img, im.tostring(), im.size[0]*3)
        cv.CvtColor(cv_img, cv_img, cv.CV_RGB2BGR)

        gray_image=cv.CreateImage(cv.GetSize(cv_img),8,1)
        cv.CvtColor(cv_img,gray_image,cv.CV_BGR2GRAY)


        (found,corners)=cv.FindChessboardCorners(gray_image,(7,5),cv.CV_CALIB_CB_ADAPTIVE_THRESH| cv.CV_CALIB_CB_FILTER_QUADS)
        if found == 1:

            self.sayWord("Corners Detected")

            self.sayWord("Saving Image")

        else:

            self.sayWord("Corners can not be detected")

            flag = 0
            camProxy.unsubscribe(videoClient)
            return flag


        t1 = time.time()

        # Time the image transfer.
        self.logger.info("acquisition delay "+str(t1 - t0))

        camProxy.unsubscribe(videoClient)


        self.logger.info(str(imNum))

        # Save the image.
        imName = "image"+str(imNum)+".jpg"
        im.save("/home/nao/SavedImages/"+imName)
        self.sayWord("Image"+str(imNum)+"Saved")

        flag = 1

        return flag]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="detectionFailure" type="1" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                        <Output name="detectionGood" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                      </Box>
                      <Box name="right" id="13" localization="8" tooltip='Robot will go to the position &quot;right&#x0A;Position description : &#x0A;' x="604" y="492">
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="20">
                          <ActuatorList model="nao">
                            <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                              <Key frame="20" value="-32.9618" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                              <Key frame="20" value="-1.145" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                              <Key frame="20" value="83.4068" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                              <Key frame="20" value="8.96255" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                              <Key frame="20" value="-52.5617" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                              <Key frame="20" value="-21.7948" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                              <Key frame="20" value="-62.4934" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                              <Key frame="20" value="0.2108" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                              <Key frame="20" value="90.3551" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                              <Key frame="20" value="-14.0651" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                              <Key frame="20" value="58.7093" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                              <Key frame="20" value="37.8837" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                              <Key frame="20" value="42.1856" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                              <Key frame="20" value="0.258" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                              <Key frame="20" value="-13.445" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                              <Key frame="20" value="2.46338" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                              <Key frame="20" value="12.2194" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                              <Key frame="20" value="-4.13332" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                              <Key frame="20" value="2.89802" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                              <Key frame="20" value="-2.81013" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                              <Key frame="20" value="-8.25942" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                              <Key frame="20" value="11.1598" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                              <Key frame="20" value="-5.29" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                              <Key frame="20" value="5.53958" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                              <Key frame="20" value="6.77007" />
                            </ActuatorCurve>
                          </ActuatorList>
                        </Timeline>
                      </Box>
                      <Box name="Init" id="17" localization="8" tooltip='Robot will go to the position &quot;Init&#x0A;Position description : Nao is ready to do anything from this position !&#x0A;' x="602" y="392">
                        <bitmap>media/images/positions/Pos_init.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="20">
                          <ActuatorList model="nao">
                            <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                              <Key frame="20" value="80" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                              <Key frame="20" value="20" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                              <Key frame="20" value="-80" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                              <Key frame="20" value="-60" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                              <Key frame="20" value="80" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                              <Key frame="20" value="-20" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                              <Key frame="20" value="80" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                              <Key frame="20" value="60" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                              <Key frame="20" value="-25" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                              <Key frame="20" value="40" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                              <Key frame="20" value="-20" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                              <Key frame="20" value="-25" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                              <Key frame="20" value="40" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                              <Key frame="20" value="-20" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                          </ActuatorList>
                        </Timeline>
                      </Box>
                      <Box name="Pattern Images" id="18" localization="8" tooltip="Enter tooltip here" x="726" y="470">
                        <bitmap>media/images/box/box-diagram.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import Image
import ImageDraw
import time
import os,sys
import cv2 as cv

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):

        flag = self.showNaoImage()
        if (flag == 1):
            global imNum
            imNum = imNum+1
            self.detectionGood()
            self.onUnload()
            #self.onStopped()
        else:
            self.detectionFailure()
            self.onUnload()
            #self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        #self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass

    def sayWord(self,s):
        ttsProxy=ALProxy("ALTextToSpeech")
        ttsProxy.say(s)


    def showNaoImage(self):

        camProxy = ALProxy("ALVideoDevice")
        resolution = 2    # VGA
        colorSpace = 11   # RGB
        found = 0

        videoClient = camProxy.subscribe("python_client", resolution, colorSpace, 5)

        t0 = time.time()

        naoImage = camProxy.getImageRemote(videoClient)

        # Get the image size and pixel array.
        imageWidth = naoImage[0]
        imageHeight = naoImage[1]
        array = naoImage[6]

        # Create a PIL Image from our pixel array.
        im = Image.fromstring("RGB", (imageWidth, imageHeight), array)

        # Create ipl Image to use with opencv
        cv_img = cv.CreateImageHeader(im.size, cv.IPL_DEPTH_8U, 3)  # RGB image
        cv.SetData(cv_img, im.tostring(), im.size[0]*3)
        cv.CvtColor(cv_img, cv_img, cv.CV_RGB2BGR)

        gray_image=cv.CreateImage(cv.GetSize(cv_img),8,1)
        cv.CvtColor(cv_img,gray_image,cv.CV_BGR2GRAY)


        (found,corners)=cv.FindChessboardCorners(gray_image,(7,5),cv.CV_CALIB_CB_ADAPTIVE_THRESH| cv.CV_CALIB_CB_FILTER_QUADS)
        if found == 1:

            self.sayWord("Corners Detected")

            self.sayWord("Saving Image")

        else:

            self.sayWord("Corners can not be detected")

            flag = 0
            camProxy.unsubscribe(videoClient)
            return flag


        t1 = time.time()

        # Time the image transfer.
        self.logger.info("acquisition delay "+str(t1 - t0))

        camProxy.unsubscribe(videoClient)


        self.logger.info(str(imNum))

        # Save the image.
        imName = "image"+str(imNum)+".jpg"
        im.save("/home/nao/SavedImages/"+imName)
        self.sayWord("Image"+str(imNum)+"Saved")

        flag = 1

        return flag]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="detectionFailure" type="1" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                        <Output name="detectionGood" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                      </Box>
                      <Link inputowner="12" indexofinput="2" outputowner="11" indexofoutput="4" />
                      <Link inputowner="14" indexofinput="2" outputowner="12" indexofoutput="4" />
                      <Link inputowner="15" indexofinput="2" outputowner="14" indexofoutput="4" />
                      <Link inputowner="16" indexofinput="2" outputowner="15" indexofoutput="4" />
                      <Link inputowner="11" indexofinput="2" outputowner="0" indexofoutput="2" />
                      <Link inputowner="0" indexofinput="3" outputowner="11" indexofoutput="5" />
                      <Link inputowner="26" indexofinput="2" outputowner="14" indexofoutput="5" />
                      <Link inputowner="1" indexofinput="2" outputowner="16" indexofoutput="5" />
                      <Link inputowner="11" indexofinput="2" outputowner="3" indexofoutput="4" />
                      <Link inputowner="2" indexofinput="2" outputowner="16" indexofoutput="4" />
                      <Link inputowner="4" indexofinput="2" outputowner="2" indexofoutput="4" />
                      <Link inputowner="5" indexofinput="2" outputowner="4" indexofoutput="4" />
                      <Link inputowner="6" indexofinput="2" outputowner="5" indexofoutput="5" />
                      <Link inputowner="0" indexofinput="3" outputowner="6" indexofoutput="4" />
                      <Link inputowner="7" indexofinput="2" outputowner="26" indexofoutput="4" />
                      <Link inputowner="0" indexofinput="3" outputowner="7" indexofoutput="4" />
                      <Link inputowner="8" indexofinput="2" outputowner="1" indexofoutput="4" />
                      <Link inputowner="0" indexofinput="3" outputowner="8" indexofoutput="4" />
                      <Link inputowner="9" indexofinput="2" outputowner="5" indexofoutput="4" />
                      <Link inputowner="13" indexofinput="2" outputowner="10" indexofoutput="4" />
                      <Link inputowner="17" indexofinput="2" outputowner="10" indexofoutput="5" />
                      <Link inputowner="10" indexofinput="2" outputowner="9" indexofoutput="4" />
                      <Link inputowner="7" indexofinput="2" outputowner="17" indexofoutput="4" />
                      <Link inputowner="18" indexofinput="2" outputowner="13" indexofoutput="4" />
                      <Link inputowner="3" indexofinput="2" outputowner="18" indexofoutput="4" />
                      <Link inputowner="1" indexofinput="2" outputowner="18" indexofoutput="5" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
              </Timeline>
            </Box>
            <Box name="PosesForImages (2)" id="47" localization="8" tooltip="Normal Pose/HeadLeft/HeadRight" x="952" y="146">
              <bitmap>media/images/box/box-diagram.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="Pattern Images_onStart" type="0" type_size="1" nature="2" inner="0" tooltip="This input has been automatically generated&#x0A;by converting several boxes into a single box." id="2" />
              <Output name="PatternImages_detectionGood" type="0" type_size="1" nature="2" inner="0" tooltip="This output has been automatically generated&#x0A;by converting several boxes into a single box." id="3" />
              <Timeline enable="0">
                <BehaviorLayer name="behavior_layer1">
                  <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram scale="52.9732">
                      <Box name="Pattern Images" id="11" localization="8" tooltip="Enter tooltip here" x="74" y="194">
                        <bitmap>media/images/box/box-diagram.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import Image
import ImageDraw
import time
import os,sys
import cv2 as cv

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):

        flag = self.showNaoImage()
        if (flag == 1):
            global imNum
            imNum = imNum+1
            self.detectionGood()
            self.onUnload()
            #self.onStopped()
        else:
            self.detectionFailure()
            self.onUnload()
            #self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        #self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass

    def sayWord(self,s):
        ttsProxy=ALProxy("ALTextToSpeech")
        ttsProxy.say(s)


    def showNaoImage(self):

        camProxy = ALProxy("ALVideoDevice")
        resolution = 2    # VGA
        colorSpace = 11   # RGB
        found = 0

        videoClient = camProxy.subscribe("python_client", resolution, colorSpace, 5)

        t0 = time.time()

        naoImage = camProxy.getImageRemote(videoClient)

        # Get the image size and pixel array.
        imageWidth = naoImage[0]
        imageHeight = naoImage[1]
        array = naoImage[6]

        # Create a PIL Image from our pixel array.
        im = Image.fromstring("RGB", (imageWidth, imageHeight), array)

        # Create ipl Image to use with opencv
        cv_img = cv.CreateImageHeader(im.size, cv.IPL_DEPTH_8U, 3)  # RGB image
        cv.SetData(cv_img, im.tostring(), im.size[0]*3)
        cv.CvtColor(cv_img, cv_img, cv.CV_RGB2BGR)

        gray_image=cv.CreateImage(cv.GetSize(cv_img),8,1)
        cv.CvtColor(cv_img,gray_image,cv.CV_BGR2GRAY)


        (found,corners)=cv.FindChessboardCorners(gray_image,(7,5),cv.CV_CALIB_CB_ADAPTIVE_THRESH| cv.CV_CALIB_CB_FILTER_QUADS)
        if found == 1:

            self.sayWord("Corners Detected")

            self.sayWord("Saving Image")

        else:

            self.sayWord("Corners can not be detected")

            flag = 0
            camProxy.unsubscribe(videoClient)
            return flag


        t1 = time.time()

        # Time the image transfer.
        self.logger.info("acquisition delay "+str(t1 - t0))

        camProxy.unsubscribe(videoClient)


        self.logger.info(str(imNum))

        # Save the image.
        imName = "image"+str(imNum)+".jpg"
        im.save("/home/nao/SavedImages/"+imName)
        self.sayWord("Image"+str(imNum)+"Saved")

        flag = 1

        return flag]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="detectionFailure" type="1" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                        <Output name="detectionGood" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                      </Box>
                      <Box name="left" id="12" localization="8" tooltip='Robot will go to the position &quot;left&#x0A;Position description : &#x0A;' x="99" y="33">
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="20">
                          <ActuatorList model="nao">
                            <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                              <Key frame="20" value="26.0135" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                              <Key frame="20" value="-0.969217" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                              <Key frame="20" value="83.3189" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                              <Key frame="20" value="8.96255" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                              <Key frame="20" value="-52.5617" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                              <Key frame="20" value="-21.7948" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                              <Key frame="20" value="-62.4934" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                              <Key frame="20" value="0.2112" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                              <Key frame="20" value="90.3551" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                              <Key frame="20" value="-14.0651" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                              <Key frame="20" value="58.7093" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                              <Key frame="20" value="37.9716" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                              <Key frame="20" value="42.1856" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                              <Key frame="20" value="0.258" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                              <Key frame="20" value="-13.3571" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                              <Key frame="20" value="2.46338" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                              <Key frame="20" value="12.2194" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                              <Key frame="20" value="-4.13332" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                              <Key frame="20" value="3.24959" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                              <Key frame="20" value="-2.81013" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                              <Key frame="20" value="-8.25942" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                              <Key frame="20" value="11.5114" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                              <Key frame="20" value="-5.29" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                              <Key frame="20" value="5.89115" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                              <Key frame="20" value="6.77007" />
                            </ActuatorCurve>
                          </ActuatorList>
                        </Timeline>
                      </Box>
                      <Box name="Pattern Images" id="14" localization="8" tooltip="Enter tooltip here" x="216" y="28">
                        <bitmap>media/images/box/box-diagram.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import Image
import ImageDraw
import time
import os,sys
import cv2 as cv

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):

        flag = self.showNaoImage()
        if (flag == 1):
            global imNum
            imNum = imNum+1
            self.detectionGood()
            self.onUnload()
            #self.onStopped()
        else:
            self.detectionFailure()
            self.onUnload()
            #self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        #self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass

    def sayWord(self,s):
        ttsProxy=ALProxy("ALTextToSpeech")
        ttsProxy.say(s)


    def showNaoImage(self):

        camProxy = ALProxy("ALVideoDevice")
        resolution = 2    # VGA
        colorSpace = 11   # RGB
        found = 0

        videoClient = camProxy.subscribe("python_client", resolution, colorSpace, 5)

        t0 = time.time()

        naoImage = camProxy.getImageRemote(videoClient)

        # Get the image size and pixel array.
        imageWidth = naoImage[0]
        imageHeight = naoImage[1]
        array = naoImage[6]

        # Create a PIL Image from our pixel array.
        im = Image.fromstring("RGB", (imageWidth, imageHeight), array)

        # Create ipl Image to use with opencv
        cv_img = cv.CreateImageHeader(im.size, cv.IPL_DEPTH_8U, 3)  # RGB image
        cv.SetData(cv_img, im.tostring(), im.size[0]*3)
        cv.CvtColor(cv_img, cv_img, cv.CV_RGB2BGR)

        gray_image=cv.CreateImage(cv.GetSize(cv_img),8,1)
        cv.CvtColor(cv_img,gray_image,cv.CV_BGR2GRAY)


        (found,corners)=cv.FindChessboardCorners(gray_image,(7,5),cv.CV_CALIB_CB_ADAPTIVE_THRESH| cv.CV_CALIB_CB_FILTER_QUADS)
        if found == 1:

            self.sayWord("Corners Detected")

            self.sayWord("Saving Image")

        else:

            self.sayWord("Corners can not be detected")

            flag = 0
            camProxy.unsubscribe(videoClient)
            return flag


        t1 = time.time()

        # Time the image transfer.
        self.logger.info("acquisition delay "+str(t1 - t0))

        camProxy.unsubscribe(videoClient)


        self.logger.info(str(imNum))

        # Save the image.
        imName = "image"+str(imNum)+".jpg"
        im.save("/home/nao/SavedImages/"+imName)
        self.sayWord("Image"+str(imNum)+"Saved")

        flag = 1

        return flag]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="detectionFailure" type="1" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                        <Output name="detectionGood" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                      </Box>
                      <Box name="right" id="15" localization="8" tooltip='Robot will go to the position &quot;right&#x0A;Position description : &#x0A;' x="370" y="113">
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="20">
                          <ActuatorList model="nao">
                            <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                              <Key frame="20" value="-32.9618" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                              <Key frame="20" value="-1.145" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                              <Key frame="20" value="83.4068" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                              <Key frame="20" value="8.96255" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                              <Key frame="20" value="-52.5617" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                              <Key frame="20" value="-21.7948" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                              <Key frame="20" value="-62.4934" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                              <Key frame="20" value="0.2108" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                              <Key frame="20" value="90.3551" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                              <Key frame="20" value="-14.0651" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                              <Key frame="20" value="58.7093" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                              <Key frame="20" value="37.8837" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                              <Key frame="20" value="42.1856" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                              <Key frame="20" value="0.258" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                              <Key frame="20" value="-13.445" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                              <Key frame="20" value="2.46338" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                              <Key frame="20" value="12.2194" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                              <Key frame="20" value="-4.13332" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                              <Key frame="20" value="2.89802" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                              <Key frame="20" value="-2.81013" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                              <Key frame="20" value="-8.25942" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                              <Key frame="20" value="11.1598" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                              <Key frame="20" value="-5.29" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                              <Key frame="20" value="5.53958" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                              <Key frame="20" value="6.77007" />
                            </ActuatorCurve>
                          </ActuatorList>
                        </Timeline>
                      </Box>
                      <Box name="Pattern Images" id="16" localization="8" tooltip="Enter tooltip here" x="532" y="115">
                        <bitmap>media/images/box/box-diagram.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import Image
import ImageDraw
import time
import os,sys
import cv2 as cv

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):

        flag = self.showNaoImage()
        if (flag == 1):
            global imNum
            imNum = imNum+1
            self.detectionGood()
            self.onUnload()
            #self.onStopped()
        else:
            self.detectionFailure()
            self.onUnload()
            #self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        #self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass

    def sayWord(self,s):
        ttsProxy=ALProxy("ALTextToSpeech")
        ttsProxy.say(s)


    def showNaoImage(self):

        camProxy = ALProxy("ALVideoDevice")
        resolution = 2    # VGA
        colorSpace = 11   # RGB
        found = 0

        videoClient = camProxy.subscribe("python_client", resolution, colorSpace, 5)

        t0 = time.time()

        naoImage = camProxy.getImageRemote(videoClient)

        # Get the image size and pixel array.
        imageWidth = naoImage[0]
        imageHeight = naoImage[1]
        array = naoImage[6]

        # Create a PIL Image from our pixel array.
        im = Image.fromstring("RGB", (imageWidth, imageHeight), array)

        # Create ipl Image to use with opencv
        cv_img = cv.CreateImageHeader(im.size, cv.IPL_DEPTH_8U, 3)  # RGB image
        cv.SetData(cv_img, im.tostring(), im.size[0]*3)
        cv.CvtColor(cv_img, cv_img, cv.CV_RGB2BGR)

        gray_image=cv.CreateImage(cv.GetSize(cv_img),8,1)
        cv.CvtColor(cv_img,gray_image,cv.CV_BGR2GRAY)


        (found,corners)=cv.FindChessboardCorners(gray_image,(7,5),cv.CV_CALIB_CB_ADAPTIVE_THRESH| cv.CV_CALIB_CB_FILTER_QUADS)
        if found == 1:

            self.sayWord("Corners Detected")

            self.sayWord("Saving Image")

        else:

            self.sayWord("Corners can not be detected")

            flag = 0
            camProxy.unsubscribe(videoClient)
            return flag


        t1 = time.time()

        # Time the image transfer.
        self.logger.info("acquisition delay "+str(t1 - t0))

        camProxy.unsubscribe(videoClient)


        self.logger.info(str(imNum))

        # Save the image.
        imName = "image"+str(imNum)+".jpg"
        im.save("/home/nao/SavedImages/"+imName)
        self.sayWord("Image"+str(imNum)+"Saved")

        flag = 1

        return flag]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="detectionFailure" type="1" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                        <Output name="detectionGood" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                      </Box>
                      <Box name="Init" id="26" localization="8" tooltip='Robot will go to the position &quot;Init&#x0A;Position description : Nao is ready to do anything from this position !&#x0A;' x="368" y="13">
                        <bitmap>media/images/positions/Pos_init.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="20">
                          <ActuatorList model="nao">
                            <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                              <Key frame="20" value="80" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                              <Key frame="20" value="20" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                              <Key frame="20" value="-80" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                              <Key frame="20" value="-60" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                              <Key frame="20" value="80" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                              <Key frame="20" value="-20" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                              <Key frame="20" value="80" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                              <Key frame="20" value="60" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                              <Key frame="20" value="-25" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                              <Key frame="20" value="40" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                              <Key frame="20" value="-20" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                              <Key frame="20" value="-25" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                              <Key frame="20" value="40" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                              <Key frame="20" value="-20" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                          </ActuatorList>
                        </Timeline>
                      </Box>
                      <Box name="Init" id="1" localization="8" tooltip='Robot will go to the position &quot;Init&#x0A;Position description : Nao is ready to do anything from this position !&#x0A;' x="715" y="51">
                        <bitmap>media/images/positions/Pos_init.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="20">
                          <ActuatorList model="nao">
                            <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                              <Key frame="20" value="80" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                              <Key frame="20" value="20" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                              <Key frame="20" value="-80" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                              <Key frame="20" value="-60" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                              <Key frame="20" value="80" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                              <Key frame="20" value="-20" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                              <Key frame="20" value="80" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                              <Key frame="20" value="60" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                              <Key frame="20" value="-25" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                              <Key frame="20" value="40" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                              <Key frame="20" value="-20" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                              <Key frame="20" value="-25" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                              <Key frame="20" value="40" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                              <Key frame="20" value="-20" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                          </ActuatorList>
                        </Timeline>
                      </Box>
                      <Box name="Walk To" id="3" localization="8" tooltip="Make NAO walk to a configured point relative to its current location." x="918" y="442">
                        <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #~ self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        self.onStopped()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                        <Parameter name="Distance X (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0.2" min="-2" max="2" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="5" />
                        <Parameter name="Distance Y (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-2" max="2" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="6" />
                        <Parameter name="Theta (rad)" inherits_from_parent="0" content_type="2" value="1.3" default_value="0" min="-3.14" max="3.14" tooltip="The orientation in radians for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="7" />
                        <Parameter name="Left arm enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate left arm motion during the walk to make it more realistic." id="8" />
                        <Parameter name="Right arm enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate right arm motion during the walk to make it more realistic." id="9" />
                        <Parameter name="Stop walk when foot contact is lost" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If this option is activated, NAO stops walking when he loses foot contact with&#x0A;the ground. Else, he just keeps walking." id="10" />
                        <Timeline enable="0">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram>
                                <Box name="Walk To Advanced" id="3" localization="8" tooltip="Make NAO walk to a configured point relative to his current location with specific gait parameters." x="195" y="73">
                                  <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.motion = ALProxy("ALMotion")
        footGaitConfigMin = self.motion.getFootGaitConfig("Min")
        footGaitConfigMax = self.motion.getFootGaitConfig("Max")
        self.dFootGaitConfig = {}
        for i in range(len(footGaitConfigMin)):
            # [0] = key ("MaxStepX" for ex)
            # [1] = min
            # [2] = max
            self.dFootGaitConfig[footGaitConfigMin[i][0]] = [footGaitConfigMin[i][1], footGaitConfigMax[i][1]]

    def onLoad(self):
        pass

    def onUnload(self):
        self.motion.setWalkTargetVelocity(0.0, 0.0, 0.0, 0.0)

    def onInput_onStart(self):
        # send walk configuration to ALMotion
        self.motion.setWalkArmsEnable(self.getParameter("Left arm enabled"), self.getParameter("Right arm enabled"))
        self.motion.setMotionConfig([["ENABLE_FOOT_CONTACT_PROTECTION",self.getParameter("Stop walk when foot contact is lost")]])
        for k, v in self.dFootGaitConfig.iteritems():
            for unit in ["m", "rad", "%"]:
                try: # try for each unit and do nothing if value in gaitConfig but not in parameters
                    param = self.getParameter( str(k) + " (" + unit + ")" )
                    if( unit == "%" ):
                        param = param / 100.
                    if( len(v) == 2 ):
                        v.append( param )
                    else:
                        v[2] = param
                    break
                except:
                    pass

        gaitConfig = []
        for k, v in self.dFootGaitConfig.iteritems():
            try:
                gaitConfig.append( [k, v[2]] )
            except: # if some value added in gaitConfig but not in parameters
                pass
        # active walk process
        self.motion.walkTo(self.getParameter("Distance X (m)"), self.getParameter("Distance Y (m)"), self.getParameter("Theta (rad)"), gaitConfig)
         # The walk is finished so output
        self.onStopped() #~ activate output of the box

    def onInput_onStop(self):
        self.onUnload()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                  <Parameter name="Distance X (m)" inherits_from_parent="1" content_type="2" value="0.2" default_value="0.2" min="-2" max="2" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="5" />
                                  <Parameter name="Distance Y (m)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-2" max="2" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="6" />
                                  <Parameter name="Theta (rad)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-3.14" max="3.14" tooltip="The orientation in radians for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="7" />
                                  <Parameter name="Left arm enabled" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="Activate left arm motion during the walk to make it more realistic." id="8" />
                                  <Parameter name="Right arm enabled" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="Activate right arm motion during the walk to make it more realistic." id="9" />
                                  <Parameter name="Stop walk when foot contact is lost" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="If this option is activated, NAO stops walking when he loses foot contact with&#x0A;the ground. Else, he just keeps walking." id="10" />
                                  <Parameter name="MaxStepX (m)" inherits_from_parent="0" content_type="2" value="0.04" default_value="0.04" min="0.001" max="0.06" tooltip="Maximum length of forward/backward step." id="11" />
                                  <Parameter name="MaxStepY (m)" inherits_from_parent="0" content_type="2" value="0.14" default_value="0.14" min="0.101" max="0.16" tooltip="Maximum length of lateral step." id="12" />
                                  <Parameter name="MaxStepTheta (rad)" inherits_from_parent="0" content_type="2" value="0.349065" default_value="0.349065" min="0.001" max="0.523598" tooltip="Maximum length of rotational step." id="13" />
                                  <Parameter name="MaxStepFrequency (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Maximum step frequency." id="14" />
                                  <Parameter name="StepHeight (m)" inherits_from_parent="0" content_type="2" value="0.02" default_value="0.02" min="0.005" max="0.04" tooltip="Height of the step i.e. how high NAO put his feet up during the walk." id="15" />
                                  <Parameter name="TorsoWx (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-0.122173" max="0.122173" tooltip="Lateral angle of the torso during the walk.&#x0A;&#x0A;Note: A positive value means that NAO will be tilted to the right. A negative&#x0A;value means he is tilted to the left." id="16" />
                                  <Parameter name="TorsoWy (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-0.122173" max="0.122173" tooltip="Angle of the torso toward forward/backward during the walk.&#x0A;&#x0A;Note: A positive value means that NAO will be inclined forward. A negative&#x0A;value means he is inclined backward." id="17" />
                                  <Resource name="Legs" type="Lock" timeout="0" />
                                </Box>
                                <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="2" />
                                <Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                        <Resource name="Legs" type="Lock" timeout="0" />
                      </Box>
                      <Box name="Init" id="2" localization="8" tooltip='Robot will go to the position &quot;Init&#x0A;Position description : Nao is ready to do anything from this position !&#x0A;' x="945" y="213">
                        <bitmap>media/images/positions/Pos_init.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="20">
                          <ActuatorList model="nao">
                            <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                              <Key frame="20" value="80" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                              <Key frame="20" value="20" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                              <Key frame="20" value="-80" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                              <Key frame="20" value="-60" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                              <Key frame="20" value="80" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                              <Key frame="20" value="-20" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                              <Key frame="20" value="80" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                              <Key frame="20" value="60" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                              <Key frame="20" value="-25" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                              <Key frame="20" value="40" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                              <Key frame="20" value="-20" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                              <Key frame="20" value="-25" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                              <Key frame="20" value="40" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                              <Key frame="20" value="-20" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                          </ActuatorList>
                        </Timeline>
                      </Box>
                      <Box name="Walk To" id="4" localization="8" tooltip="Make NAO walk to a configured point relative to its current location." x="66" y="389">
                        <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #~ self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        self.onStopped()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                        <Parameter name="Distance X (m)" inherits_from_parent="0" content_type="2" value="-0.1" default_value="0.2" min="-2" max="2" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="5" />
                        <Parameter name="Distance Y (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-2" max="2" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="6" />
                        <Parameter name="Theta (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-3.14" max="3.14" tooltip="The orientation in radians for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="7" />
                        <Parameter name="Left arm enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate left arm motion during the walk to make it more realistic." id="8" />
                        <Parameter name="Right arm enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate right arm motion during the walk to make it more realistic." id="9" />
                        <Parameter name="Stop walk when foot contact is lost" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If this option is activated, NAO stops walking when he loses foot contact with&#x0A;the ground. Else, he just keeps walking." id="10" />
                        <Timeline enable="0">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram>
                                <Box name="Walk To Advanced" id="3" localization="8" tooltip="Make NAO walk to a configured point relative to his current location with specific gait parameters." x="195" y="73">
                                  <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.motion = ALProxy("ALMotion")
        footGaitConfigMin = self.motion.getFootGaitConfig("Min")
        footGaitConfigMax = self.motion.getFootGaitConfig("Max")
        self.dFootGaitConfig = {}
        for i in range(len(footGaitConfigMin)):
            # [0] = key ("MaxStepX" for ex)
            # [1] = min
            # [2] = max
            self.dFootGaitConfig[footGaitConfigMin[i][0]] = [footGaitConfigMin[i][1], footGaitConfigMax[i][1]]

    def onLoad(self):
        pass

    def onUnload(self):
        self.motion.setWalkTargetVelocity(0.0, 0.0, 0.0, 0.0)

    def onInput_onStart(self):
        # send walk configuration to ALMotion
        self.motion.setWalkArmsEnable(self.getParameter("Left arm enabled"), self.getParameter("Right arm enabled"))
        self.motion.setMotionConfig([["ENABLE_FOOT_CONTACT_PROTECTION",self.getParameter("Stop walk when foot contact is lost")]])
        for k, v in self.dFootGaitConfig.iteritems():
            for unit in ["m", "rad", "%"]:
                try: # try for each unit and do nothing if value in gaitConfig but not in parameters
                    param = self.getParameter( str(k) + " (" + unit + ")" )
                    if( unit == "%" ):
                        param = param / 100.
                    if( len(v) == 2 ):
                        v.append( param )
                    else:
                        v[2] = param
                    break
                except:
                    pass

        gaitConfig = []
        for k, v in self.dFootGaitConfig.iteritems():
            try:
                gaitConfig.append( [k, v[2]] )
            except: # if some value added in gaitConfig but not in parameters
                pass
        # active walk process
        self.motion.walkTo(self.getParameter("Distance X (m)"), self.getParameter("Distance Y (m)"), self.getParameter("Theta (rad)"), gaitConfig)
         # The walk is finished so output
        self.onStopped() #~ activate output of the box

    def onInput_onStop(self):
        self.onUnload()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                  <Parameter name="Distance X (m)" inherits_from_parent="1" content_type="2" value="0.2" default_value="0.2" min="-2" max="2" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="5" />
                                  <Parameter name="Distance Y (m)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-2" max="2" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="6" />
                                  <Parameter name="Theta (rad)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-3.14" max="3.14" tooltip="The orientation in radians for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="7" />
                                  <Parameter name="Left arm enabled" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="Activate left arm motion during the walk to make it more realistic." id="8" />
                                  <Parameter name="Right arm enabled" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="Activate right arm motion during the walk to make it more realistic." id="9" />
                                  <Parameter name="Stop walk when foot contact is lost" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="If this option is activated, NAO stops walking when he loses foot contact with&#x0A;the ground. Else, he just keeps walking." id="10" />
                                  <Parameter name="MaxStepX (m)" inherits_from_parent="0" content_type="2" value="0.04" default_value="0.04" min="0.001" max="0.06" tooltip="Maximum length of forward/backward step." id="11" />
                                  <Parameter name="MaxStepY (m)" inherits_from_parent="0" content_type="2" value="0.14" default_value="0.14" min="0.101" max="0.16" tooltip="Maximum length of lateral step." id="12" />
                                  <Parameter name="MaxStepTheta (rad)" inherits_from_parent="0" content_type="2" value="0.349065" default_value="0.349065" min="0.001" max="0.523598" tooltip="Maximum length of rotational step." id="13" />
                                  <Parameter name="MaxStepFrequency (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Maximum step frequency." id="14" />
                                  <Parameter name="StepHeight (m)" inherits_from_parent="0" content_type="2" value="0.02" default_value="0.02" min="0.005" max="0.04" tooltip="Height of the step i.e. how high NAO put his feet up during the walk." id="15" />
                                  <Parameter name="TorsoWx (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-0.122173" max="0.122173" tooltip="Lateral angle of the torso during the walk.&#x0A;&#x0A;Note: A positive value means that NAO will be tilted to the right. A negative&#x0A;value means he is tilted to the left." id="16" />
                                  <Parameter name="TorsoWy (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-0.122173" max="0.122173" tooltip="Angle of the torso toward forward/backward during the walk.&#x0A;&#x0A;Note: A positive value means that NAO will be inclined forward. A negative&#x0A;value means he is inclined backward." id="17" />
                                  <Resource name="Legs" type="Lock" timeout="0" />
                                </Box>
                                <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="2" />
                                <Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                        <Resource name="Legs" type="Lock" timeout="0" />
                      </Box>
                      <Box name="Pattern Images" id="5" localization="8" tooltip="Enter tooltip here" x="207" y="395">
                        <bitmap>media/images/box/box-diagram.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import Image
import ImageDraw
import time
import os,sys
import cv2 as cv

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):

        flag = self.showNaoImage()
        if (flag == 1):
            global imNum
            imNum = imNum+1
            self.detectionGood()
            self.onUnload()
            #self.onStopped()
        else:
            self.detectionFailure()
            self.onUnload()
            #self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        #self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass

    def sayWord(self,s):
        ttsProxy=ALProxy("ALTextToSpeech")
        ttsProxy.say(s)


    def showNaoImage(self):

        camProxy = ALProxy("ALVideoDevice")
        resolution = 2    # VGA
        colorSpace = 11   # RGB
        found = 0

        videoClient = camProxy.subscribe("python_client", resolution, colorSpace, 5)

        t0 = time.time()

        naoImage = camProxy.getImageRemote(videoClient)

        # Get the image size and pixel array.
        imageWidth = naoImage[0]
        imageHeight = naoImage[1]
        array = naoImage[6]

        # Create a PIL Image from our pixel array.
        im = Image.fromstring("RGB", (imageWidth, imageHeight), array)

        # Create ipl Image to use with opencv
        cv_img = cv.CreateImageHeader(im.size, cv.IPL_DEPTH_8U, 3)  # RGB image
        cv.SetData(cv_img, im.tostring(), im.size[0]*3)
        cv.CvtColor(cv_img, cv_img, cv.CV_RGB2BGR)

        gray_image=cv.CreateImage(cv.GetSize(cv_img),8,1)
        cv.CvtColor(cv_img,gray_image,cv.CV_BGR2GRAY)


        (found,corners)=cv.FindChessboardCorners(gray_image,(7,5),cv.CV_CALIB_CB_ADAPTIVE_THRESH| cv.CV_CALIB_CB_FILTER_QUADS)
        if found == 1:

            self.sayWord("Corners Detected")

            self.sayWord("Saving Image")

        else:

            self.sayWord("Corners can not be detected")

            flag = 0
            camProxy.unsubscribe(videoClient)
            return flag


        t1 = time.time()

        # Time the image transfer.
        self.logger.info("acquisition delay "+str(t1 - t0))

        camProxy.unsubscribe(videoClient)


        self.logger.info(str(imNum))

        # Save the image.
        imName = "image"+str(imNum)+".jpg"
        im.save("/home/nao/SavedImages/"+imName)
        self.sayWord("Image"+str(imNum)+"Saved")

        flag = 1

        return flag]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="detectionFailure" type="1" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                        <Output name="detectionGood" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                      </Box>
                      <Box name="Init" id="6" localization="8" tooltip='Robot will go to the position &quot;Init&#x0A;Position description : Nao is ready to do anything from this position !&#x0A;' x="683" y="217">
                        <bitmap>media/images/positions/Pos_init.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="20">
                          <ActuatorList model="nao">
                            <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                              <Key frame="20" value="80" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                              <Key frame="20" value="20" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                              <Key frame="20" value="-80" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                              <Key frame="20" value="-60" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                              <Key frame="20" value="80" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                              <Key frame="20" value="-20" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                              <Key frame="20" value="80" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                              <Key frame="20" value="60" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                              <Key frame="20" value="-25" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                              <Key frame="20" value="40" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                              <Key frame="20" value="-20" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                              <Key frame="20" value="-25" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                              <Key frame="20" value="40" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                              <Key frame="20" value="-20" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                          </ActuatorList>
                        </Timeline>
                      </Box>
                      <Box name="Walk To" id="7" localization="8" tooltip="Make NAO walk to a configured point relative to its current location." x="517" y="15">
                        <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #~ self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        self.onStopped()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                        <Parameter name="Distance X (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0.2" min="-2" max="2" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="5" />
                        <Parameter name="Distance Y (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-2" max="2" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="6" />
                        <Parameter name="Theta (rad)" inherits_from_parent="0" content_type="2" value="0.4" default_value="0" min="-3.14" max="3.14" tooltip="The orientation in radians for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="7" />
                        <Parameter name="Left arm enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate left arm motion during the walk to make it more realistic." id="8" />
                        <Parameter name="Right arm enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate right arm motion during the walk to make it more realistic." id="9" />
                        <Parameter name="Stop walk when foot contact is lost" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If this option is activated, NAO stops walking when he loses foot contact with&#x0A;the ground. Else, he just keeps walking." id="10" />
                        <Timeline enable="0">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram>
                                <Box name="Walk To Advanced" id="3" localization="8" tooltip="Make NAO walk to a configured point relative to his current location with specific gait parameters." x="195" y="73">
                                  <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.motion = ALProxy("ALMotion")
        footGaitConfigMin = self.motion.getFootGaitConfig("Min")
        footGaitConfigMax = self.motion.getFootGaitConfig("Max")
        self.dFootGaitConfig = {}
        for i in range(len(footGaitConfigMin)):
            # [0] = key ("MaxStepX" for ex)
            # [1] = min
            # [2] = max
            self.dFootGaitConfig[footGaitConfigMin[i][0]] = [footGaitConfigMin[i][1], footGaitConfigMax[i][1]]

    def onLoad(self):
        pass

    def onUnload(self):
        self.motion.setWalkTargetVelocity(0.0, 0.0, 0.0, 0.0)

    def onInput_onStart(self):
        # send walk configuration to ALMotion
        self.motion.setWalkArmsEnable(self.getParameter("Left arm enabled"), self.getParameter("Right arm enabled"))
        self.motion.setMotionConfig([["ENABLE_FOOT_CONTACT_PROTECTION",self.getParameter("Stop walk when foot contact is lost")]])
        for k, v in self.dFootGaitConfig.iteritems():
            for unit in ["m", "rad", "%"]:
                try: # try for each unit and do nothing if value in gaitConfig but not in parameters
                    param = self.getParameter( str(k) + " (" + unit + ")" )
                    if( unit == "%" ):
                        param = param / 100.
                    if( len(v) == 2 ):
                        v.append( param )
                    else:
                        v[2] = param
                    break
                except:
                    pass

        gaitConfig = []
        for k, v in self.dFootGaitConfig.iteritems():
            try:
                gaitConfig.append( [k, v[2]] )
            except: # if some value added in gaitConfig but not in parameters
                pass
        # active walk process
        self.motion.walkTo(self.getParameter("Distance X (m)"), self.getParameter("Distance Y (m)"), self.getParameter("Theta (rad)"), gaitConfig)
         # The walk is finished so output
        self.onStopped() #~ activate output of the box

    def onInput_onStop(self):
        self.onUnload()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                  <Parameter name="Distance X (m)" inherits_from_parent="1" content_type="2" value="0.2" default_value="0.2" min="-2" max="2" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="5" />
                                  <Parameter name="Distance Y (m)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-2" max="2" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="6" />
                                  <Parameter name="Theta (rad)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-3.14" max="3.14" tooltip="The orientation in radians for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="7" />
                                  <Parameter name="Left arm enabled" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="Activate left arm motion during the walk to make it more realistic." id="8" />
                                  <Parameter name="Right arm enabled" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="Activate right arm motion during the walk to make it more realistic." id="9" />
                                  <Parameter name="Stop walk when foot contact is lost" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="If this option is activated, NAO stops walking when he loses foot contact with&#x0A;the ground. Else, he just keeps walking." id="10" />
                                  <Parameter name="MaxStepX (m)" inherits_from_parent="0" content_type="2" value="0.04" default_value="0.04" min="0.001" max="0.06" tooltip="Maximum length of forward/backward step." id="11" />
                                  <Parameter name="MaxStepY (m)" inherits_from_parent="0" content_type="2" value="0.14" default_value="0.14" min="0.101" max="0.16" tooltip="Maximum length of lateral step." id="12" />
                                  <Parameter name="MaxStepTheta (rad)" inherits_from_parent="0" content_type="2" value="0.349065" default_value="0.349065" min="0.001" max="0.523598" tooltip="Maximum length of rotational step." id="13" />
                                  <Parameter name="MaxStepFrequency (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Maximum step frequency." id="14" />
                                  <Parameter name="StepHeight (m)" inherits_from_parent="0" content_type="2" value="0.02" default_value="0.02" min="0.005" max="0.04" tooltip="Height of the step i.e. how high NAO put his feet up during the walk." id="15" />
                                  <Parameter name="TorsoWx (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-0.122173" max="0.122173" tooltip="Lateral angle of the torso during the walk.&#x0A;&#x0A;Note: A positive value means that NAO will be tilted to the right. A negative&#x0A;value means he is tilted to the left." id="16" />
                                  <Parameter name="TorsoWy (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-0.122173" max="0.122173" tooltip="Angle of the torso toward forward/backward during the walk.&#x0A;&#x0A;Note: A positive value means that NAO will be inclined forward. A negative&#x0A;value means he is inclined backward." id="17" />
                                  <Resource name="Legs" type="Lock" timeout="0" />
                                </Box>
                                <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="2" />
                                <Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                        <Resource name="Legs" type="Lock" timeout="0" />
                      </Box>
                      <Box name="Walk To" id="8" localization="8" tooltip="Make NAO walk to a configured point relative to its current location." x="866" y="80">
                        <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #~ self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        self.onStopped()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                        <Parameter name="Distance X (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0.2" min="-2" max="2" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="5" />
                        <Parameter name="Distance Y (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-2" max="2" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="6" />
                        <Parameter name="Theta (rad)" inherits_from_parent="0" content_type="2" value="-0.4" default_value="0" min="-3.14" max="3.14" tooltip="The orientation in radians for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="7" />
                        <Parameter name="Left arm enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate left arm motion during the walk to make it more realistic." id="8" />
                        <Parameter name="Right arm enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate right arm motion during the walk to make it more realistic." id="9" />
                        <Parameter name="Stop walk when foot contact is lost" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If this option is activated, NAO stops walking when he loses foot contact with&#x0A;the ground. Else, he just keeps walking." id="10" />
                        <Timeline enable="0">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram>
                                <Box name="Walk To Advanced" id="3" localization="8" tooltip="Make NAO walk to a configured point relative to his current location with specific gait parameters." x="195" y="73">
                                  <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.motion = ALProxy("ALMotion")
        footGaitConfigMin = self.motion.getFootGaitConfig("Min")
        footGaitConfigMax = self.motion.getFootGaitConfig("Max")
        self.dFootGaitConfig = {}
        for i in range(len(footGaitConfigMin)):
            # [0] = key ("MaxStepX" for ex)
            # [1] = min
            # [2] = max
            self.dFootGaitConfig[footGaitConfigMin[i][0]] = [footGaitConfigMin[i][1], footGaitConfigMax[i][1]]

    def onLoad(self):
        pass

    def onUnload(self):
        self.motion.setWalkTargetVelocity(0.0, 0.0, 0.0, 0.0)

    def onInput_onStart(self):
        # send walk configuration to ALMotion
        self.motion.setWalkArmsEnable(self.getParameter("Left arm enabled"), self.getParameter("Right arm enabled"))
        self.motion.setMotionConfig([["ENABLE_FOOT_CONTACT_PROTECTION",self.getParameter("Stop walk when foot contact is lost")]])
        for k, v in self.dFootGaitConfig.iteritems():
            for unit in ["m", "rad", "%"]:
                try: # try for each unit and do nothing if value in gaitConfig but not in parameters
                    param = self.getParameter( str(k) + " (" + unit + ")" )
                    if( unit == "%" ):
                        param = param / 100.
                    if( len(v) == 2 ):
                        v.append( param )
                    else:
                        v[2] = param
                    break
                except:
                    pass

        gaitConfig = []
        for k, v in self.dFootGaitConfig.iteritems():
            try:
                gaitConfig.append( [k, v[2]] )
            except: # if some value added in gaitConfig but not in parameters
                pass
        # active walk process
        self.motion.walkTo(self.getParameter("Distance X (m)"), self.getParameter("Distance Y (m)"), self.getParameter("Theta (rad)"), gaitConfig)
         # The walk is finished so output
        self.onStopped() #~ activate output of the box

    def onInput_onStop(self):
        self.onUnload()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                  <Parameter name="Distance X (m)" inherits_from_parent="1" content_type="2" value="0.2" default_value="0.2" min="-2" max="2" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="5" />
                                  <Parameter name="Distance Y (m)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-2" max="2" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="6" />
                                  <Parameter name="Theta (rad)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-3.14" max="3.14" tooltip="The orientation in radians for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="7" />
                                  <Parameter name="Left arm enabled" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="Activate left arm motion during the walk to make it more realistic." id="8" />
                                  <Parameter name="Right arm enabled" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="Activate right arm motion during the walk to make it more realistic." id="9" />
                                  <Parameter name="Stop walk when foot contact is lost" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="If this option is activated, NAO stops walking when he loses foot contact with&#x0A;the ground. Else, he just keeps walking." id="10" />
                                  <Parameter name="MaxStepX (m)" inherits_from_parent="0" content_type="2" value="0.04" default_value="0.04" min="0.001" max="0.06" tooltip="Maximum length of forward/backward step." id="11" />
                                  <Parameter name="MaxStepY (m)" inherits_from_parent="0" content_type="2" value="0.14" default_value="0.14" min="0.101" max="0.16" tooltip="Maximum length of lateral step." id="12" />
                                  <Parameter name="MaxStepTheta (rad)" inherits_from_parent="0" content_type="2" value="0.349065" default_value="0.349065" min="0.001" max="0.523598" tooltip="Maximum length of rotational step." id="13" />
                                  <Parameter name="MaxStepFrequency (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Maximum step frequency." id="14" />
                                  <Parameter name="StepHeight (m)" inherits_from_parent="0" content_type="2" value="0.02" default_value="0.02" min="0.005" max="0.04" tooltip="Height of the step i.e. how high NAO put his feet up during the walk." id="15" />
                                  <Parameter name="TorsoWx (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-0.122173" max="0.122173" tooltip="Lateral angle of the torso during the walk.&#x0A;&#x0A;Note: A positive value means that NAO will be tilted to the right. A negative&#x0A;value means he is tilted to the left." id="16" />
                                  <Parameter name="TorsoWy (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-0.122173" max="0.122173" tooltip="Angle of the torso toward forward/backward during the walk.&#x0A;&#x0A;Note: A positive value means that NAO will be inclined forward. A negative&#x0A;value means he is inclined backward." id="17" />
                                  <Resource name="Legs" type="Lock" timeout="0" />
                                </Box>
                                <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="2" />
                                <Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                        <Resource name="Legs" type="Lock" timeout="0" />
                      </Box>
                      <Box name="left" id="9" localization="8" tooltip='Robot will go to the position &quot;left&#x0A;Position description : &#x0A;' x="343" y="346">
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="20">
                          <ActuatorList model="nao">
                            <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                              <Key frame="20" value="26.0135" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                              <Key frame="20" value="-0.969217" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                              <Key frame="20" value="83.3189" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                              <Key frame="20" value="8.96255" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                              <Key frame="20" value="-52.5617" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                              <Key frame="20" value="-21.7948" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                              <Key frame="20" value="-62.4934" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                              <Key frame="20" value="0.2112" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                              <Key frame="20" value="90.3551" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                              <Key frame="20" value="-14.0651" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                              <Key frame="20" value="58.7093" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                              <Key frame="20" value="37.9716" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                              <Key frame="20" value="42.1856" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                              <Key frame="20" value="0.258" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                              <Key frame="20" value="-13.3571" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                              <Key frame="20" value="2.46338" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                              <Key frame="20" value="12.2194" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                              <Key frame="20" value="-4.13332" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                              <Key frame="20" value="3.24959" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                              <Key frame="20" value="-2.81013" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                              <Key frame="20" value="-8.25942" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                              <Key frame="20" value="11.5114" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                              <Key frame="20" value="-5.29" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                              <Key frame="20" value="5.89115" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                              <Key frame="20" value="6.77007" />
                            </ActuatorCurve>
                          </ActuatorList>
                        </Timeline>
                      </Box>
                      <Box name="Pattern Images" id="10" localization="8" tooltip="Enter tooltip here" x="463" y="408">
                        <bitmap>media/images/box/box-diagram.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import Image
import ImageDraw
import time
import os,sys
import cv2 as cv

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):

        flag = self.showNaoImage()
        if (flag == 1):
            global imNum
            imNum = imNum+1
            self.detectionGood()
            self.onUnload()
            #self.onStopped()
        else:
            self.detectionFailure()
            self.onUnload()
            #self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        #self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass

    def sayWord(self,s):
        ttsProxy=ALProxy("ALTextToSpeech")
        ttsProxy.say(s)


    def showNaoImage(self):

        camProxy = ALProxy("ALVideoDevice")
        resolution = 2    # VGA
        colorSpace = 11   # RGB
        found = 0

        videoClient = camProxy.subscribe("python_client", resolution, colorSpace, 5)

        t0 = time.time()

        naoImage = camProxy.getImageRemote(videoClient)

        # Get the image size and pixel array.
        imageWidth = naoImage[0]
        imageHeight = naoImage[1]
        array = naoImage[6]

        # Create a PIL Image from our pixel array.
        im = Image.fromstring("RGB", (imageWidth, imageHeight), array)

        # Create ipl Image to use with opencv
        cv_img = cv.CreateImageHeader(im.size, cv.IPL_DEPTH_8U, 3)  # RGB image
        cv.SetData(cv_img, im.tostring(), im.size[0]*3)
        cv.CvtColor(cv_img, cv_img, cv.CV_RGB2BGR)

        gray_image=cv.CreateImage(cv.GetSize(cv_img),8,1)
        cv.CvtColor(cv_img,gray_image,cv.CV_BGR2GRAY)


        (found,corners)=cv.FindChessboardCorners(gray_image,(7,5),cv.CV_CALIB_CB_ADAPTIVE_THRESH| cv.CV_CALIB_CB_FILTER_QUADS)
        if found == 1:

            self.sayWord("Corners Detected")

            self.sayWord("Saving Image")

        else:

            self.sayWord("Corners can not be detected")

            flag = 0
            camProxy.unsubscribe(videoClient)
            return flag


        t1 = time.time()

        # Time the image transfer.
        self.logger.info("acquisition delay "+str(t1 - t0))

        camProxy.unsubscribe(videoClient)


        self.logger.info(str(imNum))

        # Save the image.
        imName = "image"+str(imNum)+".jpg"
        im.save("/home/nao/SavedImages/"+imName)
        self.sayWord("Image"+str(imNum)+"Saved")

        flag = 1

        return flag]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="detectionFailure" type="1" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                        <Output name="detectionGood" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                      </Box>
                      <Box name="right" id="13" localization="8" tooltip='Robot will go to the position &quot;right&#x0A;Position description : &#x0A;' x="604" y="492">
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="20">
                          <ActuatorList model="nao">
                            <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                              <Key frame="20" value="-32.9618" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                              <Key frame="20" value="-1.145" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                              <Key frame="20" value="83.4068" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                              <Key frame="20" value="8.96255" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                              <Key frame="20" value="-52.5617" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                              <Key frame="20" value="-21.7948" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                              <Key frame="20" value="-62.4934" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                              <Key frame="20" value="0.2108" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                              <Key frame="20" value="90.3551" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                              <Key frame="20" value="-14.0651" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                              <Key frame="20" value="58.7093" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                              <Key frame="20" value="37.8837" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                              <Key frame="20" value="42.1856" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                              <Key frame="20" value="0.258" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                              <Key frame="20" value="-13.445" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                              <Key frame="20" value="2.46338" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                              <Key frame="20" value="12.2194" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                              <Key frame="20" value="-4.13332" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                              <Key frame="20" value="2.89802" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                              <Key frame="20" value="-2.81013" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                              <Key frame="20" value="-8.25942" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                              <Key frame="20" value="11.1598" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                              <Key frame="20" value="-5.29" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                              <Key frame="20" value="5.53958" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                              <Key frame="20" value="6.77007" />
                            </ActuatorCurve>
                          </ActuatorList>
                        </Timeline>
                      </Box>
                      <Box name="Init" id="17" localization="8" tooltip='Robot will go to the position &quot;Init&#x0A;Position description : Nao is ready to do anything from this position !&#x0A;' x="602" y="392">
                        <bitmap>media/images/positions/Pos_init.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="1" fps="10" start_frame="1" end_frame="-1" size="20">
                          <ActuatorList model="nao">
                            <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                              <Key frame="20" value="80" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                              <Key frame="20" value="20" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                              <Key frame="20" value="-80" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                              <Key frame="20" value="-60" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                              <Key frame="20" value="80" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                              <Key frame="20" value="-20" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                              <Key frame="20" value="80" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                              <Key frame="20" value="60" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                              <Key frame="20" value="-25" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                              <Key frame="20" value="40" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                              <Key frame="20" value="-20" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                              <Key frame="20" value="-25" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                              <Key frame="20" value="40" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                              <Key frame="20" value="-20" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                              <Key frame="20" value="0" />
                            </ActuatorCurve>
                          </ActuatorList>
                        </Timeline>
                      </Box>
                      <Box name="Pattern Images" id="18" localization="8" tooltip="Enter tooltip here" x="726" y="470">
                        <bitmap>media/images/box/box-diagram.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import Image
import ImageDraw
import time
import os,sys
import cv2 as cv

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):

        flag = self.showNaoImage()
        if (flag == 1):
            global imNum
            imNum = imNum+1
            self.detectionGood()
            self.onUnload()
            #self.onStopped()
        else:
            self.detectionFailure()
            self.onUnload()
            #self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        #self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass

    def sayWord(self,s):
        ttsProxy=ALProxy("ALTextToSpeech")
        ttsProxy.say(s)


    def showNaoImage(self):

        camProxy = ALProxy("ALVideoDevice")
        resolution = 2    # VGA
        colorSpace = 11   # RGB
        found = 0

        videoClient = camProxy.subscribe("python_client", resolution, colorSpace, 5)

        t0 = time.time()

        naoImage = camProxy.getImageRemote(videoClient)

        # Get the image size and pixel array.
        imageWidth = naoImage[0]
        imageHeight = naoImage[1]
        array = naoImage[6]

        # Create a PIL Image from our pixel array.
        im = Image.fromstring("RGB", (imageWidth, imageHeight), array)

        # Create ipl Image to use with opencv
        cv_img = cv.CreateImageHeader(im.size, cv.IPL_DEPTH_8U, 3)  # RGB image
        cv.SetData(cv_img, im.tostring(), im.size[0]*3)
        cv.CvtColor(cv_img, cv_img, cv.CV_RGB2BGR)

        gray_image=cv.CreateImage(cv.GetSize(cv_img),8,1)
        cv.CvtColor(cv_img,gray_image,cv.CV_BGR2GRAY)


        (found,corners)=cv.FindChessboardCorners(gray_image,(7,5),cv.CV_CALIB_CB_ADAPTIVE_THRESH| cv.CV_CALIB_CB_FILTER_QUADS)
        if found == 1:

            self.sayWord("Corners Detected")

            self.sayWord("Saving Image")

        else:

            self.sayWord("Corners can not be detected")

            flag = 0
            camProxy.unsubscribe(videoClient)
            return flag


        t1 = time.time()

        # Time the image transfer.
        self.logger.info("acquisition delay "+str(t1 - t0))

        camProxy.unsubscribe(videoClient)


        self.logger.info(str(imNum))

        # Save the image.
        imName = "image"+str(imNum)+".jpg"
        im.save("/home/nao/SavedImages/"+imName)
        self.sayWord("Image"+str(imNum)+"Saved")

        flag = 1

        return flag]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="detectionFailure" type="1" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                        <Output name="detectionGood" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                      </Box>
                      <Link inputowner="12" indexofinput="2" outputowner="11" indexofoutput="4" />
                      <Link inputowner="14" indexofinput="2" outputowner="12" indexofoutput="4" />
                      <Link inputowner="15" indexofinput="2" outputowner="14" indexofoutput="4" />
                      <Link inputowner="16" indexofinput="2" outputowner="15" indexofoutput="4" />
                      <Link inputowner="11" indexofinput="2" outputowner="0" indexofoutput="2" />
                      <Link inputowner="0" indexofinput="3" outputowner="11" indexofoutput="5" />
                      <Link inputowner="26" indexofinput="2" outputowner="14" indexofoutput="5" />
                      <Link inputowner="1" indexofinput="2" outputowner="16" indexofoutput="5" />
                      <Link inputowner="11" indexofinput="2" outputowner="3" indexofoutput="4" />
                      <Link inputowner="2" indexofinput="2" outputowner="16" indexofoutput="4" />
                      <Link inputowner="4" indexofinput="2" outputowner="2" indexofoutput="4" />
                      <Link inputowner="5" indexofinput="2" outputowner="4" indexofoutput="4" />
                      <Link inputowner="6" indexofinput="2" outputowner="5" indexofoutput="5" />
                      <Link inputowner="0" indexofinput="3" outputowner="6" indexofoutput="4" />
                      <Link inputowner="7" indexofinput="2" outputowner="26" indexofoutput="4" />
                      <Link inputowner="0" indexofinput="3" outputowner="7" indexofoutput="4" />
                      <Link inputowner="8" indexofinput="2" outputowner="1" indexofoutput="4" />
                      <Link inputowner="0" indexofinput="3" outputowner="8" indexofoutput="4" />
                      <Link inputowner="9" indexofinput="2" outputowner="5" indexofoutput="4" />
                      <Link inputowner="13" indexofinput="2" outputowner="10" indexofoutput="4" />
                      <Link inputowner="17" indexofinput="2" outputowner="10" indexofoutput="5" />
                      <Link inputowner="10" indexofinput="2" outputowner="9" indexofoutput="4" />
                      <Link inputowner="7" indexofinput="2" outputowner="17" indexofoutput="4" />
                      <Link inputowner="18" indexofinput="2" outputowner="13" indexofoutput="4" />
                      <Link inputowner="3" indexofinput="2" outputowner="18" indexofoutput="4" />
                      <Link inputowner="1" indexofinput="2" outputowner="18" indexofoutput="5" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
              </Timeline>
            </Box>
            <Link inputowner="22" indexofinput="2" outputowner="36" indexofoutput="3" />
            <Link inputowner="0" indexofinput="4" outputowner="22" indexofoutput="4" />
            <Link inputowner="36" indexofinput="2" outputowner="0" indexofoutput="2" />
            <Link inputowner="27" indexofinput="2" outputowner="5" indexofoutput="4" />
            <Link inputowner="29" indexofinput="2" outputowner="30" indexofoutput="4" />
            <Link inputowner="2" indexofinput="2" outputowner="14" indexofoutput="4" />
            <Link inputowner="7" indexofinput="2" outputowner="29" indexofoutput="4" />
            <Link inputowner="6" indexofinput="2" outputowner="2" indexofoutput="4" />
            <Link inputowner="5" indexofinput="2" outputowner="6" indexofoutput="3" />
            <Link inputowner="47" indexofinput="2" outputowner="27" indexofoutput="4" />
            <Link inputowner="30" indexofinput="2" outputowner="47" indexofoutput="3" />
          </Diagram>
        </BehaviorKeyframe>
      </BehaviorLayer>
    </Timeline>
  </Box>
</ChoregrapheProject>
